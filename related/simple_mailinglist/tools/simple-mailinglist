#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Simple but extensible mailing list manager.

Commandline-Interface.

For documentation, see documentation of the simple_mailinglist module.

:Version:   2.0
:Usage:     see --help

:Requires:  Python >= 3.4 (TODO: check), Linux

:SeeAlso:   simple_mailinglist module

:Author:    Roland Koebler <rk@simple-is-better.org>
:Copyright: Roland Koebler
:License:   MIT/X11-like, see __license__

:VCS:       $Id$
"""

__version__ = "2.0"
__author__  = "Roland Koebler <rk@simple-is-better.org>"            #pylint: disable=bad-whitespace
__license__ = """Copyright (c) Roland Koebler, 2011-2017

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
IN THE SOFTWARE."""

#-----------------------------------------
# import

import sys
import argparse
import logging

import simple_mailinglist

#=========================================
def main(args=None):
    """Commandline-user-interface.

    Parse commandline and run mailinglists.

    :Returns:
        0: success
        2: invalid commandline-arguments
        10: unexpected error
        11: invalid configuration-file-syntax
        12: configfile-check failed
#        ... TODO
    """
    # parse parameters

    parser = argparse.ArgumentParser(
        description="""Simple but extensible mailing list manager.\nVersion %s by %s.""" % (__version__, __author__),
        formatter_class=argparse.RawDescriptionHelpFormatter)   # for keeping newlines in description)

    #pylint: disable=line-too-long, bad-whitespace
    parser.add_argument("-c", "--check",     action='store_true', default=False, help="check configuration and print errors")
    parser.add_argument("-p", "--process",   action='store_true', default=False, help="process mails and write mails to the outbox")
    parser.add_argument("-s", "--send",      action='store_true', default=False, help="send outbox")
    parser.add_argument(      "--cleanup",     type=int, metavar="days", help="delete all pending mails and moderation-mails older than 'days' days (e.g. 30)")
    parser.add_argument(      "--cleanup-all", type=int, metavar="days", help="delete all mails older than 'days' days (e.g. 30)")
    parser.add_argument(      "--daemon",    type=int, metavar="s", help="run as daemon, 0: use inotify, >0: poll every s seconds (NOT YET IMPLEMENTED)")
    parser.add_argument(      "--allowexec", action='store_true', default=False, help='allow execution of "extend_exec"-shell-command')

    parser.add_argument("cfg", type=str, metavar="cfg", nargs="+", help="mailinglist-config-files (JSON)")

    args = parser.parse_args(args)

    try:
        status = simple_mailinglist.run(args.cfg, args.check, args.process, args.send, args.cleanup, args.daemon, args.allowexec)
    except Exception as err:                                        #pylint: disable=broad-except
        print("FATAL: %s" % err)
        return 10

    print(status[1])
    return status[0]

#-----------------------------------------
if __name__ == '__main__':
    exitcode = main()                                               #pylint: disable=invalid-name
    logging.shutdown()
    sys.exit(exitcode)

#=========================================
