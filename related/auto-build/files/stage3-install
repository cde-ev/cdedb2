#!/bin/bash
set -e

echo ""
echo "cdedb - sandbox system: STAGE 3"
echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
echo ""
echo "Getting the system up to date..."
echo "--------------------------------------------"

cd /
sleep 3

apt-get -y update
apt-get -y upgrade

echo ""
echo "Getting a copy of the cdedb sources..."
echo "--------------------------------------------"

mkdir /cdedb2
chown cdedb:cdedb /cdedb2
# the following is a bit hacky, but for the actual autobuild we have to try
# another location
sudo -u cdedb git clone ssh://gitolite@rcs.cde-ev.de:20008/cdedb2 /cdedb2 || sudo -u cdedb git clone ssh://gitolite@10.8.0.2:63332/cdedb2 /cdedb2
cd /cdedb2
# correct upstream URL after auto-build
sudo -u cdedb git remote set-url origin ssh://gitolite@rcs.cde-ev.de:20008/cdedb2
chmod 600 /cdedb2/.ldap_rootpw
# build the documentation
make doc

echo ""
echo "Creating storage directory for uploads..."
echo "--------------------------------------------"

mkdir /var/lib/cdedb/
mkdir /var/lib/cdedb/foto/
mkdir /var/lib/cdedb/minor_form/
mkdir /var/lib/cdedb/ballot_result/
mkdir /var/lib/cdedb/assembly_attachment/
chown --recursive www-data:www-data /var/lib/cdedb

echo ""
echo "Initialize LDAP..."
echo "--------------------------------------------"

ldapmodify -Y EXTERNAL -H ldapi:/// -f /cdedb2/related/auto-build/files/stage3/init.ldif
TMPDIR=`mktemp -d`
slaptest -f /cdedb2/related/auto-build/files/stage3/temp_ldap.conf -F $TMPDIR
# stupid LDAP needs manual fixing
sed -n -i -e '/structuralObjectClass: olcSchemaConfig/q;p' "$TMPDIR/cn=config/cn=schema/cn="*"cdepersona.ldif"
sed -i -e 's/^dn: cn={[0-9]\+}cdepersona/dn: cn=cdepersona,cn=schema,cn=config/' "$TMPDIR/cn=config/cn=schema/cn="*"cdepersona.ldif"
sed -i -e 's/^cn: {[0-9]\+}cdepersona/cn: cdepersona/' "$TMPDIR/cn=config/cn=schema/cn="*"cdepersona.ldif"
ldapadd -Y EXTERNAL -H ldapi:/// -f "$TMPDIR/cn=config/cn=schema/cn="*"cdepersona.ldif"
rm -rf $TMPDIR
make ldap

echo ""
echo "Setting up the database..."
echo "--------------------------------------------"

cp /cdedb2/related/auto-build/files/stage3/postgresql.conf /etc/postgresql/9.6/main/
cp /cdedb2/related/auto-build/files/stage3/pg_hba.conf /etc/postgresql/9.6/main/
/etc/init.d/postgresql restart
sleep 3

make sql

cp /cdedb2/related/auto-build/files/stage3/pgbouncer.ini /etc/pgbouncer/
cp /cdedb2/related/pgbouncer_users.txt /etc/pgbouncer/userlist.txt
chmod 640 /etc/pgbouncer/userlist.txt
chown postgres:postgres /etc/pgbouncer/userlist.txt

cp /cdedb2/related/auto-build/files/stage3/pgbouncer /etc/default/

echo ""
echo "Create local config files..."
echo "--------------------------------------------"

cp /cdedb2/related/auto-build/files/stage3/localconfig.py /cdedb2/cdedb/
chown cdedb:cdedb /cdedb2/cdedb/localconfig.py
chmod 644 /cdedb2/cdedb/localconfig.py
cp /cdedb2/related/auto-build/files/stage3/applicationconfig.py /etc/cdedb-application-config.py
chown www-data:www-data /etc/cdedb-application-config.py
chmod 640 /etc/cdedb-application-config.py

echo ""
echo "Create central directory for log files..."
echo "--------------------------------------------"

mkdir -p /log
chown www-data:www-data /log

echo ""
echo "Set up the apache2..."
echo "--------------------------------------------"

for i in ssl wsgi; do
    a2enmod $i
done;

a2dissite 000-default

cp /cdedb2/related/auto-build/files/stage3/cdedb-site.conf /etc/apache2/sites-available
cp /cdedb2/related/auto-build/files/stage3/index.html /var/www/html/
chown www-data:www-data /var/www/html/index.html
a2ensite cdedb-site

echo "" > /etc/apache2/ports.conf

/etc/init.d/apache2 restart

echo ""
echo "Set up the fail2ban..."
echo "--------------------------------------------"

cp /cdedb2/related/auto-build/files/stage3/cdedb.conf /etc/fail2ban/filter.d/
cp /cdedb2/related/auto-build/files/stage3/jail.local /etc/fail2ban/

echo ""
echo "Disable auto-build init..."
echo "--------------------------------------------"

cat >/etc/rc.local <<EOF
#!/bin/bash
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.
exit 0
EOF

echo ""
echo "Wait for stuff to settle..."
echo "--------------------------------------------"

sleep 5
sync

echo ""
echo "Shrink image size..."
echo "--------------------------------------------"

dd if=/dev/zero of=/tmp/ZERO || echo 'Error ignored'
sync
sleep 1
rm -f /tmp/ZERO

## Finally, use reboot (together with -no-reboot of qemu) to stop the machine
## with the finalised image

echo ""
echo ""
echo ""
echo "Done. Will reboot..."

( sleep 2; reboot ) &
