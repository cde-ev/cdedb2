#!/bin/bash
set -e

echo ""
echo "cdedb - sandbox system: stage2"
echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
echo ""
echo "Providing the host keys..."
echo "--------------------------------------------"

# dPROD different ssh keys
mkdir -p /etc/ssh
chmod 755 /etc/ssh
cp /media/cdrom0/ssh_host* /etc/ssh
chmod 600 /etc/ssh/ssh_host*
chmod 644 /etc/ssh/ssh_host*.pub

# dPROD uses LetsEncrypt
mkdir -p /etc/ssl/apache2
cp /media/cdrom0/server* /etc/ssl/apache2/
chmod 600 /etc/ssl/apache2/server.key
chmod 644 /etc/ssl/apache2/server.pem

# dPROD not present
# add the self-signed certificate to the trusted ldap certificates
# (note the following step in stage3)
mkdir -p /etc/ldap/certs
cp /media/cdrom0/ldap.pem /etc/ldap/certs

echo ""
echo "Getting the system up to date..."
echo "--------------------------------------------"
# dPROD only main, no backports (less choice necessary)
cat > /etc/apt/sources.list <<EOF
deb http://deb.debian.org/debian bookworm main contrib non-free
deb-src http://deb.debian.org/debian bookworm main contrib non-free

deb http://deb.debian.org/debian-security/ bookworm-security main contrib non-free
deb-src http://deb.debian.org/debian-security/ bookworm-security main contrib non-free

deb http://deb.debian.org/debian bookworm-updates main contrib non-free
deb-src http://deb.debian.org/debian bookworm-updates main contrib non-free

deb http://deb.debian.org/debian bookworm-backports main contrib non-free
deb-src http://deb.debian.org/debian bookworm-backports main contrib non-free
EOF

sleep 3

apt-get -y update
apt-get -y upgrade

echo ""
echo "Setting up packets..."
echo "--------------------------------------------"

# this is categorized into
# - devtools
# - runtime dependencies (app, postgres, latex)
# - python libraries (libraries, tools)
# - playwright dependencies
apt-get install --yes --no-install-recommends                       \
    openssh-server sudo git file mc emacs-nox vim htop make gettext \
    \
    apache2 python3 gunicorn fail2ban tzdata                        \
    \
    ldap-utils                                                      \
    \
    postgresql-client postgresql postgresql-contrib pgbouncer       \
    \
    texlive texlive-plain-generic texlive-latex-extra               \
    texlive-lang-german texlive-luatex                              \
    \
    python3-psycopg2 python3-dateutil python3-babel                 \
    python3-icu python3-jinja2 python3-sphinx                       \
    python3-lxml python3-pil python3-webtest python3-werkzeug       \
    python3-ldap3 python3-passlib python3-bleach python3-magic      \
    python3-sphinx-rtd-theme python3-zxcvbn python3-markdown        \
    python3-requests python3-graphviz python3-phonenumbers          \
    python3-tabulate python3-mailmanclient python3-pyparsing        \
    python3-psycopg python3-psycopg-pool                            \
    \
    python3-pip python3-click isort python3-freezegun               \
    python3-coverage                                                \
    \
    libasound2 libatk-bridge2.0-0 libatk1.0-0 libatomic1            \
    libatspi2.0-0 libcups2 libdrm2 libenchant-2-2 libgbm1 libgles2  \
    libgstreamer-gl1.0-0 libharfbuzz-icu0 libhyphen0                \
    libmanette-0.2-0 libnspr4 libnss3 libopengl0 libwayland-client0 \
    libwoff1 libxcomposite1 libxdamage1 libxfixes3 libxkbcommon0    \
    libxrandr2

# runtime dependencies
python3 -m pip install --no-cache-dir --break-system-packages \
    ldaptor==21.2.0 \
    schulze_condorcet==2.0.1 \
    subman==0.1.1 \
    segno==1.5.2

# devtools
# dPROD not present
python3 -m pip install --no-cache-dir --break-system-packages \
    mypy==1.10.1 \
    flake8==3.8.4 \
    pylint==2.15.0 \
    ruff==0.1.1 \
    types-python-dateutil \
    types-bleach \
    types-Markdown \
    types-tabulate \
    'playwright>=1.37.0'

for file in /var/cache/apt/archives/*.deb
do
  shred --iteration=0 --zero --remove $file
done

echo ""
echo "We do not initialize playwright as this consumes lots of space."
echo "To do so later run the following command as user cdedb:"
echo "/usr/local/bin/playwright install"
echo "This matters only when executing the test suite and in that case"
echo "will fail with a helpful error message."

echo ""
echo "Disable private temp for Apache (this should be dev only)..."
echo "--------------------------------------------"
# dPROD PrivateTmp=true
sed -i -e 's/PrivateTmp=true/PrivateTmp=false/' /lib/systemd/system/apache2.service

echo ""
echo "Setting up system..."
echo "--------------------------------------------"

useradd -s /bin/bash -m cdb
useradd -s /bin/bash -m cdedb
# dPROD locked password instead of none
passwd --delete cdedb
groupadd --system www-cde
useradd --system -g www-cde -d /var/lib/cdedb -M www-cde

# dPROD allow empty passwords
echo "\nPermitEmptyPasswords yes" >> /etc/ssh/sshd_config

sudo -u cdedb touch /home/cdedb/.bashrc
echo "" >> /home/cdedb/.bashrc
echo "export EDITOR=nano" >> /home/cdedb/.bashrc
echo "" >> /home/cdedb/.bashrc
sudo -u cdedb touch /home/cdedb/.bash_profile
echo "cd /cdedb2" >> /home/cdedb/.bash_profile
echo "" >> /home/cdedb/.bash_profile
# dPROD no sudo privileges (personalized accounts instead)
echo "%cdedb ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers


cat > /etc/motd <<EOF

Welcome to the sandbox system of the CdEDB.

Find below a short summary of useful commands.

EOF

cat >> /etc/motd < /media/cdrom0/motd.txt

echo ""
echo "Setting up outgoing ssh..."
echo "--------------------------"

mkdir -p /home/cdedb/.ssh
chmod 755 /home/cdedb/.ssh
# dPROD different ssh keys
cp /media/cdrom0/ssh_user_rsa_key /home/cdedb/.ssh/id_rsa
cp /media/cdrom0/ssh_user_rsa_key.pub /home/cdedb/.ssh/id_rsa.pub
cp /media/cdrom0/ssh_user_known_hosts /home/cdedb/.ssh/known_hosts
chmod 600 /home/cdedb/.ssh/id_rsa
chmod 644 /home/cdedb/.ssh/id_rsa.pub
chown -R cdedb:cdedb /home/cdedb/.ssh/

echo ""
echo "Enable auto-build init..."
echo "--------------------------"

cat >/etc/rc.local <<EOF
#!/bin/bash
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.

mount /media/cdrom0 && /bin/sh /media/cdrom0/init

EOF

chmod +x /etc/rc.local

echo ""
echo ""
echo ""
echo "Done. Will reboot..."

( sleep 2; reboot ) &
