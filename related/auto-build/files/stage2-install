#!/bin/bash
set -e

echo ""
echo "cdedb - sandbox system: stage2"
echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
echo ""
echo "Prefer IPv4 over IPv6..."
echo "--------------------------------------------"

echo "precedence ::ffff:0:0/96  100" >> /etc/gai.conf

echo ""
echo "Providing the host keys..."
echo "--------------------------------------------"

mkdir -p /etc/ssh
chmod 755 /etc/ssh
cp /media/cdrom0/ssh_host* /etc/ssh
chmod 600 /etc/ssh/ssh_host*
chmod 644 /etc/ssh/ssh_host*.pub

mkdir -p /etc/ssl/apache2
cp /media/cdrom0/server* /etc/ssl/apache2/
chmod 600 /etc/ssl/apache2/server.key
chmod 644 /etc/ssl/apache2/server.pem

echo ""
echo "Getting the system up to date..."
echo "--------------------------------------------"
cat > /etc/apt/sources.list <<EOF
deb http://ftp.de.debian.org/debian bullseye main contrib non-free
deb-src http://ftp.de.debian.org/debian bullseye main contrib non-free

# TODO reenable once released
#deb http://security.debian.org/ bullseye/updates main contrib non-free
#deb-src http://security.debian.org/ bullseye/updates main contrib non-free

deb http://ftp.de.debian.org/debian bullseye-updates main contrib non-free
deb-src http://ftp.de.debian.org/debian bullseye-updates main contrib non-free

# wait till these actually exist
# deb http://ftp.de.debian.org/debian bullseye-backports main contrib non-free
# deb-src http://ftp.de.debian.org/debian bullseye-backports main contrib non-free
EOF

sleep 3

apt-get -y update
apt-get -y upgrade

echo ""
echo "Setting up packets..."
echo "--------------------------------------------"

echo 'slapd slapd/password1 password s1n2t3h4d5i6u7e8o9a0s1n2t3h4d5i6u7e8o9a0' | debconf-set-selections
echo 'slapd slapd/password2 password s1n2t3h4d5i6u7e8o9a0s1n2t3h4d5i6u7e8o9a0' | debconf-set-selections

# this is categorized into
# - devtools
# - runtime dependencies (app, ldap, postgres, latex)
# - python libraries (libraries, tools)
apt-get install --yes --no-install-recommends                       \
    openssh-server sudo git file mc emacs-nox vim htop make gettext \
    \
    apache2 python3 libapache2-mod-wsgi-py3 fail2ban                \
    \
    slapd ldap-utils                                                \
    \
    postgresql-client postgresql postgresql-contrib pgbouncer       \
    \
    texlive texlive-plain-generic texlive-latex-extra               \
    texlive-lang-german texlive-luatex                              \
    \
    python3-psycopg2 python3-dateutil python3-babel                 \
    python3-icu python3-jinja2 python3-tz python3-sphinx            \
    python3-lxml python3-pil python3-webtest python3-werkzeug       \
    python3-ldap3 python3-passlib python3-bleach python3-magic      \
    python3-sphinx-rtd-theme python3-zxcvbn python3-markdown        \
    python3-mailmanclient python3-requests python3-qrcode           \
    python3-vobject python3-typing-extensions                       \
    \
    python3-pip flake8 isort pylint3 python3-freezegun
# some packages interpret "recommends" very narrowly, breaking if they are missing
apt-get install --yes python3-coverage

python3 -m pip install --no-cache-dir mypy==0.790

for file in /var/cache/apt/archives/*.deb
do
  shred --iteration=0 --zero --remove $file
done

echo ""
echo "Disable private temp for Apache (this should be dev only)..."
echo "--------------------------------------------"
sed -i -e 's/PrivateTmp=true/PrivateTmp=false/' /lib/systemd/system/apache2.service

echo ""
echo "Setting up system..."
echo "--------------------------------------------"

# application user is www-data
useradd -s /bin/bash -m cdb
useradd -s /bin/bash -m -p REw.iVaxV7gAI cdedb # password: akademie

sudo -u cdedb touch /home/cdedb/.bashrc
echo "" >> /home/cdedb/.bashrc
echo "export EDITOR=nano" >> /home/cdedb/.bashrc
echo "" >> /home/cdedb/.bashrc
sudo -u cdedb touch /home/cdedb/.bash_profile
echo "cd /cdedb2" >> /home/cdedb/.bash_profile
echo "" >> /home/cdedb/.bash_profile
echo "%cdedb ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers

cat > /etc/motd <<EOF

Welcome to the sandbox system of the CdEDB.

Find below a short summary of useful commands.

EOF

cat >> /etc/motd < /media/cdrom0/motd.txt

echo ""
echo "Setting up outgoing ssh..."
echo "--------------------------"

mkdir -p /home/cdedb/.ssh
chmod 755 /home/cdedb/.ssh
cp /media/cdrom0/ssh_user_rsa_key /home/cdedb/.ssh/id_rsa
cp /media/cdrom0/ssh_user_rsa_key.pub /home/cdedb/.ssh/id_rsa.pub
cp /media/cdrom0/ssh_user_known_hosts /home/cdedb/.ssh/known_hosts
chmod 600 /home/cdedb/.ssh/id_rsa
chmod 644 /home/cdedb/.ssh/id_rsa.pub
chown -R cdedb:cdedb /home/cdedb/.ssh/

echo ""
echo "Enable auto-build init..."
echo "--------------------------"

cat >/etc/rc.local <<EOF
#!/bin/bash
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.

mount /media/cdrom0 && /bin/sh /media/cdrom0/init

EOF

chmod +x /etc/rc.local

echo ""
echo ""
echo ""
echo "Done. Will reboot..."

( sleep 2; reboot ) &
