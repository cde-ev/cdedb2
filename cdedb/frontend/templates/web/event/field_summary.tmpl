{% set sidenav_active='event_field_summary' %}
{% extends "web/event/base.tmpl" %}
{% import "web/util.tmpl" as util with context %}
{% set jshint='strong' %}
{% block scripts %}{{ util.cdedb_script('cdedb_helper.js') }}{{ util.cdedb_script('cdedb_dynamicrow.js') }}{% endblock %}
{% block title %}
    {% trans title=ambience['event']['title'] -%}
    	Configure Custom Fields ({{ title }})
    {%- endtrans %}
{% endblock %}
{% block breadcrumb %}
{{ super() }}
{{ util.breadcrumb_link(cdedblink("event/show_event"), ambience['event']['title'], icon="blackboard") }}
{{ util.breadcrumb_link(cdedblink("event/field_summary"), gettext("Configure Custom Fields"), active=True) }}
{% endblock %}
{% block heading %}
    {{ util.doclink('Handbuch_Orga_Hinweise') }}
    <h1 class="title">
        {% trans -%}Configure Custom Fields{%- endtrans %}
        <small>{{ util.make_icon('blackboard') }} {{ ambience['event']['title'] }}</small>
    </h1>
{% endblock %}

{# Macro for a general field, that can have each role in the DynamicRow workflow.
   non-deletable rows have a disabled 'delete'-checkbox,
   aclass is used to pass classes to the row, such as drow-row, drow-prototype, drow-new
   newrow rows will have 'create' instead of 'delete' checkbox and have 'data-basename' attributes #}
{% macro print_field(field_id, association, deletable, aclass="", newrow=False) %}
    <div class="col-md-6 {{ aclass }}" role="group">
        <div class="panel panel-default panel-condensed">
            <div class="panel-heading {% if "field_name_{}".format(field_id) in errors %}has-error{% endif %}">
                {{ util.input_text(name="field_name_{}".format(field_id),
                                   placeholder=gettext("Name of the Custom Field"),
                                   readonly=not newrow, aclass='drow-input form-control',
                                   arialabel=gettext("Name of the Custom Field"),
                                   attributes=('data-basename="field_name_"'|s if newrow else '')) }}
                {{ util.output_errors("field_name_{}".format(field_id)) }}
            </div>
            <div class="panel-body">
                <div class="form-group">
                    <label class="col-sm-4 control-label" for="{{ "input-select-kind_{}".format(field_id) }}">
                        {% trans -%}Datatype{%- endtrans %}
                    </label>
                    <div class="col-sm-5 {% if "kind_{}".format(field_id) in errors %}has-error{% endif %}">
                        {{ util.input_select(name="kind_{}".format(field_id), entries=enums['FieldDatatypes']|enum_entries(processing=gettext),
                            attributes=('data-basename="kind_"'|s if newrow else ''), aclass='drow-input form-control',
                            anid="input-select-kind_{}".format(field_id)) }}
                        {{ util.output_errors("kind_{}".format(field_id)) }}
                    </div>
                    <div class="col-sm-3">
                        <div class="text-right">
                            <span class="drow-buttonspace">
                                {% if newrow %}
                                    {{ util.input_checkbox("create_{}".format(field_id), label=gettext("Add"),
                                                           attributes='data-basename="create_"'|s, aclass='drow-indicator') }}
                                {% else %}
                                    {{ util.input_checkbox("delete_{}".format(field_id), label=gettext("Remove"),
                                                           readonly=not deletable, aclass='drow-indicator') }}
                                {% endif %}
                            </span>
                        </div>
                    </div>
                </div>
                {% if "association_{}".format(field_id) not in values %}
                    <div class="association-input-container">
                        {{ util.form_input_select(label=gettext("Fields for"),
                                                  name="association_{}".format(field_id),
                                                  entries=enums['FieldAssociations']|enum_entries(processing=gettext),
                                                  attributes=('data-basename="association_"'|s if newrow else ''),
                                                  aclass='drow-input form-control association-input')
                        }}
                    </div>
                {% else %}
                    {{ util.input_hidden(name="association_{}".format(field_id), value=association.value) }}
                {% endif %}
                {{ util.form_input_textarea(name="entries_{}".format(field_id), label=gettext("Options"),
                                            attributes=('data-basename="entries_"'|s if newrow else ''),
                                            aclass='drow-input') }}
            </div>
        </div>
    </div>
{% endmacro %}


{% block content %}
    <form action="{{ cdedblink('event/field_summary') }}" method="POST" id="fieldsummaryform" class="form-horizontal">
        {{ util.anti_csrf_token('event/field_summary') }}
        <ul class="nav nav-tabs mosp softhide" role="tablist" id="associations_tablist">
            {% for association in enums['FieldAssociations'] -%}
                <li role="presentation"{% if loop.first %} class="active"{% endif %}>
                    <a href="#tab_{{ association.name }}" data-toggle="tab" aria-controls="tab_{{ association.name }}"
                            role="tab">{{ util.make_icon(association.get_icon()) }} {{ gettext(association|string) }}</a>
                </li>
            {%- endfor %}
        </ul>
        <div class="tab-content" id="associations_tabcontent">
            {% for association in enums['FieldAssociations'] %}
                <div class="tab-pane active" role="tabpanel" id="tab_{{ association.name }}"
                        data-association-id="{{ association.value }}">
                    <h3 class="heading-underline">{{ util.make_icon(association.get_icon()) }} {{ gettext(association|string) }}</h3>
                    <div class="row">
                        {# Old items, already stored in the database #}
                        {% for field_id, entry in ambience['event']['fields']|keydictsort(EntitySorter.event_field) %}
                            {% if entry['association'] == association %}
                                {{ print_field(field_id, association, field_id not in is_referenced, 'drow-row') }}
                            {% endif %}
                        {% endfor %}

                        {# Items that were added by the user but failed validation. They are still new and have no official id. #}
                        {% for i in range(1, values.get('create_last_index', 0) + 1) %}
                            {% if values.get("association_{}".format(-i), '')|int == association.value %}
                                {{ print_field(-i, association, False, 'drow-new', newrow=True) }}
                            {% endif %}
                        {% endfor %}
                    </div>
                </div>
            {% endfor %}
        </div>

        <h3 class="heading-underline">{% trans -%}New Field{%- endtrans %}</h3>
        {# Prototype row. For non-JS users: an empty row with 'create'-checkbox, for JS: prototype for new rows. #}
        <div class="row">
            {{ print_field(-values.get('create_last_index', 0) - 1, None, False, 'drow-prototype', newrow=True) }}
        </div>

        <p>
            <button type="button" class="btn btn-success softhide pull-right" id="drow-addbutton">
                {{ util.make_icon('plus') }} {% trans -%}Add Field{%- endtrans %}
            </button>
            {{ util.input_submit(value=gettext("Save"), readonly=is_locked) }}
        </p>
    </form>
    <script type="text/javascript" nonce="{{ csp_nonce }}">
        /* Hide tabs except first one and headings and enable tab switching */
        $('#associations_tabcontent').children('.tab-pane').not(':eq(0)').removeClass('active');
        $('#fieldsummaryform').find('h3').hide();
        $('#associations_tablist').css('display', 'block').tab();
        $('#fieldsummaryform').cdedbDynamicRow({
            addButton: $('#drow-addbutton'),
            delButtonTitle: "{{ gettext("Remove Field") }}",
            callback: function() {
                var container = $('#associations_tabcontent').children('.tab-pane.active');
                /* Move new row to currently active tab */
                $(this).appendTo(container.children('.row'));
                /* Select association according to active tab and hide select box */
                $(this).find('.association-input').val(container.attr('data-association-id'));
                $(this).find('.association-input-container').hide();
                /* Refocus first field. Focus set by cdedbDynamicRow get's lost by moving to container. */
                $(this).find('.drow-input').first().focus();
             }});
        $('#fieldsummaryform').cdedbProtectChanges();
    </script>

    <hr />
    <p class="text-warning">{{ util.make_icon('warning-sign') }}
        {% trans -%}
            Deleting a field includes deletion of all data, which is stored
            in this field in any registration/course/lodgement. Changing
            the datatype of a field deletes all data that cannot be casted
            to the new type, upon saving.
        {%- endtrans %}</p>
    <p class="help-block">
        {{ util.make_icon('info-sign') }}
        {% trans format="<br /><code style='padding: 2px 0;'>%(value_one)s1;%(desc_one)s<br />%(value_two)s2;%(desc_two)s<br />â€¦</code><br />"|s|format(
                value_one=gettext("Value"), desc_one=gettext("Description Text"), value_two=gettext("Value"), desc_two=gettext("Description Text")) -%}
        	Enter Options in the following format:
            {{ format }}
            Setting Options will create a selection box when using this field.
            The description text will be displayed in the selection box,
            the value will be saved to the database upon selection.
            The value must be compatible to the selected datatype.
            Empty Options will be displayed as a free text/number/date field.
        {%- endtrans %}
    </p>
{% endblock %}
