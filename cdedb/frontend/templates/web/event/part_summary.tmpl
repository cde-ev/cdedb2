{% set sidenav_active='event_parts' %}
{% extends "web/event/base.tmpl" %}
{% import "web/util.tmpl" as util with context %}
{% set jshint='strong' %}
{% block scripts %}{{ util.cdedb_script('helper') }}{{ util.cdedb_script('dynamicrow') }}{% endblock %}
{% block title %}{{ ambience['event']['title']|e }} Teile konfigurieren{% endblock %}
{% block heading %}
    <h1 class="title">
        Teile konfigurieren
        <small>{{ util.make_icon('blackboard') }} {{ ambience['event']['title']|e }}</small>
    </h1>
{% endblock %}
{% block breadcrumb %}
    {{ super() }}
    {{ util.breadcrumb_link(cdedblink("event/show_event"), ambience['event']['title'], icon="blackboard") }}
    {{ util.breadcrumb_link(cdedblink("event/part_summary"), "Veranstaltungs-Teile", active=True) }}
{% endblock %}

{# Macro for a general course track, that can have each role in the (inner) DynamicRow workflow.
   aclass is used to pass classes to the row, such as drow-row1, drow-prototype1, drow-new1
   newrow rows will have 'create' instead of 'delete' checkbox and have 'data-basename' attributes #}
{% macro print_track(part_id, track_id, aclass="", newrow=False) %}
    <div class="p {{ aclass }}">
        <div class="input-group">
            {{ util.input_text(name="track_{}_{}".format(part_id, track_id), aclass='drow-input1 form-control',
                               attributes=('data-basename="track_" data-basename1="_"' if newrow else ''),
                               arialabel="Name der Kursschiene") }}
            <div class="input-group-addon">
                <div class="drow-buttonspace1">
                    {% if newrow %}
                        {{ util.input_checkbox("track_create_{}_{}".format(part_id, track_id), label="Hinzufügen",
                                               attributes='data-basename="track_create_"', aclass='drow-indicator1') }}
                    {% else %}
                        {{ util.input_checkbox("track_delete_{}_{}".format(part_id, track_id), label="Löschen",
                                               readonly=(has_registrations or track_id in referenced_tracks),
                                               aclass='drow-indicator1') }}
                    {% endif %}
                </div>
            </div>
        </div>
        {{ util.output_errors("track_{}_{}".format(part_id, track_id)) }}
    </div>
{% endmacro %}

{# Macro for a general part, that can have each role in the DynamicRow workflow.
   non-deletable rows have a disabled 'delete'-checkbox,
   aclass is used to pass classes to the row, such as drow-row, drow-prototype, drow-new
   newrow rows will have 'create' instead of 'delete' checkbox and have 'data-basename' attributes #}
{% macro print_part(part_id, deletable, tracks={}, aclass="", newrow=False) %}
    <div class="panel panel-default {{ aclass }}">
        <div class="panel-heading">
            {{ util.input_text(name="title_{}".format(part_id), placeholder="Name des Teils",
                               attributes=('data-basename="title_"' if newrow else ''),
                               aclass='drow-input form-control', arialabel="Name des Teils") }}
            {{ util.output_errors("title_{}".format(part_id)) }}
        </div>
        <div class="panel-body row">
            <div class="col-md-6">
                <label>Kursschienen</label>
                <div class="drow-container1 course-tracks-container" data-outerid0="{{ part_id }}">
                    {% for track_id, title in tracks|dictsort %}
                        {{ print_track(part_id, track_id, aclass='drow-row1') }}
                    {% endfor%}
                    {# Items that were added by the user but failed validation. They are still new and have no official id. #}
                    {% for i in range(1, values.get('track_create_last_index', {}).get(part_id, 0) + 1) %}
                        {{ print_track(part_id, -i, aclass='drow-new1', newrow=True) }}
                    {% endfor %}
                    {% if not has_registrations %}
                        {{ print_track(part_id, values.get('track_create_last_index', {}).get(part_id, 0) - 1,
                                       aclass='drow-prototype1', newrow=True) }}
                        <button type="button" class="btn btn-success btn-xs add-track-button softhide">
                            {{ util.make_icon('plus') }} Schiene hinzufügen</button>
                    {% endif %}
                </div>
            </div>
            <div class="col-md-6">
                {{ util.form_input_text(name="part_begin_{}".format(part_id), label="Beginn", type='date',
                                        attributes=('data-basename="part_begin_"' if newrow else ''),
                                        aclass='drow-input', placeholder="YYYY-MM-DD") }}
                {{ util.form_input_text(name="part_end_{}".format(part_id), label="Ende", type='date',
                                        attributes=('data-basename="part_end_"' if newrow else ''),
                                        aclass='drow-input', placeholder="YYYY-MM-DD") }}
                {% call util.form_input_general("fee_{}".format(part_id), "Teilnehmerbeitrag",
                                                anid="input-text-fee_".format(part_id)) %}
                    <div class="input-group">
                        {{ util.input_text(name="fee_{}".format(part_id),
                                           attributes=('data-basename="fee_"' if newrow else ''),
                                           aclass='drow-input form-control', anid="input-text-fee_".format(part_id)) }}
                        <span class="input-group-addon">
                            €
                        </span>
                    </div>
                {% endcall %}
                <div class="text-right">
                    <span class="drow-buttonspace">
                        {% if newrow %}
                            {{ util.input_checkbox("create_{}".format(part_id), label="Hinzufügen",
                                                   attributes='data-basename="create_"', aclass='drow-indicator') }}
                        {% else %}
                            {{ util.input_checkbox("delete_{}".format(part_id), label="Löschen",
                                                   readonly=not deletable, aclass='drow-indicator') }}
                        {% endif %}
                    </span>
                </div>
            </div>
        </div>
    </div>
{% endmacro %}

{% block content %}
    <form action="{{ cdedblink('event/part_summary')|e }}" method="POST" id="partsummaryform" class="form-horizontal">
        <div id="drow-container">
            {# Old items, already stored in the database #}
            {% for part_id, part in ambience['event']['parts']|xdictsort('part_begin') %}
                {{ print_part(part_id, part_id not in referenced_parts and not has_registrations,
                              tracks=part['tracks'], aclass='drow-row') }}
            {% endfor %}
            {# Items that were added by the user but failed validation. They are still new and have no official id. #}
            {% for i in range(1, values.get('create_last_index', 0) + 1) %}
                {{ print_part(-i, False, aclass='drow-new', newrow=True) }}
            {% endfor %}
            {% if not has_registrations %}
                {# Prototype row. For non-JS users: an empty row with 'create'-checkbox, for JS: prototype for new rows. #}
                {{ print_part(-values.get('create_last_index', 0) - 1, False, aclass='drow-prototype', newrow=True) }}
            {% endif %}
        </div>
        {% if not has_registrations %}
            <p>
                <button type="button" class="btn btn-success softhide pull-right" id="drow-addbutton">
                    {{ util.make_icon('plus') }} Teil hinzufügen
                </button>
            </p>
        {% endif %}
        {{ util.input_submit(value="Speichern", readonly=is_locked) }}
    </form>
    <script type="text/javascript">
        $('#drow-container').cdedbDynamicRow({
            addButton: $('#drow-addbutton'),
            delButtonTitle: "Teil löschen",
            callback: function() {
                $(this).find('.course-tracks-container').cdedbDynamicRow({
                    addButton: $(this).find('.add-track-button'),
                    delButtonTitle: "Schiene löschen",
                    nestingLevel: 1
                });
            }
        });
        $('.course-tracks-container').each(function() {
            $(this).cdedbDynamicRow({
                addButton: $(this).find('.add-track-button'),
                delButtonTitle: "Schiene löschen",
                nestingLevel: 1
            });
        });
        $('#partsummaryform').cdedbProtectChanges();
    </script>
{% endblock %}
