{% extends "web/event/base.tmpl" %}
{% set sidenav_active='event_course_stats' %}
{% import "web/util.tmpl" as util with context %}
{% import "web/event/generic.tmpl" as generic_event with context %}
{% block scripts %}
    {{ util.cdedb_script('cdedb_helper.js') }}
{% endblock %}
{% set jshint='weak' %}
{% block title %}
    {% if ambience['course'] %}
        {% trans course=ambience['course']['shortname'], event=ambience['event']['title'] %}
            Edit {{ course }} ({{ event }})
        {% endtrans %}
    {% else %}
        {% trans title=ambience['event']['title'] %}
            Add Course ({{ title }})
        {% endtrans %}
    {% endif %}
{% endblock %}
{% block breadcrumb %}
    {{ super() }}
    {{ util.breadcrumb_link(cdedblink("event/show_event"), ambience['event']['title'], icon="chalkboard-teacher") }}
    {{ util.breadcrumb_link(cdedblink("event/course_stats"), gettext("Courses")) }}
    {% if ambience['course'] %}
        {{ util.breadcrumb_link(cdedblink("event/show_course"), ambience['course']['shortname'], icon='book') }}
        {{ util.breadcrumb_link(cdedblink("event/change_course"), gettext("Edit"), active=True) }}
    {% else %}
        {{ util.breadcrumb_link(cdedblink("event/create_course"), gettext("Add Course"), active=True) }}
    {% endif %}
{% endblock %}
{% block heading %}
    {% if ambience['course'] %}
        {{ util.context_heading(gettext("Edit course %(course)s")|format(course=ambience['course']['shortname']),
                                ambience['event']['title'], 'chalkboard-teacher', gettext("Event")) }}
    {% else %}
        {{ util.context_heading(gettext("Add Course"), ambience['event']['title'],
                                'chalkboard-teacher', gettext("Event")) }}
    {% endif %}
{% endblock %}

{% block content %}
    {% set target = 'event/change_course' if ambience['course'] else 'event/create_course' %}
    <form action="{{ cdedblink(target) }}" method="POST" id="configurecourseform" class="form-horizontal">
        {{ util.anti_csrf_token(target) }}
        <h4 class="heading-underline">{% trans %}Meta{% endtrans %}</h4>
        {{ util.form_input_text(name="nr", label=gettext("Coursenumber")) }}
        {{ util.form_input_text(name="title", label=gettext("Long Title")) }}
        {{ util.form_input_text(name="shortname", label=gettext("Shortname")) }}
        {{ util.form_input_textarea(name="description", label=gettext("Description"), rows="5", markdown=True) }}
        {{ util.form_input_checkbox(name="is_visible", label=gettext("Visibility on Courselist"), defaultvalue="True",
                                    info=gettext(
                                        "If checked, the description will be publicly visible on the course list."
                                        " Instructors will only be visible to logged in users."
                                    ) if ambience['event'].course_list_visibility else gettext(
                                        "Once courselist visibility is activated, the description will be publicly"
                                        " visible if this is checked. Instructors will only be visible to logged in users."
                                    )) }}
        {{ util.form_input_textarea(name="notes", label=gettext("Notes"), rows="5", markdown=True) }}

        <h4 class="heading-underline">{% trans %}Course{% endtrans %}</h4>
        {{ util.form_input_text(name="instructors", label=gettext("Instructors")) }}
        {{ util.form_input_text(name="min_size", label=gettext("Minimum Size (excl. instr.)"), type="number", attributes='min="0"') }}
        {{ util.form_input_text(name="max_size", label=gettext("Maximum Size (excl. instr.)"), type="number", attributes='min="0"') }}
        {% if ambience['event']['tracks']|length == 1 %}
            {# hide selection of course tracks/segments if the event has only one track #}
            {{ util.input_hidden("segments", (ambience['event']['tracks']|list)[0]) }}
        {% else %}
            {{ util.form_input_checkboxes(name="segments", label=gettext("Course Tracks"),
                                          entries=ambience['event']['tracks'].values()|sort|entries('id', 'title'),
                                          aclass='checkbox_segment', slice=2,
                                          info=gettext(
                                              'Course tracks, in which the Course was originally offered.'
                                              ' Should only be altered if the course offers has been rescinded.'
                                              ' For courses cancelled by orgas use "Takes Place" below.'
                                          ) if ambience['course'] else None,
                                          sort=False) }}
        {% endif %}

        {% if ambience['course'] %}
            <h4 class="heading-underline">{% trans %}Status{% endtrans %}</h4>
            {% if ambience['event']['tracks']|length == 1 %}
                {# show only single checkbox if event has only one course track #}
                {{ util.form_input_checkbox("active_segments", label=gettext("Takes place"),
                                            value=(ambience['event']['tracks']|list)[0],
                                            info=gettext("Cancelled courses are no longer choosable by participants and "
                                                         "are marked in the courselist and the course assignment view.")
                                                if ambience['event']['is_course_state_visible']
                                                else gettext(
                                                    "This is an orga-internal marker to help with course assignment. To "
                                                    "make cancelled courses public, check Configuration → Visibility of "
                                                    "cancelled courses.")) }}
            {% else %}
                {{ util.form_input_checkboxes(name="active_segments", label=gettext("Takes place in"),
                                              entries=ambience['event']['tracks'].values()|sort|entries('id', 'title'),
                                              aclass='checkbox_active_segment', slice=2,
                                              info=gettext("Cancelled courses are no longer choosable by participants and "
                                                           "are marked in the courselist and the course assignment view.")
                                                  if ambience['event']['is_course_state_visible']
                                                  else gettext(
                                                      "This is an orga-internal marker to help with course assignment. To "
                                                      "make cancelled courses public, check Configuration → Visibility of "
                                                      "cancelled courses."),
                                              sort=False) }}
            {% endif %}
        {% endif %}

        {% if has_course_fields %}
            <h4 class="heading-underline">{% trans %}Fields{% endtrans %}</h4>
            {{ generic_event.print_field_inputs(enums['FieldAssociations'].course) }}
        {% endif %}

        {{ util.form_input_submit(label=gettext("Save"), cancellink=cdedblink("event/show_course" if ambience['course'] else "event/course_stats")) }}
    </form>
    <script nonce="{{ csp_nonce }}">
        $('#configurecourseform').cdedbProtectChanges();
        $(function(){
            function updateCheckbox($checkbox, enabled) {
                if (enabled) {
                    $checkbox.prop('disabled', false);
                } else {
                    $checkbox.prop('checked', false);
                    $checkbox.prop('disabled', true);
                }
            }
            $('.checkbox_segment').each(function () {
                var $related_checkbox = $('.checkbox_active_segment[value="' + $(this).val() + '"]');
                updateCheckbox($related_checkbox, $(this).prop('checked'));
                $(this).change(function(){
                    updateCheckbox($related_checkbox, $(this).prop('checked'));
                });
            });
        });
    </script>
{% endblock %}
