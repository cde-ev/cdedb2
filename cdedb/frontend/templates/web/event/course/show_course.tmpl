{% extends "web/event/base.tmpl" %}
{% set sidenav_active='event_course_stats' %}
{% import "web/util.tmpl" as util with context %}
{% import "web/event/generic.tmpl" as generic_event with context %}
{% block scripts %}
    {{ util.cdedb_script('cdedb_helper.js') }}
{% endblock %}
{% set jshint = 'weak' %}
{% block title %}
    {% trans course=ambience['course']['shortname'], title=ambience['event']['title'] %}
    	Course {{ course }} ({{ title }})
    {% endtrans %}
{% endblock %}
{% block breadcrumb %}
    {{ super() }}
    {{ util.breadcrumb_link(cdedblink("event/show_event"), ambience['event']['title'], icon="chalkboard-teacher") }}
    {{ util.breadcrumb_link(cdedblink("event/course_stats"), gettext("Courses")) }}
    {{ util.breadcrumb_link(cdedblink("event/show_course"), ambience['course']['shortname'], active=True,
            icon='book') }}
{% endblock %}
{% block heading %}
    {{ util.context_heading(gettext("Course %(nr)s: %(course)s")|format(nr=ambience['course']['nr'],
                                                                        course=ambience['course']['shortname']),
                            ambience['event']['title'], 'chalkboard-teacher', gettext("Event")) }}
    <div class="subtitle">
        {{ ambience['course']['title'] }}
    </div>
{% endblock %}

{% block content %}
    <div class="p button-par">
        {{ util.href(cdedblink('event/change_course_form'), gettext("Edit"), readonly=is_locked,
                     aclass="btn btn-sm btn-warning", icon="pen") }}
        {{ util.href(cdedblink('event/manage_attendees_form'), gettext("Manage Attendees"), readonly=is_locked,
                     aclass="btn btn-sm btn-warning", icon="users") }}
        {{ util.href(util.mailto(address="", to=";".join(instructor_emails)), gettext("Email to course instructors"),
                            icon="envelope", aclass="btn btn-sm btn-default", readonly=not instructor_emails,
                            title=(gettext("Send Mail to all course instructors.")
                                   if instructor_emails else
                                   gettext("No course instructors / email addresses available."))) }}
    </div>

            <dl class="dl-horizontal">
                <dt title="{% trans %}Instructor{% endtrans %}">{% trans %}Instructor{% endtrans %}</dt>
                <dd>{{ ambience['course']['instructors'] }}</dd>
                <dt title="{% trans %}Instructor{% endtrans %}">{% trans %}Maximum Size (excl. instr.){% endtrans %}</dt>
                <dd>{{ ambience['course']['max_size'] }}</dd>
                <dt title="{% trans %}Instructor{% endtrans %}">{% trans %}Minimum Size (excl. instr.){% endtrans %}</dt>
                <dd>{{ ambience['course']['min_size'] }}</dd>
            </dl>

            <dl class="dl-horizontal">
                {% for field_id, field in ambience['event']['fields']|keydictsort(EntitySorter.event_field) %}
                    {% if field['association'] == enums['FieldAssociations'].course %}
                        <dt title="{{ field['title'] }}">{{ field['title'] }}</dt>
                        <dd>
                            {{ generic_event.display_field(field, ambience['course']['fields'].get(field['field_name'])) }}
                        </dd>
                    {% endif %}
                {% endfor %}
            </dl>

    {% if ambience['course']['notes'] %}
        {% call util.bootstrap_panel(title=gettext("Orga-Notes"), icon="tag",
                                     aclass="panel-default panel-condensed") %}
            {{ ambience['course']['notes']|md }}
        {% endcall %}
    {% endif %}

    {% if mec_violations %}
        {% call generic_event.constraint_violations_panel(violation_severity) %}
            {{ generic_event.list_mec_violations(mec_violations, {ambience['course']['id']: ambience['course']}) }}
        {% endcall %}
    {% endif %}

    <h2>{% trans %}Attendees{% endtrans %}</h2>
    {% set relevant_tracks = [] %}
    {% for track_id, track in ambience['event']['tracks']|keydictsort(EntitySorter.course_track)
            if track_id in ambience['course']['segments'] %}
        {% do relevant_tracks.append((track_id, track)) %}
    {% endfor %}
    {% for batch in relevant_tracks|batch(3) %}
        <div class="row">
        {% for track_id, track in batch %}
            {% set num_track_learners = learners[(ambience['course']['id'], track_id)]|length %}
            <div class="col-md-4">
                <div class="panel panel-info panel-condensed" id="track{{ track_id }}-attendees">
                    <div class="panel-heading">
                        <h3 class="panel-title">
                            {% if ambience['event']['tracks']|length > 1 %}
                                {{ track['title'] }}
                            {% else %}
                                {% trans %}Attendees{% endtrans %}
                            {% endif %}
                        </h3>
                    </div>
                    <div class="panel-body">
                        {% if track_id not in ambience['course']['active_segments'] %}
                            <p class="text-danger">
                                <strong>{% trans %}Course is cancelled{% endtrans %}</strong>
                            </p>
                        {% elif ambience['course']['min_size'] is not none and
                                num_track_learners < ambience['course']['min_size'] %}
                            <p class="text-warning">
                                <strong>
                                    {% trans count=(ambience['course']['min_size'] - num_track_learners) %}
                                        Course has {{ count }} attendees too few.
                                    {% endtrans %}</strong>
                            </p>
                        {% elif ambience['course']['max_size'] is not none and
                                num_track_learners > ambience['course']['max_size'] %}
                            <p class="text-warning">
                                <strong>
                                    {% trans count=(num_track_learners - ambience['course']['max_size']) %}
                                    	Course has {{ count }} attendees too many.
                                    {% endtrans %}</strong>
                            </p>
                        {% endif %}
                        <ul class="slim">
                            {% for registration_id in attendees[(ambience['course']['id'], track_id)] %}
                                <li>
                                    {{ util.href(cdedblink('event/show_registration',
                                                           {'registration_id': registration_id}),
                                                 util.persona_name(personas[registrations[registration_id]
                                                        ['persona_id']])) }}
                                    {% if registrations[registration_id]['tracks'][track_id]['course_instructor']
                                            == ambience['course']['id'] %}
                                        ({% trans %}Instr.{% endtrans %})
                                    {% endif %}
                                </li>
                            {% endfor %}
                        </ul>
                    </div>
                    <div class="panel-footer">
                        <ul class="list-unstyled nosp">
                            <li>
                                {{ util.href(cdedblink('event/course_choices', {
                                                            'track_id': track_id,
                                                            'course_id': ambience['course']['id'],
                                                            'position': enums.CourseFilterPositions.anywhere.value,
                                                            'submitform': True}),
                                             label=gettext("All Course Choices"),
                                             icon=util.make_icon('crosshairs')) }}
                            </li>
                        {% if num_track_learners %}
                            <li>
                                {{ util.href(cdedblink('event/course_choices', {
                                                 'track_id': track_id,
                                                 'course_id': ambience['course']['id'],
                                                 'position': enums.CourseFilterPositions.assigned.value,
                                                 'submitform': True}),
                                             label=gettext("Attendees"),
                                             icon=util.make_icon('crosshairs')) }}
                            </li>
                            <li>
                                {{ util.href(cdedblink('event/registration_query',
                                                       make_attendees_query(track_id).serialize_to_url()) + "#query-results",
                                             label=gettext("View Registrations"), icon=util.make_icon('list'),
                                             anid="attendees-link-{}".format(track_id)) }}
                            </li>
                        {% endif %}
                        </ul>
                    </div>
                </div>
            </div>
        {% endfor %}
        </div>
    {% endfor %}
    {% call util.bootstrap_panel(title=gettext("Description"), icon="thumbtack", aclass="panel-default panel-condensed") %}
        {{ ambience['course']['description']|md }}
    {% endcall %}

    {{ util.pager('event/show_course', 'course_id', prev_course, next_course, "label") }}

    {% call util.bootstrap_panel(title=gettext("Actions"), icon="exclamation-triangle", aclass="panel-danger mosp") %}
        <div class="row">
            <div class="col-sm-4">
                <div class="p">
                    <form action="{{ cdedblink('event/delete_course') }}" method="POST" id="deletecourseform"
                            style="display: inline;">
                        {{ util.anti_csrf_token('event/delete_course') }}
                        {{ util.input_submit(label=gettext("Delete"), readonly=is_locked or blockers,
                                             aclass="btn btn-danger", icon="trash-alt", title=gettext("Course still has attendees.") if "attendees" in blockers else "" ) }}
                        {{ util.input_checkbox(name="ack_delete", label=gettext("Are you sure?")) }}
                    </form>
                </div>
            </div>
            <div class="col-sm-8">
                <p class="text-muted">
                    {% trans %}Delete the Course.{% endtrans %}
                </p>
            </div>
        </div>
    {% endcall %}
    <script nonce="{{ csp_nonce }}">
        $('#deletecourseform').cdedbProtectAction("{{ gettext("The course will be permanently deleted.") }}");
        $('#deletecourseform').find('[name="ack_delete"]').prop('checked', true).parent().hide();
    </script>
{% endblock %}
