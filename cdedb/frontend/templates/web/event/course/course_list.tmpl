{% set sidenav_active='event_course_list' %}
{% extends "web/event/base.tmpl" %}
{% import "web/util.tmpl" as util with context %}
{% block title %}
    {% trans title=ambience['event']['title'] %}
        Courselist {{ title }}
    {% endtrans %}
{% endblock %}
{% block breadcrumb %}
{{ super() }}
{{ util.breadcrumb_link(cdedblink("event/show_event"), ambience['event']['title'], icon="chalkboard-teacher",
                        readonly=not (ambience['event']['is_visible']
                                      or ambience['event']['id'] in user.orga
                                      or user.admin_views.intersection(('event_orga', 'event_mgmt')))) }}
{{ util.breadcrumb_link(cdedblink("event/course_list"), gettext("Courselist"), active=True) }}
{% endblock %}
{% block heading %}
    {{ util.context_heading(gettext("Courselist"), ambience['event']['title'], 'chalkboard-teacher', gettext("Event")) }}
{% endblock %}
{% block static_notifications %}
    {{ super() }}
    {% if not ambience['event']['is_course_list_visible'] %}
        {% call util.notification('info', id='course-not-visible') %}
            {% trans %}The Courselist is currently only visible to Orgas and Admins.{% endtrans %}
        {% endcall %}
    {% elif not ambience['event']['is_course_state_visible'] and (ambience['event']['id'] in user.orga
                                                                  or 'event_orga' in user.admin_views) %}
        {% call util.notification('info', id='cancelled-not-visible') %}
            {% if ambience['event']['tracks']|length > 1 %}
                {% trans %}
                    Cancelled courses are only marked for orgas. Other users can currently only see in which course
                    tracks the course was originally offered.
                {% endtrans %}
            {% else %}
                {% trans %}
                    Cancelled courses are only marked for orgas. Other users cannot see courses' state currently.
                {% endtrans %}
            {% endif %}
        {% endcall %}
    {% endif %}
    {% if courses and "event" not in user.roles %}
        {% call util.notification('info', id='instructors-not-visible') %}
            {% trans %}The instructors for each course are only visible to logged in event users.{% endtrans %}
        {% endcall %}
    {% endif %}
{% endblock %}
{% block content %}
    {% if courses %}
        {% set show_course_state = (ambience['event']['is_course_state_visible'] or ambience['event']['id'] in user.orga
                                    or 'event_orga' in user.admin_views) %}
        {% if ambience['event']['tracks']|length > 1 or show_course_state %}
            {% call util.bootstrap_panel(title=gettext("Filter"), icon="search", aclass='panel-primary') %}
                <form action="{{ cdedblink('event/course_list') }}" method="GET" id="coursefilterform"
                      aria-label="{% trans %}Filter{% endtrans %}">
                    {% if show_course_state %}
                        {{ util.form_input_checkbox('active_only', label=gettext("Show only courses taking place"),
                                                    horizontal=False) }}
                    {% endif %}
                    {% if ambience['event']['tracks']|length > 1 %}
                        {{ util.form_input_checkboxes('track_ids', label=gettext("Show only courses in tracks:"),
                            entries=ambience['event']['tracks']|keydictsort(EntitySorter.course_track)|dict_entries('id', 'title'),
                            slice=(2 if ambience['event']['tracks']|length < 7 else 3), horizontal=False) }}
                    {% endif %}
                    {{ util.input_submit(label=gettext("Go!"), icon="filter") }}
                </form>
            {% endcall %}
        {% endif %}

        {# Jinja does not support list comprehension... #}
        {% set courses_to_show = [] %}
        {% for course_id, course in courses|keydictsort(EntitySorter.course) if (
            course['active_segments'] if active_only and show_course_state else course['segments']
        ).intersection(track_ids) %}
            {% do courses_to_show.append((course_id, course)) %}
        {% endfor %}

        {% if courses_to_show|length > 5 %}
            <div id="toc">
            <details open>
                <summary class="h3">{% trans %}Table of Contents{% endtrans %}</summary>
                <ul>
                    {% for course_id, course in courses_to_show %}
                        <li>{{ util.href("#course-{}".format(course_id), "{}. {}".format(course['nr'], course['title'])) }}</li>
                    {% endfor %}
                </ul>
                </details>
            </div>
        {% endif %}

        <div id="list-courses">
        {% for anid, entry in courses_to_show %}
            <div class="hide-hover-container" id="course-{{ entry['id'] }}">
                <h3>
                    {{ entry['nr'] }}. {{ entry['title'] }}
                    <a class="headerlink" href="#course-{{ entry['id'] }}"
                       title="{% trans %}Permanent link{% endtrans %}">&para;</a>
                </h3>
                {% if ambience['event']['id'] in user.orga or 'event_orga' in user.admin_views %}
                    <div class="pull-right">
                        {{ util.href(cdedblink('event/show_course', {'course_id' : anid}), gettext("Details"),
                                     readonly=is_locked, icon='list', aclass='btn btn-xs btn-info hide-hover') }}
                        {{ util.href(cdedblink('event/change_course_form', {'course_id' : anid}), gettext("Edit"),
                                     readonly=is_locked, icon='pen', aclass='btn btn-xs btn-warning hide-hover') }}
                    </div>
                {% endif %}
                <p class="heading-supplement">
                    {% if ambience['event']['id'] in user.orga or 'event_orga' in user.admin_views %}
                        <span class="label label-primary">{{ entry['shortname'] }}</span>
                    {% endif %}
                    {% if "event" in user.roles and entry['instructors'] %}
                        {% trans instructors=entry['instructors'] %}
                            by {{ instructors }}
                        {% endtrans %}
                    {% endif %}
                    {% if ambience['event']['tracks']|length > 1 %}
                        – <span class="text-info">
                        {% for track_id, track in ambience['event']['tracks']|keydictsort(EntitySorter.course_track)
                                if track_id in entry['segments'] -%}
                            {% if not loop.first %}
                                {%- if loop.last %}
                                    {% trans %}and{% endtrans %}
                                {% else -%}
                                    ,
                                {% endif %}
                            {%- endif %}
                            {%- if track_id not in entry['active_segments'] and show_course_state %}
                                <i><s>{{ track['title'] }}</s></i>{# -#}
                                <span class="sr-only"> ({% trans %}cancelled{% endtrans %})</span>
                            {%- else %}
                                <i>{{ track['title'] }}</i>
                            {%- endif %}
                        {%- endfor %}</span>.
                    {% elif (ambience['event']['tracks'].keys()|list)[0] not in entry['active_segments']
                             and show_course_state %}
                        – <span class="text-info">{% trans %}cancelled{% endtrans %}</span>
                    {% endif %}
                </p>
                {{ entry['description']|md }}
            </div>
        {% endfor %}
        </div>
    {% elif ambience['event']['tracks'] %}
        <p>{% trans %}This event does not yet have any courses.{% endtrans %}</p>
    {% else %}
        <p>{% trans %}This event does not have Courses.{% endtrans %}</p>
    {% endif %}
{% endblock %}
