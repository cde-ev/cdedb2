{# A macro to generate the form select fields for all course choices of a given track.

    track           The track dict of the requested track.
    all_courses     A dict containing all courses of the current event.
    course_choices  A dict containing a mapping from track to a list of ids of all choosable courses.
#}
{% macro select_course_choice(track, all_courses, course_choices) %}

    <div id="course_choice_container-{{ track['id'] }}" class="course_choice_container" data-part="{{ track['part_id'] }}">
        <h4>
            {% trans %}Course Choices{% endtrans %}
            {% if course_choices|length > 1 %}
                {% trans track=track['title'] %}
                    for {{ track }}
                {% endtrans %}
            {% endif %}
        </h4>

        {% set course_entries = all_courses|keydictsort(EntitySorter.course)
                                           |xdict_entries('{id}', '{nr}. {title}', include=course_choices[track['id']]) %}
        {% for i in range(track['num_choices']) %}
            {{ util.form_input_select(name="course_choice{}_{}".format(track['id'], i), nulloption=nbsp,
                                      label=gettext("%s. Choice")|format(i + 1), entries=course_entries,
                                      info=(gettext("Optional choice") if i >= track['min_choices'] else "")) }}
        {% endfor %}
        {{ util.form_input_select(name="course_instructor{}".format(track['id']), entries=course_entries,
                                  nulloption=gettext("– I am not an Instructor –"), label=gettext("Instructor"),
                                  info=gettext("If you are instructing a course, please specify which one.")) }}
    </div>
{% endmacro %}
