{% set sidenav_active='event_show' %}
{% extends "web/event/base.tmpl" %}
{% import "web/util.tmpl" as util with context %}
{% import "web/event/generic.tmpl" as generic with context %}
{% block scripts %}
    {% if values['event_id'] in user.orga or user.admin_views.intersection(('event_orga', 'event_mgmt')) %}
        {{ util.cdedb_script('cdedb_searchpersona.js') }}
        {{ util.cdedb_script('cdedb_helper.js') }}
        {{ util.cdedb_script('cdedb_searchregistration.js') }}
    {% endif %}
{% endblock %}
{% if values['event_id'] in user.orga or user.admin_views.intersection(('event_orga', 'event_mgmt')) %}
    {% set jshint = 'strong' %}
{% endif %}
{% block title %}
    {{ ambience['event']['title'] }}
{% endblock %}
{% block breadcrumb %}
    {{ super() }}
    {{ util.breadcrumb_link(cdedblink("event/show_event"), ambience['event']['title'], icon="chalkboard-teacher", active=True) }}
{% endblock %}
{% block static_notifications %}
    {{ super() }}
    {% if "event" not in user.roles %}
        {% call util.notification('info', id='instructors-not-visible') %}
            {% trans %}More detailed information about the event is visible to logged in event users.{% endtrans %}
        {% endcall %}
    {% endif %}
{% endblock %}
{% block content %}
    {% if "event" in user.roles %}
        <div id="description">{{ ambience['event']['description']|md }}</div>
    {% endif %}

    <dl class="dl-horizontal">
        {% if ambience['event']['parts']|length > 0 %}
            <dt title="{% trans %}Timeframe{% endtrans %}">
                {% trans %}Timeframe{% endtrans %}
            </dt>
            <dd id="timeframe-parts">
                {% if ambience['event']['parts']|length == 1 %}
                    {% with part = (ambience['event']['parts'].values()|list)[0] %}
                        <span class="nowrap">{{ part['part_begin']|date(lang=lang,verbosity='full') }}</span>&#8239;–
                        {#-  #}&#8239;<span class="nowrap">{{ part['part_end']|date(lang=lang,verbosity='full') }}</span>
                    {% endwith %}
                {% else %}
                    {% for part_id, part in ambience['event']['parts']|keydictsort(EntitySorter.event_part) %}
                        {{ part['title'] }}:
                        {{ part['part_begin']|date(lang=lang) }}&#8239;–&#8239;
                        {{- part['part_end']|date(lang=lang) }}<br />
                    {% endfor %}
                {% endif %}
            </dd>
        {% endif %}
        {% if not ambience['event']['registration_start'] is none %}
            <dt title="{% trans %}Registration{% endtrans %}">
                {% trans %}Registration{% endtrans %}
            </dt>
            <dd id="timeframe-registration">
                {% set soft_limit = ambience['event']['registration_soft_limit'] %}
                {% set hard_limit = ambience['event']['registration_hard_limit'] %}
                {% if soft_limit is none and hard_limit is none %}
                    {% trans date=ambience['event']['registration_start']|datetime(lang=lang)%}
                    	starts {{ date }}
                    {% endtrans %}
                {% else %}
                    {{ ambience['event']['registration_start']|datetime(lang=lang) }}&#8239;–&#8239;
                    {{- hard_limit if soft_limit is none else soft_limit|datetime(lang=lang) }}
                    {% if ((values['event_id'] in user.orga or 'event_orga' in user.admin_views)
                        or now() > soft_limit) and soft_limit != hard_limit %}
                        {% if hard_limit %}
                            {% trans date=hard_limit|datetime(lang=lang) %}
                                (Late registrations until {{ date }})
                            {% endtrans %}
                        {% else %}
                            {% trans %}
                                (Late registration open)
                            {% endtrans %}
                        {% endif %}
                    {% endif %}
                {% endif %}
            </dd>
        {% endif %}
        {% if ambience['event']['orga_address'] %}
            <dt title="{% trans %}Orga Address{% endtrans %}">
                {% trans %}Orga Address{% endtrans %}
            </dt>
            <dd id="orga-address">
                <a href="{{ util.mailto(ambience['event']['orga_address']) }}">{{ ambience['event']['orga_address'] }}</a>
            </dd>
        {% endif %}
        {% if "event" in user.roles %}
            <dt title="{% trans %}Orgas{% endtrans %}">
                {% trans %}Orgas{% endtrans %}
            </dt>
            <dd id="orgas">
                {% for anid, entry in orgas.items() %} {# This is already sorted. #}
                    {{ util.persona_anchor(entry) }}{% if not loop.last %},{% endif %}
                {% else %}
                    {% trans %}None{% endtrans %}
                {% endfor %}
            </dd>
        {% endif %}
    </dl>
    {% if values['event_id'] in user.orga or user.admin_views.intersection(('event_orga', 'event_mgmt')) %}
        <dl class="dl-horizontal">
            <dt title="{% trans %}Shortname{% endtrans %}">{% trans %}Shortname{% endtrans %}</dt>
            <dd id="shortname">{{ ambience['event']['shortname'] }}</dd>
            <dt title="{% trans %}Institution{% endtrans %}">{% trans %}Institution{% endtrans %}</dt>
            <dd id="institution">{{ gettext(ambience['event']['institution']|string) }}</dd>
            {% if values['event_id'] in user.orga or 'event_orga' in user.admin_views %}
                <dt title="{% trans %}CdE-Account IBAN{% endtrans %}">{% trans %}CdE-Account IBAN{% endtrans %}</dt>
                <dd id="cde-iban">{{ ambience['event']['iban']|iban }}</dd>
                <dt title="{% trans %}Questionnaire active{% endtrans %}">{% trans %}Questionnaire active{% endtrans %}</dt>
                <dd id="questionnaire-active">{{ util.deko_checkbox(checked=ambience['event']['use_additional_questionnaire'],
                            titles=[gettext("No"),gettext("Yes")]) }}</dd>
            {% endif %}
        </dl>
    {% endif %}


    {% if values['event_id'] in user.orga or 'event_orga' in user.admin_views %}
        {% if ambience['event']['notes'] %}
            {% call util.bootstrap_panel(title=gettext("Orga-Notes"), icon="tag",
                                         aclass="panel-default panel-condensed") %}
                <div id="orga-notes">{{ ambience['event']['notes']|md }}</div>
            {% endcall %}
        {% endif %}

        {% if ambience['event']['registration_text'] %}
            {% call util.bootstrap_panel(title=gettext("Registration page free text"), icon="sign-in-alt",
                                         aclass="panel-default panel-condensed") %}
                <div id="registration-text">{{ ambience['event']['registration_text']|md }}</div>
            {% endcall %}
        {% endif %}

        {% if ambience['event']['mail_text'] %}
            {% call util.bootstrap_panel(title=gettext("Registration mail free text"), icon="envelope",
                                         aclass="panel-default panel-condensed") %}
                <div id="mail-text">{{ ambience['event']['mail_text']|linebreaks }}</div>
            {% endcall %}
        {% endif %}
    {% endif %}

    <div class="row">
        {% if values['event_id'] in user.orga or 'event_orga' in user.admin_views %}
            <div class="col-md-6">
                {% call util.bootstrap_panel(title=gettext("Registration Quick-Access"), aclass="panel-warning", icon='list') %}
                    <form action="{{ cdedblink('event/quick_show_registration') }}" method="GET" id="quickregistrationform">
                        <div class="sr-only">{% trans %}Search for registration by ID or name{% endtrans %}</div>
                        <div class="input-group">
                            <input type="search" name="phrase" class="form-control" id="input-showregistration-id"
                                   aria-label="{% trans %}ID, name or email{% endtrans %}"/>
                            <span class="input-group-btn">
                                {{ util.input_submit("", icon='search', title=gettext("Search")) }}
                            </span>
                        </div>
                    </form>
                    <script nonce="{{ csp_nonce }}">
                        var $i = $('#input-showregistration-id');
                        $i.cdedbSearchRegistration('{{ (cdedblink('event/select_registration')|e)
                                                       + ('?kind=orga_registration&aux='|s)
                                                       + (values['event_id']|e)
                                                       + ('&phrase=%s'|s) }}',
                                                   [], true, false, "{{ gettext("ID, name or email") }}");
                        $i.change(function(){
                            if ($(this).val()) {
                                $('#quickregistrationform').submit();
                            }
                        });
                    </script>
                {% endcall %}
            </div>
        {% endif %}

        {% if "event_mgmt" in user.admin_views %}
            <div class="col-md-6" id="manage-orgas">
                {% call util.bootstrap_panel(title=gettext("Orgas"), icon='user-friends') %}
                <ul>
                    {% for anid, entry in orgas.items() %} {# This is already sorted. #}
                        <li class="hide-hover-container clearfix-after">
                            {{ util.persona_anchor(entry) }} ({{ anid|cdedbid }})
                            <form action="{{ cdedblink('event/remove_orga') }}" method="POST"
                                    id="removeorgaform{{ anid }}" class="hide-hover display-inline">
                                {{ util.anti_csrf_token('event/remove_orga') }}
                                {{ util.input_hidden(name="orga_id", value=anid) }}
                                {{ util.input_submit(label="", readonly=is_locked, title=gettext("Remove Orga"),
                                                     icon='minus', aclass='btn btn-xs btn-danger list-button-float') }}
                            </form>
                        </li>
                    {% endfor %}
                </ul>
                <form action="{{ cdedblink('event/add_orga') }}" method="POST" id="addorgaform" class="p">
                    {{ util.anti_csrf_token('event/add_orga') }}
                    {% call util.output_errors('orga_id', wrapper=True) %}
                    <div class="input-group has-success">
                        <span class="input-group-addon">{{ util.make_icon('plus', title=gettext("Add Orga")) }}</span>
                        {{ util.input_text(name="orga_id", placeholder="DB-XXXX-X", anid='input-add-orga',
                                           arialabel=gettext("ID of the new Orga")) }}
                        <script nonce="{{ csp_nonce }}">
                            $('#input-add-orga').cdedbSearchPerson(
                                '{{ cdedblink('core/select_persona') }}',
                                {{ {'kind': 'event_user', 'aux': ambience['event']['id'] }|tojson }},
                                {{ ambience['event']['orgas']|list|tojson }}, false, false,
                                "{{ gettext("ID, name, email") }}"
                            );
                        </script>
                        <div class="input-group-btn">
                            {{ util.input_submit(label=gettext("Add"), readonly=is_locked, aclass='btn btn-success') }}
                        </div>
                    </div>
                    {% endcall %}
                </form>
                {% endcall %}
            </div>
        {% endif %}

        {% if values['event_id'] in user.orga or 'event_orga' in user.admin_views %}
            <div class="col-md-6" id="minor-form">
                {% call util.bootstrap_panel(title=gettext("Minor Form"), icon='file', aclass='panel-warning') %}
                    <div class="p">
                        {% if minor_form_present %}
                            {% trans link=util.href(cdedblink('event/get_minor_form'), gettext("current Form"),
                                                    icon='file') -%}
                            	Form present: {{ link }}
                            {% endtrans %}
                            <form action="{{ cdedblink("event/change_minor_form") }}" method="POST"
                                id="removeminorformform">
                                {{ util.anti_csrf_token("event/change_minor_form") }}
                                {{ util.input_hidden(name="delete", value=True) }}
                                {{ util.input_submit(label=gettext("Remove Minor Form"), readonly=is_locked,
                                                     icon="trash-alt", aclass='btn btn-danger') }}
                                {{ util.input_checkbox(name="ack_delete", label=gettext("Are you sure?")) }}
                            </form>
                            <script nonce="{{ csp_nonce }}">
                                $('#removeminorformform').cdedbProtectAction("{{ gettext("The minor form will be permanently deleted.") }}");
                                $('#removeminorformform').find('[name="ack_delete"]').prop('checked', true).parent().hide();
                            </script>
                        {% else %}
                            <strong>{{ util.make_icon('exclamation-triangle') }}
                                {% trans %}No Form present – Minors cannot register{% endtrans %}
                            </strong>
                        {% endif %}
                    </div>
                    <form action="{{ cdedblink('event/change_minor_form') }}" method="POST" enctype="multipart/form-data"
                     id="changeminorformform" {% if 'minor_form' in errors %}class="has-error"{% endif %}>
                        {{ util.anti_csrf_token('event/change_minor_form') }}
                        {{ util.input_hidden(name="delete", value=True) }}
                        <div class="input-group">
                            {{ util.input_file(name="minor_form", accept="application/pdf",
                                               arialabel=gettext("PDF of the new Minor Form")) }}
                            <div class="input-group-btn">
                                {{ util.input_submit(label=gettext("Upload"), readonly=is_locked, icon='arrow-circle-up') }}
                            </div>
                        </div>
                        {{ util.output_errors('minor_form') }}
                    </form>
                {% endcall %}
            </div>

            <div class="col-md-6" id="offline-use">
                {% call util.bootstrap_panel(title=gettext("Offline Use"), icon='cloud-download-alt', aclass='panel-danger') %}
                    <p>
                        {% trans %}Full Event Export{% endtrans %}<br />
                        <small>({% trans %}for initilization of the offline-VM{% endtrans %})</small>
                    </p>
                    <div class="p">
                        {% if ambience['event']['offline_lock'] %}
                            {{ util.href(cdedblink('event/download_export'), gettext("JSON file"), icon='download', aclass='btn btn-default') }}
                        {% else %}
                            <form action="{{ cdedblink('event/download_export') }}" method="GET" id="fullexportform" class="display-inline">
                                {{ util.input_submit(label=gettext("JSON file"), icon='download', aclass='btn btn-default') }}
                                {{ util.input_checkbox(name="agree_unlocked_download", label=gettext("Are you sure to download a full export before locking?")) }}
                            </form>
                            <script nonce="{{ csp_nonce }}">
                                $('#fullexportform').cdedbProtectAction("{{ gettext("Are you sure to download a full export before locking?") }}");
                                $('#fullexportform').find('[name="agree_unlocked_download"]').prop('checked', true).parent().hide();
                            </script>
                        {% endif %}
                    </div>
                    {% if ambience['event']['offline_lock'] != CDEDB_OFFLINE_DEPLOYMENT %}
                        {% if CDEDB_OFFLINE_DEPLOYMENT %}
                            <p>
                                {% trans %}The event is in offline mode, but locked to be used in another instance.{% endtrans %}
                                {% trans %}
                                    To unlock it, run the offline initialization script inside the VM with
                                    the event data you would like to use.
                                {% endtrans %}
                            </p>
                        {% else %}
                            <p>
                                {% trans %}The event is locked for offline use.{% endtrans %}
                                {% trans %}To unlock it, upload the export of the Offline-DB here.{% endtrans %}
                            </p>
                            <form action="{{ cdedblink('event/unlock_event') }}" method="POST"
                                  enctype="multipart/form-data" id="unlockform"
                                  {% if 'json' in errors %}class="has-error"{% endif %}>
                                {{ util.anti_csrf_token('event/unlock_event') }}
                                <div class="input-group">
                                    {{ util.input_file(name="json", accept="text/json",
                                                       arialabel=gettext("Export of the Offline-DB")) }}
                                    <div class="input-group-btn">
                                        {{ util.input_submit(label=gettext("Unlock"), icon='cloud-upload-alt',
                                                             aclass='btn btn-primary') }}
                                    </div>
                                </div>
                                {{ util.output_errors('json') }}
                            </form>
                        {% endif %}
                    {% else %}
                        <p>
                            {% if CDEDB_OFFLINE_DEPLOYMENT %}
                                {% trans %}The event is in offline mode.{% endtrans %}
                            {% endif %}
                            {% trans %}The event is not locked.{% endtrans %}
                        </p>
                        <div class="p">
                            <form action="{{ cdedblink('event/lock_event') }}" method="POST" id="lockform">
                                {{ util.anti_csrf_token('event/lock_event') }}
                                {{ util.input_submit(label=gettext("Lock"), icon='lock', aclass="btn btn-danger") }}
                            </form>
                        </div>
                        <p class="text-muted">
                            {{ util.make_icon('info-circle') }}
                            {% trans %}By locking the event, all changes are prevented.{% endtrans %}
                            {% if CDEDB_OFFLINE_DEPLOYMENT %}
                                {% trans %}
                                    This way the event can be imported from here into another
                                    offline instance without causing conflicts. Be aware that
                                    unlocking can not be done here, but must be done by running the
                                    offline initialization script.
                                {% endtrans %}
                            {% else %}
                                {% trans %}
                                    This way the event can be managed in offline mode without
                                    causing conflicts.
                                {% endtrans %}
                            {% endif %}
                        </p>
                    {% endif %}
                {% endcall %}
            </div>

            {% if has_constraints %}
            <div class="col-md-6" id="constraint-violations">
                {% call generic.constraint_violations_panel(violation_severity, link_title=True) %}
                    {% if not mep_violations and not mec_violations and not ccs_violations %}
                        {% trans %}
                            There are currently no constraints being violated.
                        {% endtrans %}
                    {% else %}
                        <ul>
                            {% if mep_violations %}
                                <li><a href="{{ cdedblink("event/constraint_violations") }}#mep-violations">
                                    {% trans count=mep_violations|length %}
                                        There are {{ count }} violations of mutually exclusive participation constraints.
                                    {% endtrans %}
                                </a></li>
                            {% endif %}
                            {% if mec_violations %}
                                <li><a href="{{ cdedblink("event/constraint_violations") }}#mec-violations">
                                    {% trans count=mec_violations|length %}
                                        There are {{ count }} violations of mutually exclusive course constraints.
                                    {% endtrans %}
                                </li>
                            {% endif %}
                            {% if ccs_violations %}
                                <li><a href="{{ cdedblink("event/constraint_violations") }}#ccs-violations">
                                    {% trans count=ccs_violations|length %}
                                        There are {{ count }} violations of course choice sync constraints.
                                    {% endtrans %}
                                </li>
                            {% endif %}
                        </ul>
                    {% endif %}
                {% endcall %}
            </div>
            {% endif %}
        {% endif %}
    </div>


    {% if "event_mgmt" in user.admin_views %}
        {% call util.bootstrap_panel(title=gettext("Actions"), icon="exclamation-triangle", aclass="panel-danger mosp") %}
            {% if not ambience['event']['orga_address'] %}
                <div class="row" id="create-orga-list">
                    <div class="col-sm-4">
                        <div class="p">
                            <form action="{{ cdedblink('event/create_event_mailinglist') }}" method="POST" id="createorgalistform"
                                    style="display: inline;">
                                {{ util.anti_csrf_token('event/create_event_mailinglist') }}
                                {{ util.input_hidden("orgalist", value=True) }}
                                {{ util.input_submit(
                                        label=gettext("Create orga mailinglist"), aclass="btn btn-primary",
                                        icon="far fa-plus-square", readonly=not orgas,
                                        title=("" if orgas
                                               else gettext("Must have orgas in order to create a mailinglist."))) }}
                            </form>
                        </div>
                    </div>
                    <div class="col-sm-8">
                        <p class="text-muted">
                            {% trans %}
                                Create an orga mailinglist for this event with a default configuration.
                            {% endtrans %}
                        </p>
                    </div>
                </div>
            {% endif %}
            {% if not participant_list %}
                <div class="row" id="create-participant-list">
                    <div class="col-sm-4">
                        <div class="p">
                            <form action="{{ cdedblink('event/create_event_mailinglist') }}" method="POST" id="createparticipantlistform"
                                    style="display: inline;">
                                {{ util.anti_csrf_token('event/create_event_mailinglist') }}
                                {{ util.input_hidden("orgalist", value=False) }}
                                {{ util.input_submit(
                                        label=gettext("Create participant mailinglist"),
                                        aclass="btn btn-primary", icon="far fa-plus-square", readonly=not orgas,
                                        title=("" if orgas
                                               else gettext("Must have orgas in order to create a mailinglist."))) }}
                            </form>
                        </div>
                    </div>
                    <div class="col-sm-8">
                        <p class="text-muted">
                            {% trans %}
                                Create a participant mailinglist for this event with a default configuration.
                            {% endtrans %}
                        </p>
                    </div>
                </div>
            {% endif %}
            {% if "cde_admin" in user.roles and not ambience['event']['is_archived']%}
                <div class="row" id="archive-event">
                    <div class="col-sm-4">
                        <div class="p">
                            <form action="{{ cdedblink('event/archive_event') }}" method="POST" id="archiveeventform"
                                    style="display: inline;">
                                {{ util.anti_csrf_token('event/archive_event') }}
                                {{ util.input_submit(label=gettext("Archive"),
                                                     readonly=(is_locked or (ambience['event']['end'] >= now().date()
                                                                             and not ambience['event']['is_cancelled'])),
                                                     aclass="btn btn-danger mosp", icon="folder",
                                                     title=(gettext("Event is not concluded yet.")
                                                            if (ambience['event']['end'] >= now().date()
                                                                and not ambience['event']['is_cancelled']) else "")) }}
                                {{ util.input_checkbox(name="create_past_event",
                                    readonly=(is_locked or (ambience['event']['end'] >= now().date()
                                                            and not ambience['event']['is_cancelled'])),
                                        label=gettext("Create past event after archiving."), defaultvalue='True') }}
                                {{ util.input_checkbox(name="ack_archive", label=gettext("Are you sure?")) }}
                            </form>
                        </div>
                    </div>
                    <div class="col-sm-8">
                        <p class="text-muted">
                            {% trans %}
                                Archives the event. This creates a new “Past Event” in the CdE-Realm and transfers
                                course and participant information there.
                            {% endtrans %}
                        </p>
                    </div>
                </div>
                <script nonce="{{ csp_nonce }}">
                    $('#archiveeventform').cdedbProtectAction("{{ gettext("The event will be permanently archived.") }}");
                    $('#archiveeventform').find('[name="ack_archive"]').prop('checked', true).parent().hide();
                </script>
            {% endif %}
            <div class="row" id="delete-event">
                <div class="col-sm-4">
                    <div class="p">
                        <form action="{{ cdedblink('event/delete_event') }}" method="POST" id="deleteeventform"
                              style="display: inline;">
                            {{ util.anti_csrf_token('event/delete_event') }}
                            {{ util.input_submit(label=gettext("Delete"), readonly=(is_locked or ambience['event']['end'] >= now().date()),
                                                 aclass="btn btn-danger", icon="trash-alt",
                                                 title=gettext("Event is not concluded yet.") if ambience['event']['end'] >= now().date() else "") }}
                            {{ util.input_checkbox(name="ack_delete", label=gettext("Are you sure?")) }}
                        </form>
                        <script nonce="{{ csp_nonce }}">
                            $('#deleteeventform').cdedbProtectAction("{{ gettext("The event will be permanently deleted.") }}");
                            $('#deleteeventform').find('[name="ack_delete"]').prop('checked', true).parent().hide();
                        </script>
                    </div>
                </div>
                <div class="col-sm-8">
                    <div class="p text-muted">
                        {% trans %}
                            Deletes the event, including all course and participant information.
                            This should usually not be done before the event has been archived and fully concluded.
                        {% endtrans %}
                    </div>
                </div>
            </div>
        {% endcall %}
    {% endif %}
{% endblock %}
