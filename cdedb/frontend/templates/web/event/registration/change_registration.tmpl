{% set sidenav_active='event_registration' %}
{% extends "web/event/base.tmpl" %}
{% import "web/util.tmpl" as util with context %}
{% import "web/event/generic.tmpl" as generic_event with context %}
{% block scripts %}
    {{ util.cdedb_script('cdedb_helper.js') }}
    {{ util.cdedb_script('cdedb_register.js') }}
{% endblock %}
{% set jshint='strong' %}
{% block title %}
    {% trans name=util.persona_name(persona), title=ambience['event']['title'] %}
        Edit Registration by {{ name }} ({{ title }})
    {% endtrans %}
{% endblock %}
{% block breadcrumb %}
{{ super() }}
{{ util.breadcrumb_link(cdedblink("event/show_event"), ambience['event']['title'], icon="chalkboard-teacher") }}
{{ util.breadcrumb_link(cdedblink("event/registration_query"), gettext("Registrations")) }}
{{ util.breadcrumb_link(cdedblink("event/show_registration"), util.persona_name(persona), icon="user") }}
{{ util.breadcrumb_link(cdedblink("event/change_registration"), gettext("Edit"), active=True) }}
{% endblock %}
{% block heading %}
    {{ util.context_heading(gettext("Edit %(name)s")|format(name=util.persona_name(persona))|s,
                            ambience['event']['title'], 'chalkboard-teacher', gettext("Event")) }}
{% endblock %}

{% block content %}
    <form action="{{ cdedblink('event/change_registration') }}" method="POST" id="changeregistrationform"
          class="form-horizontal">
        {{ util.anti_csrf_token('event/change_registration') }}
        {% for val in skip %}{{ util.input_hidden('skip', val) }}{% endfor %}

        <h3 class="heading-underline">{% trans %}Personal Information{% endtrans %}</h3>
        {{ util.form_input_static(label=gettext("Full Name"),
                                  value=util.persona_name(persona, given_and_display_names=True, with_titles=True))
                }}
        {{ util.form_input_static(label=gettext("CdEDB-ID"), value=persona['id']|cdedbid) }}
        {% if CDEDB_OFFLINE_DEPLOYMENT %}
            {{ util.form_input_text(name="reg.real_persona_id", label=gettext("Online CdEDB-ID")) }}
        {% endif %}
        {{ util.form_input_static(label=gettext("Birthday"), value=persona['birthday']|date(lang=lang)) }}
        {{ util.form_input_static(label=gettext("Gender"), value=gettext(enums['Genders'](persona['gender'])|string)) }}
        {{ util.form_input_textarea(name="reg.orga_notes", label=gettext("Orga-Notes"), rows="5") }}

        <h3 class="heading-underline">{% trans %}Status{% endtrans %}</h3>
        <p class="text-info">
            {{ util.make_icon('info-circle') }}
            {% trans my_registration=util.href(cdedblink('event/registration_status'), gettext("My Registration")) %}
                The registered people are able to see their current registration status, the payment status and – for
                minors – the status of the parental consent at “{{ my_registration }}”.
            {% endtrans %}
        </p>
        {{ util.form_input_checkbox(name="reg.parental_agreement", label=gettext("Parental Consent")) }}
        {{ util.form_input_text(name="reg.checkin", label=gettext("Checked-In"), type="datetime-local",
                                readonly='reg.checkin' in skip) }}

        {% for part in ambience['event']['parts'].values()|sort %}
            {% if ambience['event']['parts']|length > 1 %}
                <h4>{{ part['title'] }}</h4>
            {% endif %}
            {{ util.form_input_select(name="part{}.status".format(part.id), label=gettext("Status"), attributes='data-part_id=' + part.id|s,
                                      entries=enums['RegistrationPartStati']|enum_entries(processing=gettext)) }}
            {{ util.form_input_select(name="part{}.lodgement_id".format(part.id), label=gettext("Lodgement"),
                                      entries=lodgements|keydictsort(EntitySorter.lodgement)|dict_entries('id', 'title'), nulloption=nbsp) }}
            {{ util.form_input_checkbox(name="part{}.is_camping_mat".format(part.id), label=gettext("Uses Camping Mat")) }}

            {% for track in ambience['event']['tracks'].values()|sort if track['part_id'] == part.id %}
                {% set course_entries = courses|keydictsort(EntitySorter.course)
                                        |xdict_entries('{id}', '{nr}. {shortname}', include=courses_per_track[track.id]) %}
                {{ util.form_input_select(name="track{}.course_id".format(track.id),
                                          label=gettext("Course %s")|format(track['shortname'])
                                                if ambience['event']['tracks']|length > 1  else gettext("Course"),
                                          entries=course_entries,
                                          nulloption=nbsp) }}
            {% endfor %}
        {% endfor %}

        <h3 class="heading-underline">{% trans %}Registration Data{% endtrans %}</h3>
        {{ util.form_input_checkbox(name="reg.mixed_lodging", label=gettext("Mixed Lodging")) }}
        {{ util.form_input_checkbox(name="reg.list_consent", label=gettext("Participant List Consent")) }}
        {{ util.form_input_textarea(name="reg.notes", label=gettext("Notes"), rows="5") }}

        {{ generic_event.select_all_course_choices() }}

        {{ generic_event.print_field_inputs(enums['FieldAssociations'].registration) }}

        <div class="panel panel-primary">
            <details class="panel-body">
                <summary>
                    {% trans %}Fee{% endtrans %}:
                    <span id="fee-preview">{% trans %}Activate JavaScript for automatic fee preview.{% endtrans %}</span>
                </summary>
                {{ generic_event.fee_composition_table() }}
            </details>
        </div>

        <div class="panel panel-primary">
            <div class="panel-body">
                {{ util.form_input_textarea(name="change_note", label=gettext("Changenotes"),
                   info=gettext("Summary to be added to the log entry.")) }}
            </div>
        </div>

        {{ util.form_input_submit(label=gettext("Save"), cancellink=cdedblink("event/show_registration")) }}
    </form>
    <script nonce="{{ csp_nonce }}">
        feePreviewConstants = {
            'endpoint': '{{ cdedblink('event/precompute_fee') }}',
            'persona_id': {{ persona['id'] }},
            'is_member': {{ ambience['registration']['is_member']|tojson }},
            'is_orga': {{ (persona['id'] in ambience['event']['orgas'])|tojson }},
        }
        $('#changeregistrationform').cdedbProtectChanges().cdedbFeePreview(feePreviewConstants);
    </script>
{% endblock %}
