{% set sidenav_active='event_configure_registration' if preview else 'event_register' %}
{% extends "web/event/base.tmpl" %}
{% import "web/util.tmpl" as util with context %}
{% import "web/event/generic.tmpl" as generic_event with context %}
{% block scripts %}{{ util.cdedb_script('cdedb_helper.js') }}{% endblock %}
{% block title %}
    {% if preview %}
        {% trans title=ambience['event']['title'] %}
            Registration Preview for {{ title }}
        {% endtrans %}
    {% else %}
        {% trans title=ambience['event']['title'] %}
            Registration for {{ title }}
        {% endtrans %}
    {% endif %}
{% endblock %}
{% block breadcrumb %}
{{ super() }}
{% if not preview %}
    {{ util.breadcrumb_link(cdedblink("event/show_event"), ambience['event']['title'], icon="chalkboard-teacher",
                            readonly=not (ambience['event']['is_visible']
                                          or ambience['event']['id'] in user.orga
                                          or user.admin_views.intersection(('event_orga', 'event_mgmt')))) }}
    {{ util.breadcrumb_link(cdedblink("event/register"), gettext("Register"), active=True) }}
{% else %}
    {{ util.breadcrumb_link(cdedblink("event/show_event"), ambience['event']['title'], icon="chalkboard-teacher") }}
    {{ util.breadcrumb_link(cdedblink("event/configure_registration"), gettext("Configure Registration")) }}
    {{ util.breadcrumb_link(cdedblink("event/register", {"preview": True}),
                            gettext("Registration Preview"), active=True) }}
{% endif %}
{% endblock %}

{% block heading %}
    {{ util.context_heading(gettext("Registration Preview") if preview else gettext("Registration"),
                            ambience['event']['title'], 'chalkboard-teacher', gettext("Event")) }}
{% endblock %}

{% block content %}
    <p>
        {% if ambience['event']['registration_soft_limit'] is none %}
            {% trans %}
                All data except Event Parts can be changed until the registration ends.
            {% endtrans %}
        {% elif ambience['event']['registration_soft_limit'] >= now() %}
            {% trans date=ambience['event']['registration_soft_limit']|datetime(lang=lang) %}
                All data except Event Parts can be changed until the registration ends ({{ date }}).
            {% endtrans %}
        {% else %}
            {% trans %}
                The official registration has ended. Your registration will be considered if possible.
            {% endtrans %}
        {% endif %}
    </p>

    <form action="{{ cdedblink('event/register') }}" method="POST" id="registerform" class="form-horizontal">
    {% if not preview %}
        {{ util.anti_csrf_token('event/register') }}
    {% endif %}

        {% if ambience['event']['registration_text'] %}
            {% call util.bootstrap_panel(title=gettext("Note of the Orga Team"), icon="info-circle", aclass="panel-info") %}
                {{ ambience['event']['registration_text']|md }}
            {% endcall %}
        {% endif %}

        <h3 class="heading-underline">{% trans %}My Data{% endtrans %}</h3>
        <dl class="dl-horizontal">
            <dt title="{% trans %}Full Name{% endtrans %}">{% trans %}Full Name{% endtrans %}</dt>
            <dd>
                {{ util.persona_name(persona, given_and_display_names=True, with_titles=True) }}
            </dd>

            <dt title="{% trans %}Birthday{% endtrans %}">{% trans %}Birthday{% endtrans %}</dt>
            <dd>{{ persona['birthday']|date(lang=lang) }}</dd>
            <dt title="{% trans %}Gender{% endtrans %}">{% trans %}Gender{% endtrans %}</dt>
            <dd>{{ gettext(enums['Genders'](persona['gender'])|string) }}</dd>
            <dt title="{% trans %}Pronouns{% endtrans %}">{% trans %}Pronouns{% endtrans %}</dt>
            <dd>{{ persona['pronouns'] }}</dd>
            <dt title="{% trans %}Show pronouns on nametags{% endtrans %}">{% trans %}Pronouns on nametags{% endtrans %}</dt>
            <dd>{{ util.deko_checkbox(persona['pronouns_nametag']) }}</dd>
            <dt title="{% trans %}E-Mail{% endtrans %}">{% trans %}E-Mail{% endtrans %}</dt>
            <dd> {{ persona['username'] }} </dd>
            <dt title="{% trans %}Phone{% endtrans %}">{% trans %}Phone{% endtrans %}</dt>
            <dd>{{ persona['telephone']|phone }}</dd>
            <dt title="{% trans %}Mobile Phone{% endtrans %}">{% trans %}Mobile Phone{% endtrans %}</dt>
            <dd>{{ persona['mobile']|phone }}</dd>
            <dt title="{% trans %}Address{% endtrans %}">{% trans %}Address{% endtrans %}</dt>
            <dd>{{ persona['address'] }}</dd>
            <dt title="{% trans %}Address Supplement{% endtrans %}">{% trans %}Address Supplement{% endtrans %}</dt>
            <dd>{{ persona['address_supplement'] }}</dd>
            <dt title="{% trans %}City{% endtrans %}">{% trans %}City{% endtrans %}</dt>
            <dd>{{ persona['postal_code'] }} {{ persona['location'] }}</dd>
            <dt title="{% trans %}Country{% endtrans %}">{% trans %}Country{% endtrans %}</dt>
            <dd>{{ util.gettext_country(persona['country']) }}</dd>
        </dl>
        <p>
            {% trans link=util.href(cdedblink('core/change_user'), gettext("form to edit your profile")) %}
            	This data is taken from your personal profile. To change it, use this {{ link }}.
            {% endtrans %}
        </p>

        {% if ambience['event']['parts']|length > 1 %}
            <h3 class="heading-underline">{% trans %}Registration{% endtrans %}</h3>
        {% endif %}

        {% if ambience['event']['parts']|length > 1 %}
            {{ util.form_input_checkboxes(name="parts", label=gettext("Event Parts"),
                                          entries=ambience['event']['parts']|keydictsort(EntitySorter.event_part)
                                              |dict_entries('id', 'title')) }}

            <div class="panel panel-primary">
                <div class="panel-body">
                    {{ util.form_input_static(label=gettext("Fee"), anid="fee-preview",
                                              value=gettext("Activate JavaScript for automatic fee preview.")) }}
                </div>
            </div>

        {% elif ambience['event']['parts']|length == 1 %}
            {{ util.input_hidden(name="parts", value=(ambience['event']['parts']|list)[0]) }}
        {% endif %}

        {% if not persona["is_member"] %}
            <div class="heading-underline text-info" style="font-weight: bold;">
                <p id="nonmember-surcharge">
                {% trans %}
                    Because you are not a CdE-Member, you might have to pay an additional fee.
                {% endtrans %}
                </p>
                {% if persona["is_cde_realm"] %}
                    <p>
                    {% trans semester_fee=semester_fee|money(lang=lang) %}
                        You can instead just pay your regular membership fee of {{ semester_fee }} per semester and you won't have to pay the additional fee.
                        If you choose to do so, please do so with two separate payments.
                    {% endtrans %}
                    </p>
                {% endif %}
            </div>
        {% endif %}

        {% if choice_objects %}
            <h3 class="">{% trans %}Course Choices{% endtrans %}</h3>
            {{ generic_event.select_all_course_choices() }}
        {% endif %}

        <h3 class="heading-underline">{% trans %}Additional Information{% endtrans %}</h3>
        {{ generic_event.additional_registration_choices(age, reg_questionnaire) }}

        {% call util.form_input_general(displayerrors=False) %}
            {% if ambience['event']['use_additional_questionnaire'] %}
                <p class="text-info nosp">
                    {{ util.make_icon('info-circle') }}
                    {% trans %}
                        After registration, you will find the ‘Questionnaire’ with further questions of the orga team in
                        the navigation. There you can give more detailed information.
                    {% endtrans %}
                </p>
            {% else %}
                <p class="text-info nosp">
                    {{ util.make_icon('info-circle') }}
                    {% trans %}
                        The orga team of this event may ask you for further data later, using the ‘Questionaire’.
                    {% endtrans %}
                </p>
            {% endif %}
        {% endcall %}
        <div class="panel panel-primary">
            <div class="panel-body">
                {% if preview %}
                    {{ util.form_input_checkbox("is_orga", gettext("Is Orga"), anid="fee-precompute-is-orga") }}
                    {{ util.form_input_checkbox("is_member", gettext("Is Member"), anid="fee-precompute-is-member",
                                                defaultvalue="True") }}
                {% endif %}
                {{ util.form_input_static(label=gettext("Fee"), anid="fee-preview", aclass="font-bold",
                                          value=gettext("Activate JavaScript for automatic fee preview.")) }}

                {% if preview %}
                    <table class="table" style="display: none">
                        <thead>
                            <tr>
                                <th>{% trans %}Title{% endtrans %}</th>
                                <th>{% trans %}Amount{% endtrans %}</th>
                                <th>{% trans %}Condition{% endtrans %}</th>
                            </tr>
                        </thead>
                        <tbody>
                        {% for fee_id, fee in ambience['event']['fees']|keydictsort(EntitySorter.event_fee) %}
                            <tr id="active-fee" data-fee_id="{{ fee_id }}">
                                <th id="active-fee-title" data-orig-title="{{ fee['title'] }}">{{ fee['title'] }}</th>
                                <th class="{{ 'text-success' if fee['amount'] < 0 else 'text-danger' }}">{{ fee['amount']|money(lang=lang) }}</th>
                                <th id="active-fee-condition"><pre>{{ fee['condition'] }}</pre></th>
                            </tr>
                        {% endfor %}
                        </tbody>
                    </table>
                {% endif %}
            </div>
        </div>

        {% if not preview %}
        {{ util.form_input_submit(label=gettext("Register"), cancellink=cdedblink('event/show_event')) }}
        {% endif %}
    </form>

    <script nonce="{{ csp_nonce }}">
        var $form = $('#registerform');
        $form.cdedbProtectChanges();

        part_checkboxes = $form.find('[type="checkbox"][name="parts"]');
        field_checkboxes = $form.find('[type="checkbox"][id^="event-input-fields"]');
        is_orga_checkbox = $('#fee-precompute-is-orga');
        is_member_checkbox = $('#fee-precompute-is-member');

        /* Map part to part selection checkbox ($-encapsulated) */
        part_checkbox_map = {};
        part_checkboxes.each(function(){
            part_checkbox_map[$(this).val()] = $(this);
        });
        ccos_per_part = {{ ccos_per_part|tojson }};
        containers = $('.course_choice_container');
        updateCourseChoiceContainers = function() {
            /* Hide everything, then show available containers */
            containers.each(function(){
                $(this).hide();
            });
            Object.keys(ccos_per_part).forEach(function(key){
                if (part_checkbox_map[key].prop('checked'))
                    ccos_per_part[key].forEach(function(element){
                        $('#course-choice-container-' + element).show();
                    });
            });
        };

        fee_preview = $form.find('[id="fee-preview"]');
        nonmember_surcharge = $form.find('[id="nonmember-surcharge"]');
        fee_summary = $form.find('[id="active-fee"]');
        updateFeePreview = function() {
            var part_ids = [];
            part_checkboxes.each(function() {
                if ($(this).prop('checked')) {
                    part_ids.push($(this).val());
                }
            });
            var field_ids = [];
            field_checkboxes.each(function() {
                if ($(this).prop('checked')) {
                    field_ids.push($(this).parents('[id^="questionnaire_field_entry"]').data('field_id'));
                }
            });

            params = {
                persona_id: {{ user.persona_id }},
                part_ids: part_ids.join(","),
                field_ids: field_ids.join(",")
            }
            if (is_orga_checkbox) {
                params['is_orga'] = is_orga_checkbox.prop('checked');
            }
            if (is_member_checkbox) {
                params['is_member'] = is_member_checkbox.prop('checked');
            }

            $.get('{{ cdedblink("event/precompute_fee") }}', params,
                function(result) {
                    fee_preview.html(result["fee"]);
                    if (result["show_nonmember"]) {
                        nonmember_surcharge.html(result["nonmember"]);
                        nonmember_surcharge.parent().show();
                    }
                    else {
                        nonmember_surcharge.parent().hide();
                    }
                    if (fee_summary) {
                        fee_summary.each(function() {
                            $(this).find('#active-fee-condition').html(result["visual_debug"][$(this).data("fee_id")]);
                            title = $(this).find('#active-fee-title');
                            orig_title = title.data('orig-title');
                            if ($.inArray($(this).data('fee_id'), result["active_fees"]) >= 0) {
                                title.html('{{ util.deko_checkbox(True).strip() + nbsp }}' + orig_title);
                                title.attr('title', '{{ gettext("Active") }}').addClass('alert-success');
                            } else {
                                title.html('{{ util.deko_checkbox(False).strip() + nbsp }}' + orig_title);
                                title.attr('title', '{{ gettext("Inactive") }}').addClass('alert-danger');
                            }
                        });
                    }
                }
            );
        }


        if (part_checkboxes.length) {
            part_checkboxes.change(updateCourseChoiceContainers);
            updateCourseChoiceContainers();
            part_checkboxes.change(updateFeePreview);
        }
        if (field_checkboxes.length) {
            field_checkboxes.change(updateFeePreview);
        }
        if (is_orga_checkbox) {
            is_orga_checkbox.change(updateFeePreview);
        }
        if (is_member_checkbox) {
            is_member_checkbox.change(updateFeePreview);
        }
        if (fee_summary) {
            fee_summary.parents('table').show();
        }
        updateFeePreview();
    </script>
{% endblock %}
