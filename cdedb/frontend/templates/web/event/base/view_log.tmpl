{% set sidenav_active='event_log' %}
{% extends "web/event/base.tmpl" %}
{% import "web/util.tmpl" as util with context %}
{% import "web/logging.tmpl" as logging with context %}
{% block scripts %}
    {{ util.cdedb_script('cdedb_searchpersona.js') }}
{% endblock %}
{% block title %}
    {% trans %}Event Log{% endtrans %}
    {{ logging.counter(total, values['offset'] or '', length) }}
{% endblock %}
{% block breadcrumb %}
    {{ super() }}
    {{ util.breadcrumb_link(cdedblink("event/view_log"), gettext("Log"), active="True") }}
{% endblock %}
{% block content %}
    {% call logging.table(log, keytitle='Event') %}
        {% for entry in log %}
            {% set link = None %}
            {% if entry['event_id'] %}
                {% set link = util.href(cdedblink('event/show_event', {'event_id': entry['event_id']}),
                                        events[entry['event_id']]['title'],
                                        readonly=(not is_admin and entry['event_id'] not in user.orga
                                                  and not events[entry['event_id']]['is_visible'])) %}
            {% endif %}
            {% set personalink = None %}
            {% if (entry['event_id'], entry['persona_id']) in registration_map %}
                {% set personalink = util.href(cdedblink('event/show_registration',
                    {'registration_id': registration_map[(entry['event_id'], entry['persona_id'])], 'event_id': entry['event_id']}),
                    label=util.persona_name(personas[entry['persona_id']]))
                %}
            {% endif %}
            {{ logging.row(entry, enums['EventLogCodes'], loop.index, 'event_id', link, personalink) }}
        {% endfor %}
    {% endcall %}

    {{ logging.navigation('event/view_log', total, length, loglinks) }}
    {{ logging.filter('event/view_log', enums['EventLogCodes'], 'event_user', 'event_id') }}
{% endblock %}
