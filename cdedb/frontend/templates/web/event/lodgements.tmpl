{% set sidenav_active='event_lodgements' %}
{% extends "web/event/base.tmpl" %}
{% import "web/util.tmpl" as util with context %}
{% block title %}
    {% trans title=ambience['event']['title'] %}
    	Lodgements ({{ title }})
    {% endtrans %}
{% endblock %}
{% block breadcrumb %}
{{ super() }}
{{ util.breadcrumb_link(cdedblink("event/show_event"), ambience['event']['title'], icon="chalkboard-teacher") }}
{{ util.breadcrumb_link(cdedblink("event/lodgements"), gettext("Lodgements"), active=True) }}
{% endblock %}
{% block heading %}
    <h1 class="title">
        {% trans %}Lodgements{% endtrans %}
        <small>{{ util.make_icon('chalkboard-teacher') }} {{ ambience['event']['title'] }}</small>
    </h1>
{% endblock %}

{% macro display_sorting_header(part_id, sortkey, label) %}
    {% if sortkey == last_sortkey.value and part_id == last_sort_part_id %}
        {{ util.href(cdedblink('event/lodgements',
                               {'sort_part_id': part_id, 'sortkey': sortkey, 'reverse': not last_reverse}),
                     label,
                     icon="sort-down" if last_reverse else "sort-up",
                     title=gettext("Sort ascending.") if last_reverse else gettext("Sort descending.")) }}
    {% else %}
        {{ util.href(cdedblink('event/lodgements', {'sort_part_id': part_id, 'sortkey': sortkey, 'reverse': False}),
                     label,
                     icon="sort",
                     title=gettext("Sort ascending.")) }}
    {% endif %}
{% endmacro %}


{% block content %}
    <div class="p">
        {{ util.href(cdedblink("event/create_lodgement_form"), gettext("Add Lodgement"), readonly=is_locked,
                     aclass='btn btn-sm btn-success', icon='plus') }}
        {{ util.href(cdedblink("event/lodgement_query"), gettext("Lodgement Query"),
                     aclass='btn btn-sm btn-info', icon='search') }}
        {{ util.href(cdedblink("event/lodgement_group_summary"), gettext("Manage Lodgement Groups"), readonly=is_locked,
                     aclass='btn btn-sm btn-info', icon='th-large') }}
    </div>

    <table class="table table-condensed table-hover">
        <thead>
            <tr>
                <th rowspan="2" colspan="2">
                    {{ display_sorting_header(None, enums['LodgementsSortkeys'].moniker.value, gettext("Lodgement")) }}
                </th>
                <th colspan="{{ ambience['event']['parts']|length * 2 }}" class="b-left">
                    {% trans %}Inhabitants{% endtrans -%}</th>
                <th colspan="2" class="b-left">{% trans %}Capacity{% endtrans %}</th>
                <th rowspan="2" class="b-left"></th>
            </tr>
            <tr>
                {% for part_id, part in ambience['event']['parts']|keydictsort(EntitySorter.event_part) %}
                    <th class="text-right{% if loop.first %} b-left{% endif %}">
                        {% if ambience['event']['parts']|length == 1 %}
                            {{ display_sorting_header(part_id,  enums['LodgementsSortkeys'].used_regular.value, gettext("Regular")) }}
                        {% else %}
                            {{ display_sorting_header(part_id,  enums['LodgementsSortkeys'].used_regular.value, part['title']) }}
                        {% endif %}
                    </th>
                    <th class="text-right">
                        {{ display_sorting_header(part_id,  enums['LodgementsSortkeys'].used_camping_mat.value, "+" + nbsp + "x") }}
                    </th>
                {% endfor %}
                <th class="b-left text-right">
                    {{ display_sorting_header(None,  enums['LodgementsSortkeys'].total_regular.value, gettext("Regular")) }}
                </th>
                <th class="text-right">
                    {{ display_sorting_header(None,  enums['LodgementsSortkeys'].total_camping_mat.value, "+" + nbsp + gettext("Camping Mat")) }}
                </th>
            </tr>
        </thead>
        <tbody>
            {% for group_id, sorted_lodgements in grouped_lodgements.items() %}
                {% if grouped_lodgements|length > 1 %}
                    <tr class="subheading">
                        <td colspan="2">
                            {% if group_id %}{{ groups[group_id]['moniker'] }}
                            {% else %}
                                <i>{% trans %}Ungrouped Lodgements{% endtrans %}</i>
                            {% endif %}
                        </td>
                        {% for part_id, part in ambience['event']['parts']|keydictsort(EntitySorter.event_part) %}
                            <td class="text-right" id="group_regular_inhabitants_{{ part_id }}_{{ group_id }}">
                                {{ group_regular_inhabitants_sum[(group_id, part_id)] }}
                            </td>
                            <td class="text-right" id="group_camping_mat_inhabitants_{{ part_id }}_{{ group_id }}">
                                {% if group_camping_mat_inhabitants_sum[(group_id, part_id)] %}
                                    + {{ group_camping_mat_inhabitants_sum[(group_id, part_id)] }}
                                {% endif %}
                            </td>
                        {% endfor %}
                        <td class="text-right" id="group_regular_capacity_{{ group_id }}">{{ group_regular_sum[group_id] }}</td>
                        <td class=" text-right" id="group_camping_mat_capacity_{{ group_id }}">+ {{ group_camping_mat_sum[group_id] }}</td>
                        <td class="">
                    </tr>
                {% endif %}
                {% for lodgement_id, lodgement in sorted_lodgements.items() %}
                    <tr>
                        <td class="indent"></td>
                        <td>{{ util.href(cdedblink("event/show_lodgement", {'lodgement_id': lodgement_id}),
                                         lodgement['moniker']) }}</td>
                        {% set colors = ['', 'course-fewp', 'course-manyp', 'course-cancelled'] %}
                        {% for part_id, part in ambience['event']['parts']|keydictsort(EntitySorter.event_part) %}
                            {% set problem = problems[(lodgement_id, part_id)] %}
                            <td class="text-right {% if loop.first %} b-left{% endif %}
                                    {{ colors[problem[0]] }}" {% if problem[1] %}title="{{ gettext(problem[1]) }}"{% endif %}
                                    id="lodge_inhabitants_{{ part_id }}_{{ lodgement_id }}">
                                {{ regular_inhabitants[(lodgement_id, part_id)] }}
                            </td>
                            <td class="text-right {{ colors[problem[0]] }}"
                                    {% if problem[1] %}title="{{ gettext(problem[1]) }}"{% endif %}
                                    id="lodge_camping_mat_inhabitants_{{ part_id }}_{{ lodgement_id }}">
                                {% if camping_mat_inhabitants[(lodgement_id, part_id)] %}
                                    + {{ camping_mat_inhabitants[(lodgement_id, part_id)] }}
                                {% endif %}
                            </td>
                        {% endfor %}
                        <td class="b-left text-right" id="lodge_regular_capacity_{{ lodgement_id }}">{{ lodgement['regular_capacity'] }}</td>
                        <td class=" text-right" id="lodge_camping_mat_capacity{{ lodgement_id }}">+ {{ lodgement['camping_mat_capacity'] }}</td>
                        <td class="b-left">
                            {{ util.href(cdedblink("event/change_lodgement_form", {'lodgement_id': lodgement_id}),
                                         readonly=is_locked, aclass='btn btn-xs btn-warning', icon='pen',
                                         title=gettext("Edit")) }}
                            {{ util.href(cdedblink("event/manage_inhabitants_form", {'lodgement_id': lodgement_id}),
                                         readonly=is_locked, aclass='btn btn-xs btn-warning', icon='user',
                                         title=gettext("Manage Inhabitants")) }}
                        </td>
                    </tr>
                {% endfor %}
            {% endfor %}
        </tbody>
        <tfoot>
            <tr class="summary">
                <th colspan="2">&Sigma;</th>
                {% for part_id, part in ambience['event']['parts']|keydictsort(EntitySorter.event_part) %}
                    <td class="text-right {% if loop.first %} b-left{% endif %}"
                            id="total_inhabitants_{{ part_id }}">
                        {{ regular_inhabitants_sum[part_id] }}
                    </td>
                    <td class="text-right" id="total_camping_mat_inhabitants_{{ part_id }}">
                        + {{ camping_mat_inhabitants_sum[part_id] }}
                    </td>
                {% endfor %}
                    <td class="b-left text-right" id="total_regular">{{ regular_sum }}</td>
                    <td class=" text-right" id="total_camping_mat">+ {{ camping_mat_sum }}</td>
                     <td class="b-left"> </td>
            </tr>
        </tfoot>
    </table>

    <hr />
    <p>
        <strong>{% trans %}Color Guide{% endtrans %}:</strong> <br />
        <span class="color-legend course-fewp"></span>&nbsp;{% trans %}Warning{% endtrans %} &emsp;
        <span class="color-legend course-manyp"></span>&nbsp;{% trans %}Overfull{% endtrans %} &emsp;
        <span class="color-legend course-cancelled"></span>&nbsp;{% trans %}Illegal Gendermix{% endtrans %}
    </p>
    <div class="p">
        <strong>{% trans %}Sorting:{% endtrans %}</strong> <br />
        {% trans %}
            The lodgements may be sorted according to the following criteria inside their lodgement groups.
        {% endtrans %}
        <ul class="slim">
            <li>
                {% trans %}
                    The names of the <strong>event parts</strong> sort by the number of regular spaces used in this part.
                {% endtrans %}
            </li>
            <li>
                {% trans %}
                    The <strong>+x</strong> sort by the number of camping mat spaces used in the associated part.
                {% endtrans %}
            </li>
            <li>
                {% trans %}
                    The columns <strong>regular</strong> and <strong>camping mat</strong> sort numerically.
                {% endtrans %}
            </li>
        </ul>
    </div>
{% endblock %}
