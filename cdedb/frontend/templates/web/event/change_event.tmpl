{% set sidenav_active='event_config' %}
{% extends "web/event/base.tmpl" %}
{% import "web/util.tmpl" as util with context %}
{% block scripts %}{{ util.cdedb_script('helper') }}{% endblock %}
{% set jshint='weak' %}
{% block title %}
    {% trans title=ambience['event']['title'] -%}
        {{ title }} â€“ Configuration
    {%- endtrans %}
{% endblock %}
{% block breadcrumb %}
{{ super() }}
{{ util.breadcrumb_link(cdedblink("event/show_event"), ambience['event']['title'], icon="blackboard") }}
{{ util.breadcrumb_link(cdedblink("event/change_event"), gettext("Configuration"), active=True) }}
{% endblock %}
{% block heading %}
    <h1 class="title">
        {% trans -%}Configuration{%- endtrans %}
        <small>{{ util.make_icon('blackboard', arialabel=gettext("Configuration")) }}
            {{ ambience['event']['title'] }}</small>
    </h1>
{% endblock %}
{% block content %}
    <form action="{{ cdedblink('event/change_event') }}" method="POST" id="changeeventform" class="form-horizontal">
        {{ util.form_input_text(name="title", label=gettext("Title")) }}
        {{ util.form_input_select(name="institution", label=gettext("Institution"), entries=institutions|dictsort) }}
        {{ util.form_input_textarea(name="description", label=gettext("Description"), rows="5",
                                    info=gettext("Supports Markdown %(infolink)s")|format(
                                    infolink=util.href(docurl("Handbuch_Markdown"), gettext("Short Markdown summary")))|s) }}
        {{ util.form_input_text(name="shortname", label=gettext("Shortname")) }}
        {{ util.form_input_checkbox(name="is_visible", label=gettext("Visibility of the Event"),
                                info=gettext("If this is checked, all event users can view the event. "
                                "If this is unchecked, event users can still register within the "
                                "registration period by accessing the registration link directly.")) }}
        {{ util.form_input_checkbox(name="is_course_list_visible", label=gettext("Visibility of the Courselist"),
                                info=gettext("If this is unchecked, event users cannot see the courselist. "
                                "If this is checked, but the event is not visible, event users can still view the "
                                "courselist by accessing the link directly.")) }}
        {{ util.form_input_text(name="registration_start", label=gettext("Registration Start"), type='datetime-local',
                                placeholder="YYYY-MM-DD HH:MM:SS") }}
        {{ util.form_input_text(name="registration_soft_limit", label=gettext("Registration Soft Limit"),
                                type="datetime-local", placeholder="YYYY-MM-DD HH:MM:SS",
                                info=gettext("Is displayed initially. Changes to registration are only possible until "
                                "then. If left empty, Changes will be possible indefinitely.")) }}
        {{ util.form_input_text(name="registration_hard_limit", label=gettext("Registration Hard Limit"),
                                type="datetime-local", placeholder="YYYY-MM-DD HH:MM:SS",
                                info=gettext("Final registration end. Until then late registrations are possible. "
                                "If left empty, late registrations will be possible indefinitely.")) }}
        {{ util.form_input_select(name="iban", label=gettext("CdE-Account IBAN"), entries=accounts, nulloption="",
                                info=gettext("Only leave this empty if payment is going to be handled directly by the orgas.")) }}
        {{ util.form_input_textarea(name="mail_text", label=gettext("Registration mail free text"), rows="5") }}
        {{ util.form_input_checkbox(name="use_questionnaire", label=gettext("Show Questionnaire"),
                                info=gettext("If this is checked, all registrated users can fill out the Questionnaire. "
                                "You can configure every part of the questionnaire individually in the questionnaire configuration.")) }}
        {#- jinja does not support list comprehension ... #}
        {%- set myentries = [] %}
        {%- for field_id, field in ambience['event']['fields']|dictsort
                if field['kind'] == "str" and field['association'] == enums['FieldAssociations'].registration %}
            {%- do myentries.append((field_id, field['field_name'])) %}
        {%- endfor %}
        {{ util.form_input_select(name="lodge_field", label=gettext("Field for Rooming Preferences"), entries=myentries,
                                  nulloption="", info=gettext("The custom field in which the participants' "
                                  "rooming preferences will be saved. Fieldtype: Text")) }}
        {#- jinja does not support list comprehension ... #}
        {%- set myentries = [] %}
        {%- for field_id, field in ambience['event']['fields']|dictsort
                if field['kind'] == "bool" and field['association'] == enums['FieldAssociations'].registration %}
            {%- do myentries.append((field_id, field['field_name'])) %}
        {%- endfor %}
        {{ util.form_input_select(name="reserve_field", label=gettext("Field for Reserve"), entries=myentries,
                                  nulloption="", info=gettext("The custom field in which the participants' "
                                  "willingness to sleep on a camping mat will be saved. Fieldtype: Yes/No")) }}
        {{ util.form_input_textarea(name="notes", label=gettext("Orga-Notes"), rows="5") }}
        {{ util.form_input_submit(value=gettext("Save"), cancellink=cdedblink('event/show_event')) }}
    </form>
    <script type="text/javascript">
        $('#changeeventform').cdedbProtectChanges();
    </script>
{% endblock %}
