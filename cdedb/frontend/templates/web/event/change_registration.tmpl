{% set sidenav_active='event_registration' %}
{% extends "web/event/base.tmpl" %}
{% import "web/util.tmpl" as util with context %}
{% block scripts %}{{ util.cdedb_script('helper') }}{% endblock %}
{% set jshint='weak' %}
{% block title %}
    {% trans given_names=persona['given_names'], family_name=persona['family_name'], title=ambience['event']['title'] -%}
        Edit Registration by {{ given_names }} {{ family_name }} ({{ title }})
    {%- endtrans %}
{% endblock %}
{% block breadcrumb %}
{{ super() }}
{{ util.breadcrumb_link(cdedblink("event/show_event"), ambience['event']['title'], icon="blackboard") }}
{{ util.breadcrumb_link(cdedblink("event/registration_query"), gettext("Registrations")) }}
{{ util.breadcrumb_link(cdedblink("event/show_registration"), "{} {}".
        format(persona['given_names'], persona['family_name']), icon="user") }}
{{ util.breadcrumb_link(cdedblink("event/change_registration"), gettext("Edit"), active=True) }}
{% endblock %}
{% block heading %}
    <h1 class="title">
        {% trans given_names=persona['given_names'], family_name=persona['family_name'] -%}
            Edit {{ given_names }} {{ family_name }}
        {%- endtrans %}
        <small>{{ util.make_icon('blackboard') }} {{ ambience['event']['title'] }}</small>
    </h1>
{% endblock %}

{% macro output_name(persona) %}
    {{ persona['title'] }}
    {{ persona['given_names'] }}
    {{ persona['family_name'] }}
    {{ persona['name_supplement'] }}
{% endmacro %}

{% block content %}
    <form action="{{ cdedblink('event/change_registration') }}" method="POST" id="changeregistrationform"
          class="form-horizontal">
        {{ util.anti_csrf_token('event/change_registration') }}
        <h3 class="heading-underline">{% trans -%}Personal Information{%- endtrans %}</h3>
        {{ util.form_input_static(label=gettext("Full Name"), value=output_name(persona)) }}
        {{ util.form_input_static(label=gettext("CdEDB-ID"), value=persona['id']|cdedbid) }}
        {% if CDEDB_OFFLINE_DEPLOYMENT %}
            {{ util.form_input_text(name="reg.real_persona_id", label=gettext("Online CdEDB-ID")) }}
        {% endif %}
        {{ util.form_input_static(label=gettext("Birthday"), value=persona['birthday']|date(lang=lang)) }}
        {{ util.form_input_static(label=gettext("Gender"), value=gettext(enums['Genders'](persona['gender'])|string)) }}
        {{ util.form_input_textarea(name="reg.orga_notes", label=gettext("Orga-Notes"), rows="5") }}

        <h3 class="heading-underline">{% trans -%}Status{%- endtrans %}</h3>
        {{ util.form_input_text(name="reg.payment", label=gettext("Fee paid"), type="date",
                                placeholder="YYYY-MM-DD") }}
        {{ util.form_input_checkbox(name="reg.parental_agreement", label=gettext("Parental Consent")) }}
        {{ util.form_input_text(name="reg.checkin", label="Checked-In", type="datetime-local",
                                placeholder="YYYY-MM-DDThh:ii") }}

        {% for part_id, part in ambience['event']['parts']|xdictsort('part_begin') %}
            {% if ambience['event']['parts']|length > 1 %}
                <h4>{{ part['title'] }}</h4>
            {% endif %}
            {{ util.form_input_select(name="part{}.status".format(part_id), label=gettext("Status"),
                                      entries=enums['RegistrationPartStati']|enum_entries(processing=gettext)) }}
            {{ util.form_input_select(name="part{}.lodgement_id".format(part_id), label=gettext("Lodgement"),
                                      entries=lodgements|xdictsort('moniker')|dict_entries('id', 'moniker'), nulloption="") }}
            {{ util.form_input_checkbox(name="part{}.is_reserve".format(part_id), label=gettext("Uses Camping Mat")) }}

            {% for track_id, track in ambience['event']['tracks']|xdictsort('sortkey') if track['part_id'] == part_id %}
                {% set course_entries = courses|xdictsort('nr', pad=True)
                                        |xdict_entries('{id}', '{nr}. {shortname}', include=course_choices[track_id]) %}
                {{ util.form_input_select(name="track{}.course_id".format(track_id),
                                          label=gettext("Course {}").format(track['title'])
                                                if ambience['event']['tracks']|length > 1  else gettext("Course"),
                                          entries=course_entries,
                                          nulloption="") }}
            {% endfor %}
        {% endfor %}

        <h3 class="heading-underline">Anmeldedaten</h3>
        {{ util.form_input_checkbox(name="reg.mixed_lodging", label="Gemischte Unterbringung") }}
        {{ util.form_input_checkbox(name="reg.foto_consent", label="Foto-Einwilligung") }}
        {{ util.form_input_textarea(name="reg.notes", label="Anmerkungen", rows="5") }}
        {% for track_id, track in ambience['event']['tracks']|xdictsort('sortkey') %}
            {% if course_choices[track_id]|length > 0 %}
                <h4>
                    Kurswahl
                    {% if ambience['event']['tracks']|length > 1 %}
                    {{ track['title'] }}
                    {% endif %}
                </h4>

                {% set course_entries = courses|xdictsort('nr', pad=True)
                                        |xdict_entries('{id}', '{nr}. {shortname}', include=course_choices[track_id]) %}
                {{ util.form_input_select(name="track{}.course_instructor".format(track_id), label="Kursleiter von",
                                         entries=course_entries, nulloption="") }}
                {% for i in range(track['num_choices']) %}
                    {{ util.form_input_select(name="track{}.course_choice_{}".format(track_id, i),
                                              label="{}. Wahl".format(i + 1), entries=course_entries, nulloption="") }}
                {% endfor %}
            {% endif %}
        {% endfor %}

        {% if ambience['event']['fields']|length > 0 %}
            <h3 class="heading-underline">Datenfelder</h3>
            {% for field_id, field in ambience['event']['fields']|dictsort %}
                {% if field['association'] == enums['FieldAssociations'].registration %}
                    {{ util.form_event_field_input(field) }}
                {% endif %}
            {% endfor %}
        {% endif %}

        {{ util.form_input_submit(value="Speichern", cancellink=cdedblink("event/show_registration")) }}
    </form>
    <script type="text/javascript">
        $('#changeregistrationform').cdedbProtectChanges();
    </script>
{% endblock %}
