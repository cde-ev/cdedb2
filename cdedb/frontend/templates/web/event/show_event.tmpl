{% set sidenav_active='event_show' %}
{% extends "web/event/base.tmpl" %}
{% import "web/util.tmpl" as util with context %}
{% block scripts %}
    {% if values['event_id'] in user.orga or is_admin %}
        {{ util.cdedb_script('cdedb_searchpersona.js') }}
        {{ util.cdedb_script('cdedb_helper.js') }}
        {{ util.cdedb_script('cdedb_searchregistration.js') }}
    {% endif %}
{% endblock %}
{% if values['event_id'] in user.orga or is_admin %}
    {% set jshint = 'strong' %}
{% endif %}
{% block title %}
    {{ ambience['event']['title'] }}
{% endblock %}
{% block breadcrumb %}
{{ super() }}
{{ util.breadcrumb_link(cdedblink("event/show_event"), ambience['event']['title'], icon="blackboard", active=True) }}
{% endblock %}
{% block content %}
    {% if "event" in user.roles %}
        {{ ambience['event']['description']|md }}
    {% endif %}

    <dl class="dl-horizontal">
        {% if ambience['event']['parts']|length > 0 %}
            <dt>{% trans -%}Timeframe{%- endtrans %}</dt>
            <dd>
                {% if ambience['event']['parts']|length == 1 %}
                    {% with part = (ambience['event']['parts'].values()|list)[0] %}
                        <span class="nowrap">{{ part['part_begin']|date(lang=lang,verbosity='full') }}</span>&#8239;–
                        {#-  #}&#8239;<span class="nowrap">{{ part['part_end']|date(lang=lang,verbosity='full') }}</span>
                    {% endwith %}
                {% else %}
                    {% for part_id, part in ambience['event']['parts']|keydictsort(EntitySorter.event_part) %}
                        {{ part['title'] }}:
                        {{ part['part_begin']|date(lang=lang) }}&#8239;–&#8239;
                        {{- part['part_end']|date(lang=lang) }}<br />
                    {% endfor %}
                {% endif %}
            </dd>
        {% endif %}
        {% if not ambience['event']['registration_start'] is none %}
            <dt>{% trans -%}Registration{%- endtrans %}</dt>
            <dd>
                {% set soft_limit = ambience['event']['registration_soft_limit'] %}
                {% set hard_limit = ambience['event']['registration_hard_limit'] %}
                {% if soft_limit is none and hard_limit is none %}
                    {% trans date=ambience['event']['registration_start']|datetime(lang=lang)-%}
                    	starts {{ date }}
                    {%- endtrans %}
                {% else %}
                    {{ ambience['event']['registration_start']|datetime(lang=lang) }}&#8239;–&#8239;
                    {{- hard_limit if soft_limit is none else soft_limit|datetime(lang=lang) }}
                    {% if ((values['event_id'] in user.orga or is_admin)
                        or now() > soft_limit) and soft_limit != hard_limit %}
                        {% trans date=hard_limit|datetime(lang=lang) -%}
                        	(Late registrations until {{ date }})
                        {%- endtrans %}
                    {% endif %}
                {% endif %}
            </dd>
        {% endif %}
        {% if ambience['event']['orga_address'] %}
            <dt>{% trans %}Orga Address{% endtrans %}</dt>
            <dd><a href="mailto:{{ ambience['event']['orga_address'] }}">{{ ambience['event']['orga_address'] }}</a></dd>
        {% endif %}
        {% if "event" in user.roles %}
            <dt>{% trans -%}Orgas{%- endtrans %}</dt>
            <dd>
                {% for anid, entry in orgas.items() %} {# This is already sorted. #}
                    {{util.persona_anchor(entry) }}{% if not loop.last %},{% endif %}
                {% endfor %}
            </dd>
        {% endif %}
    </dl>
    {% if values['event_id'] in user.orga or is_admin %}
        <dl class="dl-horizontal">
            <dt>{% trans -%}Shortname{%- endtrans %}</dt>
            <dd>{{ ambience['event']['shortname'] }}</dd>
            <dt>{% trans -%}Institution{%- endtrans %}</dt>
            <dd>{{ institutions[ambience['event']['institution']] }}</dd>
            <dt>{% trans -%}CdE-Account IBAN{%- endtrans %}</dt>
            <dd>{{ ambience['event']['iban']|iban }}</dd>
            <dt>{% trans -%}Questionnaire active{%- endtrans %}</dt>
            <dd>{{ util.deko_checkbox(checked=ambience['event']['use_questionnaire'],
                        titles=[gettext("No"),gettext("Yes")]) }}</dd>
        </dl>
    {% endif %}


    {% if values['event_id'] in user.orga or is_admin %}
        {% if ambience['event']['notes'] %}
            {% call util.bootstrap_panel(title=gettext("Orga-Notes"), icon="tag",
                                         aclass="panel-default panel-condensed") %}
                {{ ambience['event']['notes']|md }}
            {% endcall %}
        {% endif %}

        {% if ambience['event']['registration_text'] %}
            {% call util.bootstrap_panel(title=gettext("Registration page free text"), icon="log-in",
                                         aclass="panel-default panel-condensed") %}
                {{ ambience['event']['registration_text']|md }}
            {% endcall %}
        {% endif %}

        {% if ambience['event']['mail_text'] %}
            {% call util.bootstrap_panel(title=gettext("Registration mail free text"), icon="envelope",
                                         aclass="panel-default panel-condensed") %}
                {{ ambience['event']['mail_text']|linebreaks }}
            {% endcall %}
        {% endif %}

        <div class="row">
            <div class="col-md-6">
                {% call util.bootstrap_panel(title=gettext("Registration Quick-Access"), aclass="panel-warning", icon='list') %}
                    <form action="{{ cdedblink('event/quick_show_registration') }}" method="GET" id="quickregistrationform">
                        <div class="sr-only">{% trans -%}Search for registration by ID or name{%- endtrans %}</div>
                        <div class="input-group">
                            <input type="text" name="phrase" class="form-control" id="input-showregistration-id"
                                   aria-label="{% trans -%}ID, name or email{%- endtrans %}"/>
                            <span class="input-group-btn">
                                {{ util.input_submit("", icon='search', title=gettext("Search")) }}
                            </span>
                        </div>
                    </form>
                    <script type="text/javascript" nonce="{{ csp_nonce }}">
                        var $i = $('#input-showregistration-id');
                        $i.cdedbSearchRegistration('{{ (cdedblink('event/select_registration')|e)
                                                       + ('?kind=orga_registration&aux='|s)
                                                       + (values['event_id']|e)
                                                       + ('&phrase=%s'|s) }}',
                                                   [], true, false, "{{ gettext("ID, name or email") }}");
                        $i.change(function(){
                            if ($(this).val()) {
                                $('#quickregistrationform').submit();
                            }
                        });
                    </script>
                {% endcall %}
            </div>

            {% if is_admin %}
                <div class="col-md-6">
                    {% call util.bootstrap_panel(title="Orgas", icon='user') %}
                    <ul>
                        {% for anid, entry in orgas.items() %} {# This is already sorted. #}
                            <li class="hide-hover-container clearfix-after">
                                {{ util.persona_anchor(entry) }} ({{ anid|cdedbid }})
                                <form action="{{ cdedblink('event/remove_orga') }}" method="POST"
                                        id="removeorgaform{{ anid }}" class="hide-hover display-inline">
                                    {{ util.anti_csrf_token('event/remove_orga') }}
                                    {{ util.input_hidden(name="orga_id", value=anid) }}
                                    {{ util.input_submit(value="", readonly=is_locked, title=gettext("Remove Orga"),
                                                         icon='minus', aclass='btn btn-xs btn-danger list-button-float') }}
                                </form>
                            </li>
                        {% endfor %}
                    </ul>
                    <form action="{{ cdedblink('event/add_orga') }}" method="POST" id="addorgaform" class="p">
                        {{ util.anti_csrf_token('event/add_orga') }}
                        <div class="input-group has-success">
                            <span class="input-group-addon">{{ util.make_icon('plus', title=gettext("Add Orga")) }}</span>
                            {{ util.input_text(name="orga_id", placeholder="DB-XXXX-X", anid='input-add-orga',
                                               arialabel=gettext("ID of the new Orga")) }}
                            <script type="text/javascript" nonce="{{ csp_nonce }}">
                                $('#input-add-orga').cdedbSearchPerson(
                                    '{{ (cdedblink('core/select_persona')|e) + ('?kind=orga_event_user&phrase=%s&aux='|s) +
                                        (ambience['event']['id']|string|e) }}',
                                    {{ ambience['event']['orgas']|list|json|s }}, false, false,
                                    "{{ gettext("ID, name, email") }}"
                                );
                            </script>
                            <div class="input-group-btn">
                                {{ util.input_submit(value=gettext("Add"), readonly=is_locked, aclass='btn btn-success') }}
                            </div>
                        </div>
                        {{ util.output_errors('orga_id', wrapper=True) }}
                    </form>
                    {% endcall %}
                </div>
            {% endif %}

            <div class="col-md-6">
                {% call util.bootstrap_panel(title=gettext("Minor Form"), icon='file', aclass='panel-warning') %}
                    <p>
                        {% if minor_form_present %}
                            {% trans link=util.href(cdedblink('event/get_minor_form'), gettext("current Form"),
                                                    icon='file') -%}
                            	Form present: {{ link }}
                            {%- endtrans %}
                            <form action="{{ cdedblink("event/change_minor_form") }}" method="POST"
                                id="removeminorformform">
                                {{ util.anti_csrf_token("event/change_minor_form") }}
                                {{ util.input_hidden(name="delete", value=True) }}
                                {{ util.input_submit(value=gettext("Remove Minor Form"), readonly=is_locked,
                                                     icon="trash", aclass='btn btn-danger') }}
                                {{ util.input_checkbox(name="ack_delete", label=gettext("Are you sure?")) }}
                            </form>
                            <script type="text/javascript" nonce="{{ csp_nonce }}">
                                $('#removeminorformform').cdedbProtectAction("{{ gettext("The minor form will be permanently deleted.") }}");
                                $('#removeminorformform').find('[name="ack_delete"]').prop('checked', true).parent().hide();
                            </script>
                        {% else %}
                            <strong>{{ util.make_icon('warning-sign') }}
                                {% trans -%}No Form present – Minors cannot register{%- endtrans %}
                            </strong>
                        {% endif %}
                    </p>
                    <form action="{{ cdedblink('event/change_minor_form') }}" method="POST" enctype="multipart/form-data"
                     id="changeminorformform" {% if 'minor_form' in errors %}class="has-error"{% endif %}>
                        {{ util.anti_csrf_token('event/change_minor_form') }}
                        {{ util.input_hidden(name="delete", value=True) }}
                        <div class="input-group">
                            {{ util.input_file(name="minor_form", accept="application/pdf",
                                               arialabel=gettext("PDF of the new Minor Form")) }}
                            <div class="input-group-btn">
                                {{ util.input_submit(value=gettext("Upload"), readonly=is_locked, icon='upload') }}
                            </div>
                        </div>
                        {{ util.output_errors('minor_form') }}
                    </form>
                {% endcall %}
            </div>

            <div class="col-md-6">
                {% call util.bootstrap_panel(title=gettext("Offline Use"), icon='cloud-download', aclass='panel-danger') %}
                    {% if ambience['event']['offline_lock'] != CDEDB_OFFLINE_DEPLOYMENT %}
                        {% if CDEDB_OFFLINE_DEPLOYMENT %}
                            <p>
                                {% trans -%}The event is in offline mode, but locked to be used in another instance.{%- endtrans %}
                                {% trans -%}
                                    To unlock it, run the offline initialization script inside the VM with
                                    the event data you would like to use.
                                {%- endtrans %}
                            </p>
                        {% else %}
                            <p>
                                {% trans -%}The event is locked for offline use.{%- endtrans %}
                                {% trans -%}To unlock it, upload the export of the Offline-DB here.{%- endtrans %}
                            </p>
                            <form action="{{ cdedblink('event/unlock_event') }}" method="POST"
                                  enctype="multipart/form-data" id="unlockform"
                                  {% if 'json' in errors %}class="has-error"{% endif %}>
                                {{ util.anti_csrf_token('event/unlock_event') }}
                                <div class="input-group">
                                    {{ util.input_file(name="json", accept="text/json",
                                                       arialabel=gettext("Export of the Offline-DB")) }}
                                    <div class="input-group-btn">
                                        {{ util.input_submit(value=gettext("Unlock"), icon='cloud-upload',
                                                             aclass='btn btn-success') }}
                                    </div>
                                </div>
                                {{ util.output_errors('json') }}
                            </form>
                        {% endif %}
                    {% else %}
                        <p>
                            {% if CDEDB_OFFLINE_DEPLOYMENT %}
                                {% trans -%}The event is in offline mode.{%- endtrans %}
                            {% endif %}
                            {% trans -%}The event is not locked.{%- endtrans %}
                        </p>
                        <div class="p">
                            <form action="{{ cdedblink('event/lock_event') }}" method="POST" id="lockform">
                                {{ util.anti_csrf_token('event/lock_event') }}
                                {{ util.input_submit(value=gettext("Lock"), icon='lock', aclass="btn btn-danger") }}
                            </form>
                        </div>
                        <p class="text-muted">
                            {{ util.make_icon('info-sign') }}
                            {% trans -%}By locking the event, all changes are prevented.{%- endtrans %}
                            {% if CDEDB_OFFLINE_DEPLOYMENT %}
                                {% trans -%}
                                    This way the event can be imported from here into another
                                    offline instance without causing conflicts. Be aware that
                                    unlocking can not be done here, but must be done by running the
                                    offline initialization script.
                                {%- endtrans %}
                            {% else %}
                                {% trans -%}
                                    This way the event can be managed in offline mode without
                                    causing conflicts.
                                {%- endtrans %}
                            {% endif %}
                        </p>
                    {% endif %}
                {% endcall %}
            </div>

            <div class="col-md-6">
                {% call util.bootstrap_panel(title=gettext("Event Logo"), icon="picture") %}
                    {% if logo_present %}
                        <embed src="{{ cdedblink('event/get_event_logo') }}#view=Fit&scrollbar=0&toolbar=0"
                               type="application/pdf" width="150px" height="150px" />
                        <form action="{{ cdedblink('event/set_event_logo') }}" method="POST"
                                id="removeeventlogoform">
                            {{ util.anti_csrf_token('event/set_event_logo') }}
                            {{ util.input_hidden(name="delete", value=True) }}
                            {{ util.input_checkbox(name="logo_ack_delete", label=gettext("Are you sure?")) }}
                            {{ util.input_submit(value=gettext("Remove Logo"), readonly=is_locked,
                                                 icon='trash', aclass='btn btn-danger') }}
                        </form>
                        <script type="text/javascript" nonce="{{ csp_nonce }}">
                            $('#removeeventlogoform').cdedbProtectAction("{{ gettext("The event logo will be permanently deleted.") }}");
                            $('#removeeventlogoform').find('[name="logo_ack_delete"]').prop('checked', true).parent().hide();
                        </script>
                    {% else %}
                        {% trans -%}No logo set.{%- endtrans %}
                    {% endif %}
                    <form action="{{ cdedblink('event/set_event_logo') }}" method="POST" enctype="multipart/form-data"
                          id="seteventlogoform" {% if "event_logo" in errors %}class="has-error"{% endif %}>
                        {{ util.anti_csrf_token('event/set_event_logo') }}
                        {{ util.input_hidden(name="delete", value=False) }}
                        <div class="input-group">
                            {{ util.input_file(name="event_logo", accept="image/*") }}
                            <div class="input-group-btn">
                                {{ util.input_submit(value=gettext("Upload"), readonly=is_locked, icon='upload') }}
                            </div>
                        </div>
                        {{ util.output_errors("event_logo") }}
                    </form>
                {% endcall %}
            </div>
        </div>
    {% endif %}


    {% if "event_admin" in user.roles or "ml_admin" in user.roles
            and ("cde_admin" in user.roles and not ambience['event']['is_archived']
                 or "ml_admin" in user.roles and (not ambience['event']['orga_address']
                                                  or not participant_list)) %}
        {% call util.bootstrap_panel(title=gettext("Actions"), icon="warning-sign", aclass="panel-danger mosp") %}
            {% if "ml_admin" in user.roles %}
                {% if not ambience['event']['orga_address'] %}
                    <div class="row">
                        <div class="col-sm-4">
                            <div class="p">
                                <form action="{{ cdedblink('event/create_event_mailinglist') }}" method="POST" id="createorgalistform"
                                        style="display: inline;">
                                    {{ util.anti_csrf_token('event/create_event_mailinglist') }}
                                    {{ util.input_hidden("orgalist", value=True) }}
                                    {{ util.input_submit(value=gettext("Create Orga-Mailinglist"),
                                                         aclass="btn btn-success", icon="plus") }}
                                </form>
                            </div>
                        </div>
                        <div class="col-sm-8">
                            <p class="text-muted">
                                {% trans -%}
                                    Create an orga mailinglist for this event with a default configuration.
                                {%- endtrans %}
                            </p>
                        </div>
                    </div>
                {% endif %}
                {% if not participant_list %}
                    <div class="row">
                        <div class="col-sm-4">
                            <div class="p">
                                <form action="{{ cdedblink('event/create_event_mailinglist') }}" method="POST" id="createorgalistform"
                                        style="display: inline;">
                                    {{ util.anti_csrf_token('event/create_event_mailinglist') }}
                                    {{ util.input_hidden("orgalist", value=False) }}
                                    {{ util.input_submit(value=gettext("Create Participant-Mailinglist"),
                                                         aclass="btn btn-success", icon="plus") }}
                                </form>
                            </div>
                        </div>
                        <div class="col-sm-8">
                            <p class="text-muted">
                                {% trans -%}
                                    Create a participant mailinglist for this event with a default configuration.
                                {%- endtrans %}
                            </p>
                        </div>
                    </div>
                {% endif %}
            {% endif %}
            {% if is_admin and "cde_admin" in user.roles %}
                <div class="row">
                    <div class="col-sm-4">
                        <div class="p">
                            <form action="{{ cdedblink('event/archive_event') }}" method="POST" id="archiveeventform"
                                    style="display: inline;">
                                {{ util.anti_csrf_token('event/archive_event') }}
                                {{ util.input_submit(value=gettext("Archive"), readonly=(is_locked or ambience['event']['end'] >= now().date()),
                                                     aclass="btn btn-danger", icon="folder-close",
                                                     title=gettext("Event is not concluded yet.") if ambience['event']['end'] >= now().date() else "") }}
                                {{ util.input_checkbox(name="ack_archive", label=gettext("Are you sure?")) }}
                            </form>
                        </div>
                    </div>
                    <div class="col-sm-8">
                        <p class="text-muted">
                            {% trans -%}
                                Archives the event. This creates a new “Past Event” in the CdE-Realm and transfers
                                course and participant information there.
                            {%- endtrans %}
                        </p>
                    </div>
                </div>
                <script type="text/javascript" nonce="{{ csp_nonce }}">
                    $('#archiveeventform').cdedbProtectAction("{{ gettext("The event will be permanently archived.") }}");
                    $('#archiveeventform').find('[name="ack_archive"]').prop('checked', true).parent().hide();
                </script>
            {% endif %}
            <div class="row">
                <div class="col-sm-4">
                    <div class="p">
                        <form action="{{ cdedblink('event/delete_event') }}" method="POST" id="deleteeventform"
                              style="display: inline;">
                            {{ util.anti_csrf_token('event/delete_event') }}
                            {{ util.input_submit(value=gettext("Delete"), readonly=(is_locked or ambience['event']['end'] >= now().date()),
                                                 aclass="btn btn-danger", icon="trash",
                                                 title=gettext("Event is not concluded yet.") if ambience['event']['end'] >= now().date() else "") }}
                            {{ util.input_checkbox(name="ack_delete", label=gettext("Are you sure?")) }}
                        </form>
                    </div>
                </div>
                <div class="col-sm-8">
                    <div class="p text-muted">
                        {% trans -%}
                            Deletes the event, including all course and participant information.
                            This should usually not be done before the event has been archived and fully concluded.
                        {%- endtrans %}
                    </div>
                </div>
            </div>
            <script type="text/javascript" nonce="{{ csp_nonce }}">
                $('#deleteeventform').cdedbProtectAction("{{ gettext("The event will be permanently deleted.") }}");
                $('#deleteeventform').find('[name="ack_delete"]').prop('checked', true).parent().hide();
            </script>
        {% endcall %}
    {% endif %}
{% endblock %}
