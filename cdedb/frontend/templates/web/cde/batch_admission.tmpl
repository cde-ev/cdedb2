{% set sidenav_active='cde_manage_users' %}
{% extends "web/cde/base.tmpl" %}
{% import "web/util.tmpl" as util with context %}

{% block scripts %}
    {{ util.cdedb_script('cdedb_csv_tools.js') }}
    {{ util.cdedb_script('cdedb_helper.js') }}
{% endblock %}

{% set jshint='strong' %}

{% block title %}
    {% trans %}Create Accounts{% endtrans %}
{% endblock %}

{% block breadcrumb %}
    {{ super() }}
    {{ util.breadcrumb_link(cdedblink("cde/user_search"), gettext("Manage Users")) }}
    {{ util.breadcrumb_link(cdedblink("cde/batch_admission_form"), gettext("Batch Admission"), active=True) }}
{% endblock %}

{% block heading %}
    {{ util.doclink_('Handbuch_Verwaltungsteam', anchor='massenaufnahme-von-mitgliedern') }}
    <h1 class="title">{{ gettext("Create Accounts") }}</h1>
{% endblock %}

{% macro ba_submit_button() %}
    {% if values['finalized'] %}
        {{ util.form_input_submit(label=gettext("Create"), horizontal=False) }}
    {% else %}
        {% if data %}
            {{ util.form_input_submit(label=gettext("Validate Again"), horizontal=False) }}
        {% else %}
            {{ util.form_input_submit(label=gettext("Validate"), horizontal=False) }}
        {% endif %}
    {% endif %}
{% endmacro %}

{% block content %}
    <form action="{{ cdedblink('cde/batch_admission') }}" method="POST" id="admissionform"
          enctype="multipart/form-data">
        {{ util.anti_csrf_token('cde/batch_admission') }}
        {{ util.input_hidden("finalized") }}
        <div class="row">
            <div class="col-md-6">
                {{ util.form_input_checkbox("membership", label=gettext("Set CdE-Membership"), horizontal=False) }}
                {{ util.form_input_checkbox("trial_membership", label=gettext("Set Trial-Membership"),
                                            horizontal=False) }}
            </div>
            <div class="col-md-6">
                {{ util.form_input_checkbox("consent", label=gettext("Privacy Consent given"), horizontal=False) }}
                {{ util.form_input_checkbox("sendmail", label=gettext("Send Welcome Mail"), horizontal=False) }}
            </div>
        </div>
        {{ util.form_input_file(name="accounts_file", horizontal=False, label=gettext("Data"), accept="text/csv,.csv") }}
        {{ util.form_input_textarea(name="accounts", horizontal=False, rows=8, anid='input-data') }}

        <p class="help-block">
            {{ util.make_icon('info-circle') }} {% trans %}Enter one dataset per line.{% endtrans %}
            {% trans %}Use the following format:{% endtrans %}
        </p>
        <pre>{{   "&quot;%s&quot;;&quot;%s&quot;;&quot;%s&quot;;&quot;%s&quot;;&quot;%s&quot;;<!--
                -->&quot;%s&quot;;&quot;%s&quot;;&quot;%s&quot;;&quot;%s&quot;;<!--
                -->&quot;%s&quot;;&quot;%s&quot;;&quot;%s&quot;;&quot;%s&quot;;<!--
                -->&quot;%s&quot;;&quot;%s&quot;;&quot;%s&quot;;&quot;%s&quot;"|
                format(_("Academy"), _("Course"), _("Family Name"), _("Given Names"), _("Title_[[of a persona]]"), _("Name Affix"),
                       _("Birth Name"), _("Gender"), _("Address Supplement"), _("Street, Nr."), _("Zipcode"), _("City"),
                       _("Country"), _("Phone number"), _("Mobilephone number"), _("E-Mail"), _("Birthday"))|s }}
        </pre>
        <p class="help-block">
            {% trans %}For Gender enter 1 for male, 2 for female, 3 for other and 0 for not specified.{% endtrans %}
        </p>
        <p class="help-block">
            {% trans %}The course column first tries to match the course number and if this fails the course title.{% endtrans %}
        </p>

        {{ ba_submit_button() }}

        {% if data %}
            <h2>{% trans %}Validation results{% endtrans %}</h2>
            {% for dataset in data %}
                {{ util.input_hidden("hash{}".format(dataset['lineno'])) }}
                <strong>
                    <span class="row-key" data-row="{{ dataset['lineno'] }}">
                        {% trans lineno=dataset['lineno'] + 1 %}Line {{ lineno }}{% endtrans -%}
                    </span>:
                    {# We don't use util.person_name() here, b/c dataset['raw'] is no full persona object, esp. it
                       misses a 'display_name' entry #}
                    {{ dataset['raw']['given_names'] }} {{ dataset['raw']['family_name'] }}
                    {% if dataset['raw']['username'] %}
                        &lt;{{ dataset['raw']['username'] }}&gt;
                    {% endif %}
                    {% if dataset['raw']['birthday'] %}
                        {% trans %}born{% endtrans %} {{ dataset['raw']['birthday'] }}
                    {% endif %}
                    {% if dataset['pevent_id'] %}
                        ({{ pevents[dataset['pevent_id']] }}
                        {%- if dataset['pcourse_id'] -%}
                            /{{ pcourses[dataset['pevent_id']][dataset['pcourse_id']] }}
                        {%- endif -%}
                        )
                    {% endif %}
                </strong>

                <div class="batch-line-body">
                    {% if dataset['problems'] or dataset['warnings'] %}
                        <ul class="list-unstyled" id="problems{{ dataset['lineno'] }}">
                            {% for key, problem in dataset['problems'] %}
                                <li class="text-danger">
                                    {{ util.make_icon('exclamation-circle', title=gettext("Error")) }}
                                    {% if key %}
                                        <em class="row-col-key" data-row="{{ dataset['lineno'] }}"
                                          data-col="{{ csvfields.get(key, -1) }}">
                                            {{ key -}}
                                        </em>:
                                    {% endif %}
                                    {{ util.format_error(problem) }}
                                </li>
                            {% endfor %}
                            {% for key, warning in dataset['warnings'] %}
                                <li class="text-warning">
                                    {{ util.make_icon('exclamation-triangle', title=gettext("Warning")) }}
                                    {% if key %}
                                        <em class="row-col-key" data-row="{{ dataset['lineno'] }}"
                                          data-col="{{ csvfields.get(key, -1) }}">
                                            {{ key -}}
                                        </em>:
                                    {% endif %}
                                    {{ util.format_error(warning) }}
                                </li>
                            {% endfor %}
                        </ul>
                    {% endif %}

                    <div class="row">
                        <div class="col-md-6">
                            <label>{% trans %}Action{% endtrans %}</label>
                            <div class="p">
                                {#- jinja does not support list comprehension ... #}
                                {%- set myentries = [] %}
                                {%- for resolution in enums['LineResolutions'] %}
                                    {# Trial membership may only be granted to non-members #}
                                    {% if dataset['doppelganger_id']
                                            and dataset['doppelgangers'][dataset['doppelganger_id']]['is_member']
                                            and resolution.do_trial() %}
                                        {% continue %}
                                    {# Modification resolutions make only sense if there is a doppelganger #}
                                    {% elif not dataset['doppelgangers'] and resolution.is_modification() %}
                                        {% continue %}
                                    {# We map None -> LineResolutions.none later in the frontend #}
                                    {% elif resolution == enums['LineResolutions'].none %}
                                        {% continue %}
                                    {% endif %}
                                    {%- do myentries.append((resolution.value, gettext(resolution|string))) %}
                                {%- endfor %}
                                {{ util.input_select("resolution{}".format(dataset['lineno']), myentries,
                                        nulloption=nbsp, aclass="form-control select-action",
                                        arialabel=gettext("Operation for line %s")|format(dataset['lineno'])) }}
                            </div>
                            {% if dataset['pevent_id'] %}
                                {{ util.input_checkbox("is_orga{}".format(dataset['lineno']), label=gettext("Orga")) }}
                                {% if dataset['pcourse_id'] %}
                                    &emsp;{{ util.input_checkbox("is_instructor{}".format(dataset['lineno']), label=gettext("Course instructor")) }}
                                {% endif %}
                                &emsp;
                            {% endif %}
                            {% if dataset['persona']['username'] and dataset['doppelgangers'] %}
                                {{ util.input_checkbox("update_username{}".format(dataset['lineno']), label=gettext("Update E-Mail")) }}
                            {% endif %}
                        </div>

                        {% if dataset['doppelgangers'] %}
                            <div class="col-md-6" id="doppelgangers{{ dataset['lineno'] }}">
                                <label id="doppelgangers-{{ dataset['lineno'] }}-label">
                                    {% trans %}Merge with Account{% endtrans %}
                                </label>
                                <div class="p strip-space">
                                    <div role="radiogroup"
                                         aria-labelledby="doppelgangers-{{ dataset['lineno'] }}-label">
                                        <div class="radio">
                                            <label>
                                                {% with name = "doppelganger_id{}".format(dataset['lineno']) %}
                                                    <input type="radio" name="{{ name }}" value=""
                                                        {% if ''|stringIn(values.getlist(name)) or name not in values %}
                                                           checked="checked"
                                                        {% endif %} />
                                                {% endwith %}
                                                –
                                            </label>
                                        </div>
                                        {%- for key, value in dataset['doppelgangers']|keydictsort(EntitySorter.persona) %}
                                            <div class="radio">
                                                <label>
                                                    {% with name = "doppelganger_id{}".format(dataset['lineno']) %}
                                                        <input type="radio" name="{{ name }}" value="{{ key }}"
                                                            {% if key|stringIn(values.getlist(name)) %}checked="checked"{% endif %} />
                                                    {% endwith %}
                                                    {{ util.print_doppelganger(value) }}
                                                </label>
                                            </div>
                                        {%- endfor %}
                                    </div>
                                </div>
                            </div>
                        {% endif %}
                    </div>
                </div>
            {% endfor %}

            {{ ba_submit_button() }}

            <script nonce="{{ csp_nonce }}">
                $(function() {
                    /* Add csv jumps */
                    var $textinput = $('#input-data');
                    $('.row-col-key').addClass('clickable').click(function() {
                        $textinput.jumpCsvPosition($(this).attr('data-row'),$(this).attr('data-col'));
                    });
                    $('.row-key').addClass('clickable').click(function() {
                        $textinput.jumpCsvPosition($(this).attr('data-row'),-1);
                    });

                    /* Add highlight of undecided rows */
                    var updateLineState = function() {
                        if ($(this).val() == '')
                            $(this).closest('.batch-line-body').css('background-color', '#eee');
                        else
                            $(this).closest('.batch-line-body').css('background-color', '');
                    };
                    $('.select-action').change(updateLineState);
                    $('.select-action').each(function() { updateLineState.call(this) });

                    /* protect form changes */
                    $('#admissionform').cdedbProtectChanges();
                });
            </script>
        {% endif %}
    </form>

{% endblock %}
