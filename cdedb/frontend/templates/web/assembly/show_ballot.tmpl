{% set sidenav_active='assembly_ballots' %}
{% extends "web/assembly/base.tmpl" %}
{% import "web/util.tmpl" as util with context %}
{% block scripts %}{{ util.cdedb_script('cdedb_helper.js') }}{{ util.cdedb_script('cdedb_voting.js') }}{% endblock %}
{% set jshint = 'weak' %}
{% block title %}{{ ambience['ballot']['title'] }} ({{ ambience['assembly']['title'] }}){% endblock %}
{% block heading %}
    <h1 class="title">
        {{ ambience['ballot']['title'] }}
    </h1>
{% endblock %}
{% block breadcrumb %}
    {{ super() }}
    {{ util.breadcrumb_link(cdedblink("assembly/show_assembly"), ambience['assembly']['title'], icon="bullhorn") }}
    {{ util.breadcrumb_link(cdedblink("assembly/list_ballots"), gettext("Ballots")) }}
    {{ util.breadcrumb_link(cdedblink("assembly/show_ballot"), ambience['ballot']['title'], icon="thumbs-up",
                            active=True) }}
{% endblock %}
{% block content %}
    {# Admin modification options (delete and edit) #}
    {% if is_admin and now() < ambience['ballot']['vote_begin']  %}
        <div class="p">
            {{ util.href(cdedblink("assembly/change_ballot_form"), gettext("Edit"), icon="pencil",
                    aclass="btn btn-sm btn-warning") }}
            {% if CDEDB_DEV %}
                <form action="{{ cdedblink("assembly/ballot_start_voting") }}" method="POST"
                      id="startvotingform" style="display: inline;">
                    {{ util.anti_csrf_token("assembly/ballot_start_voting") }}
                    {{ util.input_submit(value=gettext("Start Voting"), aclass="btn btn-sm btn-success",
                            icon="check") }}
                </form>
            {% endif %}
        </div>
    {% endif %}

    {# General information about ballot and personalized state info #}
    {{ ambience['ballot']['description']|md }}

    <dl class="dl-horizontal">
        <dt>{% trans -%}Voting Period{%- endtrans %}</dt>
        <dd>
            {% trans begin=ambience['ballot']['vote_begin']|datetime(lang=lang),
                     end=ambience['ballot']['vote_end']|datetime(lang=lang) -%}
            From {{ begin }} until {{ end }}.
            {%- endtrans %}
            {% if ambience['ballot']['extended'] is none %}
                {% if ambience['ballot']['quorum'] %}
                    <br />
                    {% trans extension=ambience['ballot']['vote_extension_end']|datetime(lang=lang),
                             quorum=ambience['ballot']['quorum'] -%}
                    Extension until {{ extension }} if {{ quorum }} votes are not reached.
                    {%- endtrans %}
                {% endif %}
            {% else %}
                {% if ambience['ballot']['extended'] %}
                    <br />
                    {% trans extension=ambience['ballot']['vote_extension_end']|datetime(lang=lang),
                             quorum=ambience['ballot']['quorum'] -%}
                    Extended until {{ extension }} because {{ quorum }} votes were not reached.
                    {%- endtrans %}
                {% elif ambience['ballot']['quorum'] %}
                    <br />
                    {% trans quorum=anbience['ballot']['quorum'] -%}
                    No extension neccessary, because {{ quorum }} votes were reached.
                    {%- endtrans %}
                {% endif %}
            {% endif %}
        </dd>
        <dt>{% trans -%}Status{%- endtrans %}</dt>
        <dd>
            {% if now() < ambience['ballot']['vote_begin'] %}
                <strong>{% trans -%}This ballot has not yet begun.{%- endtrans %}</strong><br />
                {% trans -%}Admins can still make changes to description, files and candidates.{%- endtrans %}
                {% if is_admin %}
                    {% trans -%}
                        All CdE-Members and external assembly participants can already
                        see this ballot and all associated information.
                    {%- endtrans %}
                {% endif %}
            {% elif ambience['ballot']['is_tallied'] %}
                <strong>{% trans -%}This ballot has been concluded.{%- endtrans %}</strong><br />
                {% trans -%}You can see the results below.{%- endtrans %}
            {% elif not attends %}
                {% trans -%}
                    You are not participating in this assembly, therefore you cannot vote in this ballot.
                {%- endtrans %}
            {% elif ambience['ballot']['is_voting'] %}
                <strong>{% trans -%}This ballot is currently open for voting.{%- endtrans %}</strong><br />
                {% if voted %}
                    {% if split_vote|length == 1 %}
                        <span class='text-warning'>{% trans -%}You have abstained.{%- endtrans %}</span>
                        {% trans -%}You can make your choice below, during the voting period.{%- endtrans %}
                    {% else %}
                        <span class='text-success'>{% trans -%}You already voted.{%- endtrans %}</span>
                        {% trans -%}
                            You can check your vote below and change it
                            before the end of the voting period.
                        {%- endtrans %}
                    {% endif %}
                {% endif %}
            {% endif %}
        </dd>
    </dl>

    {% if is_admin and ambience['ballot']['notes'] %}
        {% call util.bootstrap_panel(title=gettext("Admin-Notes"), icon="tag", aclass="panel-default panel-condensed") %}
            {{ ambience['ballot']['notes']|md }}
        {% endcall %}
    {% endif %}

    {# Add candidate form #}
    {% if is_admin and now() < ambience['ballot']['vote_begin']  %}
        {% call util.bootstrap_panel(aclass="panel-success panel-condensed", title=gettext("Add Candidate"),
                icon='plus') %}
            <form action="{{ cdedblink('assembly/add_candidate') }}" method="POST" id="addcandidateform" class="row">
                {{ util.anti_csrf_token('assembly/add_candidate') }}
                <div class="col-md-3 {% if 'moniker' in errors %}has-error{% endif %}">
                    {{ util.input_text(name="moniker", placeholder=gettext("Shortname"), aclass="form-control input-sm",
                                       arialabel=gettext("Shortname")) }}
                    {{ util.output_errors("moniker") }}
                </div>
                <div class="col-md-6 {% if 'description' in errors %}has-error{% endif %}">
                    {{ util.input_text(name="description", placeholder=gettext("Description"),
                                       aclass="form-control input-sm", arialabel=gettext("Description")) }}
                    {{ util.output_errors("description") }}
                </div>
                <div class="col-md-3">
                    {{ util.input_submit(value=gettext("Add"), aclass="btn btn-primary btn-sm") }}
                </div>
            </form>
        {% endcall %}
    {% endif %}

    {# Display of result #}
    {% if ambience['ballot']['is_tallied'] %}
        <h3>{% trans -%}Result{%- endtrans %}</h3>
        {% if result['winners'] %}
            <ol>
                {% for candidate_ids in result['winners'] %}
                    <li value="{{ loop.index }}">
                        {% for candidate_id in candidate_ids %}
                            {% if not ambience['ballot']['votes'] %}
                                <span class="label label-primary">
                                    {{- ambience['ballot']['candidates'][candidate_id]['moniker'] -}}
                                </span>
                            {% endif %}
                            {{ ambience['ballot']['candidates'][candidate_id]['description'] }}
                            {% if result['counts'] %}
                                {% set candidate_moniker = ambience['ballot']['candidates'][candidate_id]['moniker'] %}
                                {% trans count=result['counts'][candidate_moniker] -%}
                                    ({{ count }} votes)
                                {%- endtrans %}
                            {% endif %}
                            {% if not loop.last %}
                                <br /><span class="sr-only">{% trans -%}and{%- endtrans %}</span>
                            {% endif %}
                        {% endfor %}
                    </li>
                {% endfor %}
            </ol>
        {% endif %}
        {% if ambience['ballot']['use_bar'] and result['losers'] %}
            <p class="text-info">
                {% if ambience['ballot']['votes'] %}
                    {% trans against_all=gettext("Against all Candidates") -%}
                        The following candidates have less votes than the {{ against_all }} choice.
                    {%- endtrans %}
                {% else %}
                    {% trans abm="<code>%(abm)s</code>"|s|format(abm=ASSEMBLY_BAR_MONIKER) -%}
                        The following candidates lost against the bar ({{ abm }}).
                    {%- endtrans %}
                {% endif %}
            <ol>
                {% for candidate_ids in result['losers'] %}
                    <li value="{{ (loop.index + result['winners']|length) }}">
                        {% for candidate_id in candidate_ids %}
                            {% if not ambience['ballot']['votes'] %}
                                <span class="label label-primary">
                                    {{- ambience['ballot']['candidates'][candidate_id]['moniker'] -}}
                                </span>
                            {% endif %}
                            {{ ambience['ballot']['candidates'][candidate_id]['description'] }}
                            {% if result['counts'] %}
                                {% set candidate_moniker = ambience['ballot']['candidates'][candidate_id]['moniker'] %}
                                {% trans count=result['counts'][candidate_moniker] -%}
                                    ({{ count }} votes)
                                {%- endtrans %}
                            {% endif %}
                            {% if not loop.last %}
                                <br /><span class="sr-only">{% trans -%}and{%- endtrans %}</span>
                            {% endif %}
                        {% endfor %}
                    </li>
                {% endfor %}
            </ol>
        {% endif %}

        <h4>{% trans -%}Summary{%- endtrans %}</h4>
        {% if not ambience['ballot']['votes'] %}
            <pre style="max-width: 500px;">{{ result['result'] }}</pre>

            {# info box for preferential votes #}
            {% call util.bootstrap_panel(title=gettext("Help"), icon='info-sign', aclass='panel-default mosp') %}
                <p>
                    {% trans link=gettext("<a href='https://en.wikipedia.org/w/index.php?title=Schulze_method&oldid=904460701'>Schulze method</a>")|s -%}
                        This vote was a preferential vote. Voters arranged the candidates according to their preference.
                        The preferences of all participants were evaluated using the {{ link }},
                        to determine the winner.
                    {%- endtrans %}
                </p>
                <p>
                    {% trans  gt="<code>></code>"|s, eq="<code>=</code>"|s -%}
                        The summary shows the combined preference list of all participant.
                        The greater-than character {{ gt }} means that the candidate, represented by their
                        shortname, on the left has higher overall preference than the one on the right.
                        The equals character {{ eq }} means that two or more candidates have the same overall
                        preference across all participants.
                    {%- endtrans %}
                </p>
                {% if ambience['ballot']['use_bar'] %}
                    <p>
                        {% trans abm="<code>%(abm)s</code>"|s|format(abm=ASSEMBLY_BAR_MONIKER) -%}
                            Additionally the moniker {{ abm }} shows where in the rejection bar was ranked in the
                            overall preference list.
                            Should no candidate have won against the bar, the board may take additional measures.
                        {%- endtrans %}
                    </p>
                {% endif %}
            {% endcall %}
        {% endif %}

        <p>{{ util.href(cdedblink("assembly/get_result"), gettext("Download Results"), icon="download") }}</p>

        <h3>{% trans -%}Your Vote{%- endtrans %}</h3>
        <p>
            {% if not attends %}
                {% trans -%}You are not participating in this assembly.{%- endtrans %}
            {% elif not ambience['assembly']['is_active'] %}
                {% trans -%}The assembly concluded and the votes got encrypted.{%- endtrans %}
            {% elif not voted %}
                {% if ambience['ballot']['is_voting'] %}
                    {% trans -%}You have not voted yet.{%- endtrans %}
                {% else %}
                    {% trans -%}You did not vote.{%- endtrans %}
                {% endif %}
            {% elif ambience['ballot']['votes'] %}
                {# Show own vote under result: Classical vote #}
		{% if split_vote|length == 1 %}
		    {% trans -%}You abstained.{%- endtrans %}
		{% elif split_vote|length == 2 and split_vote[0] == [ASSEMBLY_BAR_MONIKER] %}
		    {% trans -%}You voted against all candidates.{%- endtrans %}
		{% else %}
		    {% trans -%}You voted for the following candidates:{%- endtrans %}<br />
		    {% for voted in split_vote[0] %}
			{{ candidates[voted]['description'] }}{% if not loop.last %},{% endif %}
		    {% endfor %}
		{% endif %}
            {% else %}
                {# Show own vote under result: Preferential vote #}
		{%- trans vote="<code>%(vote)s</code>"|s|format(vote=voted) -%}
		    You voted {{ vote }}.
		{%- endtrans -%}
            {% endif %}
        </p>
    {% else %}

        {# Classical voting, not tallied #}
        {% if ambience['ballot']['votes'] %}

            {# Classical voting: Voting form #}
            {% if ambience['ballot']['is_voting'] and attends %}
                <h3>{% trans -%}Ballot{%- endtrans %}</h3>
                <form action="{{ cdedblink('assembly/vote') }}" method="POST" id="voteform" class="form-horizontal">
                    {{ util.anti_csrf_token('assembly/vote') }}
                    {% if ambience['ballot']['votes'] > 1 %}
                        {{ util.form_input_static(value=gettext("You have %(votes)s votes.")|
                                                        format(votes=ambience['ballot']['votes']), small=True) }}
                    {% endif %}
                    {{ util.form_input_checkboxes("vote", label=gettext("Candidates"),
                                                  entries=ambience['ballot']['candidates']|xdictsort('description', pad=True)|dict_entries('moniker', 'description'),
                                                  radio=(ambience['ballot']['votes'] == 1), small=True) }}
                    {% if ambience['ballot']['use_bar'] %}
                        {{ util.form_input_checkboxes(
                            "vote", label="", entries=[(ASSEMBLY_BAR_MONIKER, gettext("Against all Candidates"))],
                            small=True, radio=(ambience['ballot']['votes'] == 1),
                            info=gettext("With this option you reject all candidates. "
                                         "If this gets a majority the board may take additional measures.")) }}
                    {% endif %}
                    {{ util.form_input_submit(value=gettext("Vote"), small=True) }}
                </form>
                <script type="text/javascript" nonce="{{ csp_nonce }}">
                    {% if ambience['ballot']['votes'] > 1 %}
                        $('#voteform').cdedbMultiVote({{ ambience['ballot']['votes'] }}, '{{ ASSEMBLY_BAR_MONIKER }}');
                    {% endif %}
                    $('#voteform').cdedbProtectChanges();
                </script>

                <div class="form-horizontal">
                    <div class="form-group">
                        <div class="col-sm-2 control-label">
                            <strong>{% trans -%}Additional Options{%- endtrans %}</strong>
                        </div>
                        <div class="col-sm-10">
                            <form action="{{ cdedblink('assembly/vote') }}" method="POST" id="abstentionform"
                                    style="display: inline;">
                                {{ util.anti_csrf_token('assembly/vote') }}
                                {{ util.input_hidden(name="vote", value="special: abstain") }}
                                {{ util.input_submit(value=gettext("Abstain"), icon="stop") }}
                            </form>
                        </div>
                    </div>
                </div>

            {# Classical voting: Presentation of candidates #}
            {% else %}
                <h3>{% trans -%}Candidates{%- endtrans %}</h3>
                <ul>
                    {% for candidate_id, candidate in ambience['ballot']['candidates']|xdictsort('description', pad=True) %}
                        <li>
                            {{ candidate['description'] }}
                            {% if is_admin and now() < ambience['ballot']['vote_begin'] %}
                                <form action="{{ cdedblink('assembly/remove_candidate',
                                                           {'candidate_id': candidate_id}) }}"
                                        method="POST" id="removecandidateform{{ candidate_id }}"
                                        style="display: inline;" class="remove-candiate-form">
                                    {{ util.anti_csrf_token('assembly/remove_candidate') }}
                                    {{ util.input_submit(value="", icon="trash", aclass="btn btn-xs btn-danger",
                                                         title=gettext("Remove Candidate")) }}
                                </form>
                            {% endif %}
                        </li>
                    {% endfor %}
                </ul>
                {% if is_admin and now() < ambience['ballot']['vote_begin'] %}
                    <script type="text/javascript" nonce="{{ csp_nonce }}">
                        $('.remove-candiate-form').cdedbProtectAction("{{ gettext("The candidate will be removed.") }}");
                    </script>
                {% endif %}
            {% endif %}

        {% else %}
            {# Preferential voting: Presentation of candidates #}
            <h3>{% trans -%}Candidates{%- endtrans %}</h3>
            <ul>
                {% for candidate_id, candidate in ambience['ballot']['candidates']|xdictsort('description', pad=True) %}
                    <li>
                        {{ candidate['description'] }}
                        {% if attends or is_admin %}
                            <span class="label label-primary"><span class="sr-only">{% trans -%}Short: {%- endtrans %}</span>
                                {{ candidate['moniker'] }}
                            </span>
                        {% endif %}
                        {% if is_admin and now() < ambience['ballot']['vote_begin']
                                and candidate['moniker'] != ASSEMBLY_BAR_MONIKER %}
                            <form action="{{ cdedblink('assembly/remove_candidate',
                                                       {'candidate_id': candidate_id}) }}"
                                  method="POST" id="removecandidateform{{ candidate_id }}" style="display: inline;"
                                  class="remove-candiate-form">
                                {{ util.anti_csrf_token('assembly/remove_candidate') }}
                                {{ util.input_submit(value="", icon="trash", aclass="btn btn-xs btn-danger",
                                                     title=gettext("Remove Candidate")) }}
                            </form>
                        {% endif %}
                    </li>
                {% endfor %}
            </ul>
            {% if is_admin and now() < ambience['ballot']['vote_begin'] %}
                <script type="text/javascript" nonce="{{ csp_nonce }}">
                    $('.remove-candiate-form').cdedbProtectAction("{{ gettext("The candidate will be removed.") }}");
                </script>
            {% endif %}

            {# Preferential voting: Voting form #}
            {% if ambience['ballot']['is_voting'] and attends %}
                <h3>{% trans -%}Ballot{%- endtrans %}</h3>

                {# Tab controls to switch to javascript preferential voting form #}
                <ul class="nav nav-tabs mosp softhide" role="tablist" id="tablist-formselect">
                    <li role="presentation" class="active">
                        <a href="#tab-textform" aria-controls="tab-textform" role="tab" data-toggle="tab"
                           id="tablink-textform">
                            {{ util.make_icon('console') }} {% trans -%}Text-based Voting{%- endtrans %}
                        </a>
                    </li>
                    <li role="presentation">
                        <a href="#tab-jsform" aria-controls="tab-jsform" role="tab" data-toggle="tab"
                                id="tablink-jsform">
                            {{ util.make_icon('flash') }} {% trans -%}Interactive Voting{%- endtrans %}
                        </a>
                    </li>
                </ul>

                <div class="tab-content">
                    {# Text based preferential voting form #}
                    <div role="tabpanel" class="tab-pane active" id="tab-textform">
                        <form action="{{ cdedblink('assembly/vote') }}" method="POST" id="voteform"
                                class="form-horizontal">
                            {{ util.anti_csrf_token('assembly/vote') }}
                            {{ util.form_input_text(name="vote", label=gettext("Preferencelist"), small=True,
                                                    anid='input-preferencelist') }}
                            {{ util.form_input_submit(value=gettext("Vote"), small=True) }}
                        </form>
                        <script type="text/javascript" nonce="{{ csp_nonce }}">
                            $('#voteform').cdedbProtectChanges();
                        </script>
                        {% call util.bootstrap_panel(title=gettext("Help"), icon='info-sign', aclass='panel-default mosp') %}
                            <p>
                                {% trans link=gettext("<a href='https://en.wikipedia.org/wiki/Schulze_method'>Schulze method</a>")|s -%}
                                    This vote is a preferential vote. You can arrange the candidates in the field above
                                    according to your personal preference. The preferences of all participants will be
                                    evaluated using the {{ link }}, to determine the winner.
                                {%- endtrans %}
                            </p>
                            <p>
                                {% trans  gt="<code>></code>"|s, eq="<code>=</code>"|s -%}
                                    To enter your preferencelist, use the shortnames given in the list of candidates and the
                                    {{ gt }} and {{ eq }} characters. Use the greater-than character {{ gt }}
                                    to give the candidates left of the character higher preference than those on the right.
                                    Use the equals character to give two candidates the same preference. You need to have all
                                    candidates in your preferencelist.
                                {%- endtrans %}
                            </p>
                            {% if ambience['ballot']['use_bar'] %}
                                <p>
                                    {% trans abm="<code>%(abm)s</code>"|s|format(abm=ASSEMBLY_BAR_MONIKER) -%}
                                        Additionally you need to use the rejection bar {{ abm }} in your preferencelist.
                                        Use it in your preferencelist like you would a candidate. Put all
                                        candidates you deem suitable higher than {{ abm }} and all
                                        candidates you reject lower, i. e. to the right of {{ abm }}.
                                        Should no candidate win against the bar, the board may take additional measures.
                                    {%- endtrans %}
                                </p>
                            {% endif %}
                            <p>
                                <strong>{% trans -%}Examples{%- endtrans %}:</strong>
                                {% trans -%}
                                    Take the following examplatory candidate list:
                                {%- endtrans %}
                            </p>
                            <ul>
                                <li>{% trans -%}Luke Skywalker, short: [Luke]{%- endtrans %}</li>
                                <li>{% trans -%}Princess Leia Organa of Alderaan, short: [Leia]{%- endtrans %}</li>
                                <li>{% trans -%}Han Solo, short: [Han]{%- endtrans %}</li>
                                <li>{% trans -%}Obi-Wan “Ben” Kenobi, short: [ObiWan]{%- endtrans %}</li>
                            </ul>
                            <p>
                                {% trans -%}Your Vote could look like this:{%- endtrans %}
                            </p>
                            {% if ambience['ballot']['use_bar'] %}
                                <ul>
                                    <li>{% trans -%}
                                            You deem all candidates suitable, but you like Leia the best,
                                            with no difference between the other candidates.
                                        {%- endtrans %}<br />
                                        <code>Leia&gt;Luke=Han=ObiWan&gt;{{ ASSEMBLY_BAR_MONIKER }}</code></li>
                                    <li>{% trans -%}
                                            You deem Leia and Obi-Wan (equally) suitable, you want to reject Luke
                                            and you absolutely can’t stand Han Solo.
                                        {%- endtrans %}<br />
                                        <code>Leia=ObiWan&gt;{{ ASSEMBLY_BAR_MONIKER }}&gt;Luke&gt;Han</code></li>
                                    <li>{% trans -%}
                                            You want to vote for Luke and if he doesn’t make it, you think Obi-Wan should.
                                            You don’t have an opinion about the others.
                                        {%- endtrans %}<br />
                                        <code>Luke&gt;ObiWan&gt;{{ ASSEMBLY_BAR_MONIKER }}=Han=Leia</code></li>
                                    <li>{% trans -%}
                                            You want to completely abstain.
                                        {%- endtrans %}<br />
                                        <code>Luke=ObiWan=Han=Leia={{ ASSEMBLY_BAR_MONIKER }}</code></li>
                                </ul>
                            {% else %}
                                <ul>
                                    <li>{% trans -%}
                                            You like Leia the most, but you see no difference between the others.
                                        {%- endtrans %}<br />
                                        <code>Leia&gt;Luke=Han=ObiWan</code></li>
                                    <li>{% trans -%}
                                            You deem Leia and Obi-Wan (equally) suitable, Luke less so and Han Solo not at all.
                                        {%- endtrans %}<br />
                                        <code>Leia=ObiWan&gt;Luke&gt;Han</code></li>
                                    <li>{% trans -%}
                                            You want to vote for Luke and if he doesn’t make it, you think Obi-Wan should.
                                            You don’t have an opinion about the others.
                                        {%- endtrans %}<br />
                                        <code>Luke&gt;ObiWan&gt;Han=Leia</code></li>
                                    <li>{% trans -%}
                                            You want to completely abstain.
                                        {%- endtrans %}<br />
                                        <code>Luke=ObiWan=Han=Leia</code></li>
                                </ul>
                            {% endif %}
                        {% endcall %}
                    </div>

                    {# Javascript preferential voting form #}
                    <div role="tabpanel" class="tab-pane" id="tab-jsform">
                        <p class="sr-only">
                            {% trans -%}
                                This is the interactive voting form. It is inconvenient to used with a keyboard only.
                                Use the link above to switch to the text-based form.
                            {%- endtrans %}
                        </p>
                        <div class="prefvote_container" id="prefvote_container">
                            <div class="indicator">
                                {% trans -%}Incr. Preference{%- endtrans %} →
                            </div>
                        </div>
                        <div class="p clearfix">
                            <button class="btn btn-primary" id="button-jsvote">
                                {{ util.make_icon('ok') }} {% trans -%}Vote{%- endtrans %}
                            </button>
                        </div>
                        <script type="text/javascript" nonce="{{ csp_nonce }}">
                            /* Show tabs */
                            $('#tablist-formselect').show();
                            /* Initialize JS Fancy form */
                            $('#prefvote_container').cdedbPrefVote(
                                {{ ambience['ballot']['candidates']|xdictsort('description', pad=True)|json|s }},
                                {{ "'"|s+ASSEMBLY_BAR_MONIKER+"'"|s if ambience['ballot']['use_bar'] else "null" }},
                                $('#input-preferencelist'),
                                {{ {'bar_name': gettext('neutral'),
                                    'box': gettext('Box {0}'),
                                    'box_highest': gettext('Box {0}: highest priority'),
                                    'box_lowest': gettext('Box {0}: lowest priority'),
                                    'spacer': gettext('Between box {0} and {1}'),
                                    'spacer_highest': gettext('Above box with highest priority'),
                                    'spacer_lowest': gettext('Below box with lowest priority'),
                                    }|json|s }}
                            );
                            /* Register callback to refresh fancy form every time the tab is shown.
                             * Additionally register handlers to set or reset 'prefvote_nojs' cookie. */
                            $('#tablink-jsform')
                                .on('show.bs.tab',
                                    $('#prefvote_container').data('cdedbPrefVote').readPreferenceList)
                                .on('shown.bs.tab',
                                    function(){eraseCookie('prefvote_nojs');});
                            $('#tablink-textform')
                                .on('shown.bs.tab',
                                    function(){createCookie('prefvote_nojs','true',10*365);});
                            /* Show the tab */
                            if (!readCookie('prefvote_nojs')) {
                                $('#tablink-jsform').tab('show');
                            }
                            $('#button-jsvote').click(function(){
                                $('#prefvote_container').data('cdedbPrefVote').writeBackPreferenceList();
                                $('#voteform').submit();
                            });
                        </script>

                        {% call util.bootstrap_panel(title=gettext("Help"), icon='info-sign', aclass='panel-default mosp') %}
                            <p>
                                {% trans link=gettext("<a href='https://en.wikipedia.org/wiki/Schulze_method'>Schulze method</a>")|s -%}
                                    This vote is a preferential vote. You can arrange the candidates in the field above
                                    according to your personal preference. The preferences of all participants will be
                                    evaluated using the {{ link }}, to determine the winner.
                                {%- endtrans %}
                            </p>
                            <p>
                                {% trans -%}
                                    To arrange the candidates, move them into one of the shaded boxes. The higher up the box,
                                    the higher your preference for that candidate. Candidates within the same box will be
                                    evaluated with the same preference. Move a candidate between two boxes to create a new box.
                                {%- endtrans %}
                            </p>
                            <p>
                                {% trans tab="<kbd>%(key)s</kbd>"|s|format(key=gettext("TAB")),
                                         enter="<kbd>%(key)s</kbd>"|s|format(key=gettext("ENTER")),
                                         space="<kbd>%(key)s</kbd>"|s|format(key=gettext("Space")) -%}
                                    There are three ways of moving candidates: Drag’n’Drop them into a different box or
                                    click on a candidate and then on a box. Or you can select a candidate with {{ tab }},
                                    confirm it with {{ enter }} or {{ space }}, then select a box with {{ tab }}
                                    and confirm the selection with {{ enter }} or {{ space }}.
                                {%- endtrans %}
                            </p>
                            {% if ambience['ballot']['use_bar'] %}
                                <p>
                                    {% trans -%}
                                        One of the boxes is marked as “Neutral”. Please place candidates cou deem suitable
                                        above this box (they will be highlighted in green) and candidates you want to reject
                                        below this box (they will be highlighted in red). Should all candidates be rejected,
                                        the board may take additional measures.
                                    {%- endtrans %}
                                </p>
                                <p>
                                    {% trans -%}To abstain, place all candidates in the neutral box.{%- endtrans %}
                                </p>
                            {% else %}
                                <p>
                                    {% trans -%}To abstain, place all candidates in the same box.{%- endtrans %}
                                </p>
                            {% endif %}

                        {% endcall %}
                    </div>
                </div>
            {% endif %}
        {% endif %}
    {% endif %}

    {# Attachments #}
    {% if attachments or is_admin and now() < ambience['ballot']['vote_begin'] %}
        {% call util.bootstrap_panel(title=gettext("Files"), icon='file') %}
            {% if attachments %}
                <ul>
                    {% for attachment_id, attachment in attachments|xdictsort("title") %}
                        <li>
                            {{ util.href(cdedblink("assembly/get_attachment", {'attachment_id': attachment_id}),
                                    attachment['title']) }}
                            {% if is_admin and now() < ambience['ballot']['vote_begin'] %}
                                <form action="{{ cdedblink('assembly/remove_attachment',
                                                           {'attachment_id': attachment_id}) }}"
                                        method="POST" id="removeattachmentform{{ attachment_id }}"
                                        style="display: inline;">
                                    {{ util.anti_csrf_token('assembly/remove_attachment') }}
                                    {{ util.input_checkbox("attachment_ack_delete", gettext("Are you sure?")) }}
                                    {{ util.input_submit(value="", aclass="btn btn-xs btn-danger", icon="trash",
                                            title=gettext("Delete File")) }}
                                </form>
                                <script type="text/javascript" nonce="{{ csp_nonce }}">
                                    $('#removeattachmentform{{ attachment_id }}').cdedbProtectAction("{{ gettext("The attachment will be permanently deleted.") }}");
                                    $('#removeattachmentform{{ attachment_id }}').find('[name="attachment_ack_delete"]').prop('checked', true).parent().hide();
                                </script>
                            {% endif %}
                        </li>
                    {% endfor %}
                </ul>
            {% endif %}
            {% if is_admin and now() < ambience['ballot']['vote_begin'] %}
                {{ util.href(cdedblink("assembly/add_attachment_form"), gettext("Attach File"),
                             aclass="btn btn-success btn-sm", icon="plus") }}
            {% endif %}
        {% endcall %}
    {% endif %}

    <nav >
        <ul class="pager">
            {% if prev_ballot %}
                <li class="previous">{{ util.href(cdedblink("assembly/show_ballot", {"ballot_id": prev_ballot["id"]}),
                         '<span aria-hidden="true">&larr;</span> '|s + gettext("Previous Ballot"), title=prev_ballot["title"]) }}</li>
            {% endif %}
            {%  if next_ballot %}
                <li class="next">{{ util.href(cdedblink("assembly/show_ballot", {"ballot_id": next_ballot["id"]}),
                         gettext("Next Ballot") + ' <span aria-hidden="true">&rarr;</span>'|s, title=next_ballot["title"]) }}</li>
            {% endif %}
        </ul>
    </nav>

    {% if is_admin and now() < ambience['ballot']['vote_begin']  %}
        {% call util.bootstrap_panel(title=gettext("Actions"), icon="warning-sign", aclass="panel-danger mosp") %}
            <div class="row">
                <div class="col-sm-4">
                    <div class="p">
                         <form action="{{ cdedblink('assembly/delete_ballot') }}" method="POST" id="deleteballotform"
                               style="display: inline;">
                             {{ util.anti_csrf_token('assembly/delete_ballot') }}
                             {{ util.input_submit(value=gettext("Delete"), icon="trash", aclass="btn btn-danger") }}
                             {{ util.input_checkbox(name="ack_delete", label=gettext("Are you sure?")) }}
                         </form>
                         <script type="text/javascript" nonce="{{ csp_nonce }}">
                             $(function() {
                                 $('#deleteballotform').cdedbProtectAction(
                                     "{{ gettext("This ballot and all its data will be permanently deleted.") }}");
                                 $('#deleteballotform').find('[name="ack_delete"]').prop('checked', true)
                                     .parent().hide();
                             });
                         </script>
                    </div>
                </div>
                <div class="col-sm-8">
                    <p class="text-muted">
                        {% trans -%}Deletes the ballot and all associated settings and candidates.{%- endtrans %}
                    </p>
                </div>
            </div>
        {% endcall %}
    {% endif %}
{% endblock %}
