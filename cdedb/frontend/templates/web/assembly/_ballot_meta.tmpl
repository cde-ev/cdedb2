{% import "web/assembly/util.tmpl" as assembly_util with context %}

{% macro ballot_action_panel() -%}
    {% call util.bootstrap_panel(title=gettext("Actions"), icon="exclamation-triangle", aclass="panel-danger mosp") %}
        <div class="row">
            <div class="col-sm-4">
                <div class="p">
                     <form action="{{ cdedblink('assembly/delete_ballot') }}" method="POST" id="deleteballotform"
                           style="display: inline;">
                         {{ util.anti_csrf_token('assembly/delete_ballot') }}
                         {{ util.input_submit(value=gettext("Delete"), icon="trash-alt", aclass="btn btn-danger") }}
                         {{ util.input_checkbox(name="ack_delete", label=gettext("Are you sure?")) }}
                     </form>
                     <script nonce="{{ csp_nonce }}">
                         $(function() {
                             $('#deleteballotform').cdedbProtectAction(
                                 "{{ gettext("This ballot and all its data will be permanently deleted.") }}");
                             $('#deleteballotform').find('[name="ack_delete"]').prop('checked', true)
                                 .parent().hide();
                         });
                     </script>
                </div>
            </div>
            <div class="col-sm-8">
                <p class="text-muted">
                    {% trans %}Deletes the ballot and all associated settings and candidates.{% endtrans %}
                </p>
            </div>
        </div>
    {% endcall %}
{%- endmacro %}



{% macro show_status() -%}
    <dl class="dl-horizontal mosp" id="ballot-status">
        <dt>{% trans %}Period{% endtrans %}</dt>
        <dd id="voting-period">
            {% trans begin=ambience['ballot']['vote_begin']|datetime(lang=lang),
                     end=ambience['ballot']['vote_end']|datetime(lang=lang) -%}
            From {{ begin }} until {{ end }}.
            {% endtrans %}
            {% if ambience['ballot']['extended'] is none %}
                {% if ambience['ballot']['quorum'] %}
                    <br />
                    {% trans extension=ambience['ballot']['vote_extension_end']|datetime(lang=lang),
                             quorum=ambience['ballot']['quorum'] -%}
                    Extension until {{ extension }} if {{ quorum }} votes are not reached.
                    {% endtrans %}
                {% endif %}
            {% else %}
                {% if ambience['ballot']['extended'] %}
                    <br />
                    {% trans extension=ambience['ballot']['vote_extension_end']|datetime(lang=lang),
                             quorum=ambience['ballot']['quorum'] -%}
                    Extended until {{ extension }} because {{ quorum }} votes were not reached.
                    {% endtrans %}
                {% elif ambience['ballot']['quorum'] %}
                    <br />
                    {% trans quorum=anbience['ballot']['quorum'] %}
                    No extension neccessary, because {{ quorum }} votes were reached.
                    {% endtrans %}
                {% endif %}
            {% endif %}
        </dd>

        <dt>{% trans %}Status{% endtrans %}</dt>
        <dd id="status">
            {% if now() < ambience['ballot']['vote_begin'] %}
                <strong>{% trans %}This ballot has not yet begun.{% endtrans %}</strong><br />
                {% trans %}Admins can still make changes to description, files and candidates.{% endtrans %}
                {% if "assembly_presider" in user.admin_views %}
                    {% trans %}
                        All CdE-Members and external assembly participants can already
                        see this ballot and all associated information.
                    {% endtrans %}
                {% endif %}
            {% elif ambience['ballot']['is_tallied'] %}
                <strong>{% trans %}This ballot has been concluded.{% endtrans %}</strong><br />
                {% trans %}You can see the results below.{% endtrans %}
            {% elif not attends %}
                {% trans %}
                    You are not participating in this assembly, therefore you cannot vote in this ballot.
                {% endtrans %}
            {% elif ambience['ballot']['is_voting'] %}
                <strong>{% trans %}This ballot is currently open for voting.{% endtrans %}</strong><br />
                {% if own_vote %}
                    {% if own_vote == MAGIC_ABSTAIN %}
                        <span class='text-warning'>{% trans %}You have abstained.{% endtrans %}</span>
                        {% trans %}You can make your choice below, during the voting period.{% endtrans %}
                    {% else %}
                        <span class='text-success'>{% trans %}You already voted.{% endtrans %}</span>
                        {% trans %}
                            You can check your vote below and change it
                            before the end of the voting period.
                        {% endtrans %}
                    {% endif %}
                {% endif %}
            {% endif %}
        </dd>

        <dt>{% trans %}Modality{% endtrans %}</dt>
        <dd>
            {% if ambience['ballot']['votes'] == 1 %}
                {% if ambience['ballot']['use_bar'] %}
                    {% trans votes=ambience['ballot']['votes'] %}
                        Classical voting with {{ votes }} vote and "Against all" option.
                    {% endtrans %}
                {% else %}
                    {% trans votes=ambience['ballot']['votes'] %}
                        Classical voting with {{ votes }} vote.
                    {% endtrans %}
                {% endif %}
            {% elif ambience['ballot']['votes'] %}
                {% if ambience['ballot']['use_bar'] %}
                    {% trans votes=ambience['ballot']['votes'] %}
                        Classical voting with {{ votes }} votes and "Against all" option.
                    {% endtrans %}
                {% else %}
                    {% trans votes=ambience['ballot']['votes'] %}
                        Classical voting with {{ votes }} votes.
                    {% endtrans %}
                {% endif %}
            {% else %}
                {% if ambience['ballot']['use_bar'] %}
                    {% trans %}
                        Preferential voting with bar option.
                    {% endtrans %}
                {% else %}
                    {% trans %}
                        Preferential voting without bar option.
                    {% endtrans %}
                {% endif %}
            {% endif %}
        </dd>

        {% if ambience['ballot']['vote_begin'] < now() %}
            <dt>{% trans %}Voted{% endtrans %}</dt>
            {% if ambience['ballot']['is_tallied'] %}
                <dd id="had-voted">
                    {% trans count=ambience['ballot']['vote_count'] %}
                        {{ count }} attendees had given their vote for this ballot.
                    {% endtrans %}
                </dd>
            {% else %}
                <dd id="already-voted">
                    {% trans count=ambience['ballot']['vote_count'] %}
                        Until now, {{ count }} attendees had given their vote for this ballot.
                    {% endtrans %}
                </dd>
            {% endif %}
        {% endif %}
    </dl>

    {% if "assembly_presider" in user.admin_views and ambience['ballot']['notes'] %}
        {% call util.bootstrap_panel(title=gettext("Admin-Notes"), icon="tag", aclass="panel-default panel-condensed") %}
            {{ ambience['ballot']['notes']|md }}
        {% endcall %}
    {% endif %}
{%- endmacro %}



{% macro show_attachments(edit_mode) -%}
    {{ assembly_util.attachment_box(attachments, attachment_histories, edit=edit_mode, title=gettext("Files"),
                                    ballot=ambience['ballot'], new_attachment_button=True, full_history=False) }}
{%- endmacro %}



{% macro show_navigation(page_name) -%}
    <nav>
        <ul class="pager">
            {% if prev_ballot %}
                <li class="previous">{{ util.href(cdedblink(page_name, {"ballot_id": prev_ballot["id"]}),
                         '<span aria-hidden="true">&larr;</span> '|s + gettext("Previous"), title=prev_ballot["title"]) }}</li>
            {% endif %}
            {%  if next_ballot %}
                <li class="next">{{ util.href(cdedblink(page_name, {"ballot_id": next_ballot["id"]}),
                         gettext("Next") + ' <span aria-hidden="true">&rarr;</span>'|s, title=next_ballot["title"]) }}</li>
            {% endif %}
        </ul>
    </nav>
{%- endmacro %}
