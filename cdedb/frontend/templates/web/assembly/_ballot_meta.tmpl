{% import "web/assembly/util.tmpl" as assembly_util with context %}

{% macro ballot_action_panel() -%}
    {% call util.bootstrap_panel(title=gettext("Actions"), icon="exclamation-triangle", aclass="panel-danger mosp") %}
        <div class="row">
            <div class="col-sm-4">
                <div class="p">
                     <form action="{{ cdedblink('assembly/delete_ballot') }}" method="POST" id="deleteballotform"
                           style="display: inline;">
                         {{ util.anti_csrf_token('assembly/delete_ballot') }}
                         {{ util.input_submit(label=gettext("Delete"), icon="trash-alt", aclass="btn btn-danger") }}
                         {{ util.input_checkbox(name="ack_delete", label=gettext("Are you sure?")) }}
                     </form>
                     <script nonce="{{ csp_nonce }}">
                         $(function() {
                             $('#deleteballotform').cdedbProtectAction(
                                 "{{ gettext("This ballot and all its data will be permanently deleted.") }}");
                             $('#deleteballotform').find('[name="ack_delete"]').prop('checked', true)
                                 .parent().hide();
                         });
                     </script>
                </div>
            </div>
            <div class="col-sm-8">
                <p class="text-muted">
                    {% trans %}Deletes the ballot and all associated settings and candidates.{% endtrans %}
                </p>
            </div>
        </div>
    {% endcall %}
{%- endmacro %}

{% macro details_list(grouped_config, ballots) %}
    {% set sorted_ballots = ballots|keydictsort(EntitySorter.ballot) %}
    {% for (vote_begin, vote_end, extension_end, abs_quorum, rel_quorum), ballot_ids in config_grouped if ballot_ids.intersection(ballots) %}
        <li>
            <div>
                {{- vote_begin|datetime(lang=lang) }} – {{ vote_end|datetime(lang=lang) }}
                {%- if extension_end %} ( – {{ extension_end|datetime(lang=lang) }}, {% trans %}Quorum{% endtrans %}: {% if abs_quorum %}{{ abs_quorum }}{% else %}{{ rel_quorum }} %{% endif %}){% endif -%}
            </div>
            <ul class="slim">
                {% for ballot_id, ballot in sorted_ballots if ballot_id in ballot_ids %}
                    <li>
                        {{ title_link(ballot) }}
                        <span class="text-muted small">
                            ({{ modality(ballot) }})
                        </span>
                    </li>
                {% endfor %}
            </ul>
        </li>
    {% endfor %}
{% endmacro %}

{% macro title_link(ballot) %}
    {{ util.href(cdedblink("assembly/show_ballot", {'assembly_id': ambience['assembly']['id'], 'ballot_id': ballot['id']}), ballot['title']) }}
{% endmacro %}

{% macro voting_period(ballot) %}
    <div id="regular-voting-period">
        {% trans begin=ballot['vote_begin']|datetime(lang=lang),
                end=ballot['vote_end']|datetime(lang=lang) -%}
            From {{ begin }} until {{ end }}.
        {% endtrans %}
    </div>
    <div id="extension-period">
        {% if ballot['extended'] is none %}
            {% if ballot['quorum'] %}
                {% trans extension=ballot['vote_extension_end']|datetime(lang=lang),
                         quorum=ballot['quorum'] -%}
                    Extension until {{ extension }} if {{ quorum }} votes are not reached.
                {% endtrans %}
            {% endif %}
        {% else %}
            {% if ballot['extended'] %}
                {% trans extension=ballot['vote_extension_end']|datetime(lang=lang),
                         quorum=ballot['quorum'] -%}
                    Extended until {{ extension }} because {{ quorum }} votes were not reached.
                {% endtrans %}
            {% elif ballot['quorum'] %}
                {% trans quorum=ballot['quorum'] %}
                    No extension neccessary, because {{ quorum }} votes were reached.
                {% endtrans %}
            {% endif %}
        {% endif %}
    </div>
{% endmacro %}

{% macro modality(ballot) -%}
    {% if ballot['votes'] == 1 -%}
        {% if ballot['use_bar'] -%}
            {% trans votes=ballot['votes'] -%}
                Classical voting with {{ votes }} vote and "Against all" option.
            {%- endtrans %}
        {%- else -%}
            {% trans votes=ballot['votes'] -%}
                Classical voting with {{ votes }} vote.
            {%- endtrans %}
        {%- endif %}
    {%- elif ballot['votes'] -%}
        {% if ballot['use_bar'] -%}
            {% trans votes=ballot['votes'] -%}
                Classical voting with {{ votes }} votes and "Against all" option.
            {%- endtrans %}
        {%- else -%}
            {% trans votes=ballot['votes'] -%}
                Classical voting with {{ votes }} votes.
            {%- endtrans %}
        {%- endif %}
    {%- else -%}
        {% if ballot['use_bar'] -%}
            {% trans -%}
                Preferential voting with bar option.
            {%- endtrans %}
        {%- else -%}
            {% trans -%}
                Preferential voting without bar option.
            {%- endtrans %}
        {%- endif %}
    {%- endif %}
{%- endmacro %}

{% macro show_status() -%}
    <dl class="dl-horizontal mosp" id="ballot-status">
        <dt>{% trans %}Period{% endtrans %}</dt>
        <dd id="voting-period">
            {{ voting_period(ambience['ballot']) }}
        </dd>

        <dt>{% trans %}Status{% endtrans %}</dt>
        <dd id="status">
            {% if now() < ambience['ballot']['vote_begin'] %}
                <strong>{% trans %}This ballot has not yet begun.{% endtrans %}</strong><br />
                {% trans %}Admins can still make changes to description, files and candidates.{% endtrans %}
                {% if "assembly_presider" in user.admin_views or ambience['assembly']['id'] in user.presider %}
                    {% trans %}
                        All CdE-Members and external assembly participants can already
                        see this ballot and all associated information.
                    {% endtrans %}
                {% endif %}
            {% elif ambience['ballot']['is_tallied'] %}
                <strong>{% trans %}This ballot has been concluded.{% endtrans %}</strong><br />
                {% trans %}You can see the results below.{% endtrans %}
            {% elif not attends %}
                {% trans %}
                    You are not participating in this assembly, therefore you cannot vote in this ballot.
                {% endtrans %}
            {% elif ambience['ballot']['is_voting'] %}
                <strong>{% trans %}This ballot is currently open for voting.{% endtrans %}</strong><br />
                {% if own_vote %}
                    {# If there are no > in a preferential vote, you abstained #}
                    {% if own_vote == MAGIC_ABSTAIN or (">" not in own_vote and not ambience['ballot']['votes']) %}
                        <span class='text-warning'>{% trans %}You have abstained.{% endtrans %}</span>
                        {% trans %}You can make your choice below, during the voting period.{% endtrans %}
                    {% else %}
                        <span class='text-success'>{% trans %}You already voted.{% endtrans %}</span>
                        {% trans %}
                            You can check your vote below and change it
                            before the end of the voting period.
                        {% endtrans %}
                    {% endif %}
                {% endif %}
            {% endif %}
        </dd>

        <dt>{% trans %}Modality{% endtrans %}</dt>
        <dd>
            {{ modality(ambience['ballot']) }}
        </dd>

        {% if ambience['ballot']['vote_begin'] < now() %}
            <dt>{% trans %}Voted{% endtrans %}</dt>
            {% if ambience['ballot']['is_tallied'] %}
                <dd id="had-voted">
                    {% trans count=ambience['ballot']['vote_count'] %}
                        {{ count }} attendees had given their vote for this ballot.
                    {% endtrans %}
                </dd>
            {% else %}
                <dd id="already-voted">
                    {% trans count=ambience['ballot']['vote_count'] %}
                        Until now, {{ count }} attendees had given their vote for this ballot.
                    {% endtrans %}
                </dd>
            {% endif %}
        {% endif %}
    </dl>

    {% if ("assembly_presider" in user.admin_views or ambience['assembly']['id'] in user.presider)
           and ambience['ballot']['notes'] %}
        {% call util.bootstrap_panel(title=gettext("Admin-Notes"), icon="tag", aclass="panel-default panel-condensed",
                                     anid='notes') %}
            {{ ambience['ballot']['notes']|md }}
        {% endcall %}
    {% endif %}
{%- endmacro %}


{% macro show_attachments() -%}
    {% call util.bootstrap_panel(title=gettext("Files"), icon='file', aclass="panel-default panel-condensed mosp") %}
        <div class="row" id="attachments">
            {% for slice in definitive_versions|keydictsort(EntitySorter.attachment)|slice(2) if definitive_versions %}
                <div class="col-sm-6">
                    <ul class="slim" id="attachments-{{ "ballot-{}".format(ambience['ballot']['id'])}}">
                        {% for attachment_id, definitive_version in slice %}
                            <li class="hide-hover-container clearfix-after" id="attachment{{ attachment_id }}">
                                <div class="p">
                                    {% set is_only_version = definitive_version["version_nr"] == 1 %}
                                    {{ assembly_util.print_attachment_version_for_ballot(
                                            version=definitive_version,
                                            is_only_version=is_only_version,
                                            is_definitive_version=True) }}
                                    {% if latest_versions[attachment_id] != definitive_version %}
                                        <div style="margin-top: 5px">
                                            {{ assembly_util.print_attachment_version_for_ballot(
                                                    version=latest_versions[attachment_id],
                                                    is_only_version=False,
                                                    is_definitive_version=False) }}
                                        </div>
                                    {% endif %}
                                </div>
                            </li>
                        {% endfor %}
                    </ul>
                </div>
            {% else %}
                <div class="col-sm-12 p text-muted">
                    {% if ambience['ballot']['vote_begin'] < now() %}
                        {% trans %}
                            This ballot does not have any attachments.
                        {% endtrans %}
                    {% else %}
                        {% trans %}
                            This ballot does not yet have any attachments.
                        {% endtrans %}
                    {% endif %}
                </div>
            {% endfor %}
        </div>
    {% endcall %}
{%- endmacro %}
