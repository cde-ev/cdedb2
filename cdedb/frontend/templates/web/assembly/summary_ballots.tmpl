{% set sidenav_active='assembly_summary' %}
{% extends "web/assembly/base.tmpl" %}
{% import "web/util.tmpl" as util with context %}
{% import "web/assembly/_ballot_tallied.tmpl" as ballot_tallied with context %}
{% block title %}{{ gettext("Summary") }} ({{ ambience['assembly']['title'] }}){% endblock %}
{% block heading %}
    <h1 class="title">
        {{ gettext("Summary") }}
        <small>{{ util.make_icon('bullhorn') }} {{ ambience['assembly']['title'] }}</small>
    </h1>
{% endblock %}
{% block breadcrumb %}
    {{ super() }}
    {{ util.breadcrumb_link(cdedblink("assembly/show_assembly"), ambience['assembly']['title'], icon="bullhorn") }}
    {{ util.breadcrumb_link(cdedblink("assembly/summary_ballots"), gettext("Summary"), active=True) }}
{% endblock %}
{% block content %}

    {% for ballot_id, ballot in ballots|keydictsort(EntitySorter.ballot) %}
        {% set title = util.href(cdedblink("assembly/show_ballot", {'assembly_id': ambience['assembly']['id'], 'ballot_id': ballot_id}),
                                 ballot['title']) %}
        {% call util.bootstrap_panel(title=title, icon='thumbs-up') %}
        <div class="row">
            <div class="col-md-7">{{ ballot['description']|md }}</div>
            <div class="col-md-5">{{ ballot_tallied.show_result(ballot, result[ballot_id], short=True) }}</div>
        </div>
        {% endcall %}
    {% else %}
        <p class="text-muted">
            {% trans %}No ballots have been tallied yet.{% endtrans %}
        </p>
    {% endfor %}

    {% if ballots %}
        {{ ballot_tallied.explain_result(classical=True, preferential=True, use_bar=True) }}
    {% endif %}

{% endblock %}
