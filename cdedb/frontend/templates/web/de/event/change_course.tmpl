{% extends "web/de/event/base.tmpl" %}
{% set sidenav_active='event_course_stats' %}
{% import "web/de/util.tmpl" as util with context %}
{% block scripts %}{{ util.cdedb_script('helper') }}{% endblock %}
{% set jshint='weak' %}
{% block title %}{{ ambience['course']['shortname']|e }} ({{ ambience['event']['title']|e }}) bearbeiten{% endblock %}
{% block breadcrumb %}
    {{ util.breadcrumb_link(cdedblink("event/index"), "Veranstaltungen") }}
    {{ util.breadcrumb_link(cdedblink("event/show_event"), ambience['event']['title'], icon="blackboard") }}
    {{ util.breadcrumb_link(cdedblink("event/course_stats"), "Kurse") }}
    {{ util.breadcrumb_link(cdedblink("event/show_course"), ambience['course']['shortname'], icon='book') }}
    {{ util.breadcrumb_link(cdedblink("event/change_course"), "bearbeiten", active=True) }}
{% endblock %}
{% block heading %}
    <h1 class="title">
        Kurs {{ ambience['course']['shortname']|e }} bearbeiten
        <small>{{ util.make_icon('blackboard') }} {{ ambience['event']['title']|e }}</small>
    </h1>
{% endblock %}

{% block content %}
    <form action="{{ cdedblink('event/change_course')|e }}" method="POST" id="changecourseform" class="form-horizontal">
        <h4 class="heading-underline">Metadaten</h4>
        {{ util.form_input_text(name="nr", label="Kursnummer") }}
        {{ util.form_input_text(name="shortname", label="Kurzname") }}
        {{ util.form_input_text(name="title", label="Langer Titel") }}
        {{ util.form_input_textarea(name="description", label="Beschreibung", rows="5",
                                    info="Unterstützt reStructuredText") }}
        <h4 class="heading-underline">Kurs-Angebot</h4>
        {{ util.form_input_text(name="instructors", label="Kursleiter") }}
        {{ util.form_input_text(name="min_size", label="Minimalgröße") }}
        {{ util.form_input_text(name="max_size", label="Maximalgröße") }}
        {% if ambience['event']['tracks']|length == 1 %}
            {# hide selection of course tracks/segments if the event has only one track #}
            {{ util.input_hidden("segments", (ambience['event']['tracks']|list)[0]) }}
        {% else %}
            {# jinja does not support list comprehension ... #}
            {% set myentries = [] %}
            {% for track_id, track in ambience['event']['tracks']|dictsort %}
                {{ myentries.append((track_id, track['title']))|e }}
            {% endfor %}
            {{ util.form_input_checkboxes(name="segments", label="Angeboten in", entries=myentries,
                                          aclass='checkbox_segment') }}
        {% endif %}

        <h4 class="heading-underline">Status</h4>
        {% if ambience['event']['tracks']|length == 1 %}
            {# show only single checkbox if event has only one course track #}
            {{ util.form_input_checkbox("active_segments", label="Findet statt",
                                        value=(ambience['event']['tracks']|list)[0]) }}
        {% else %}
            {{ util.form_input_checkboxes(name="active_segments", label="Findet statt in", entries=myentries,
                                          aclass='checkbox_active_segment') }}
        {% endif %}
        {{ util.form_input_textarea(name="notes", label="Orga-Notizen", rows="5") }}

        <h4 class="heading-underline">Felder</h4>
        {% for field_id, field in ambience['event']['fields']|dictsort
                if field['association'] == enums['FieldAssociations'].course %}
            {{ util.form_event_field_input(field) }}
        {% else %}
            <p class="text-muted">Keine Datenfelder für Kurse vorhanden</p>
        {% endfor %}
        {{ util.form_input_submit(value="Speichern", cancellink=cdedblink("event/show_course")) }}
    </form>
    <script type="text/javascript">
        $('#changecourseform').cdedbProtectChanges();
        $(function(){
            function updateCheckbox($checkbox, enabled) {
                if (enabled) {
                    $checkbox.prop('disabled', false);
                } else {
                    $checkbox.prop('checked', false);
                    $checkbox.prop('disabled', true);
                }
            }
            $('.checkbox_segment').each(function () {
                var $related_checkbox = $('.checkbox_active_segment[value="' + $(this).val() + '"]');
                updateCheckbox($related_checkbox, $(this).prop('checked'));
                $(this).change(function(){
                    updateCheckbox($related_checkbox, $(this).prop('checked'));
                });
            });
        });
    </script>
{% endblock %}
