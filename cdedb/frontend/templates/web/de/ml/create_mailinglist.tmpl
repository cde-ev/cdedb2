{% set sidenav_active='ml_index' %}
{% extends "web/de/ml/base.tmpl" %}
{% import "web/de/util.tmpl" as util with context %}
{% block scripts %}{{ util.cdedb_script('helper') }}{{ util.cdedb_script('change-mailinglist')}}{% endblock %}
{% set jshint='weak' %}
{% block title %}Mailingliste anlegen{% endblock %}
{% block breadcrumb %}
{{ util.breadcrumb_link(cdedblink("ml/index"), "Mailinglisten") }}
{{ util.breadcrumb_link(cdedblink("ml/create_mailinglist"), "Mailingliste anlegen", active=True) }}
{% endblock %}
{% block content %}
    <script type="text/javascript">
        $(function() {
            $('#createlistform').cdedbProtectChanges().cdedbChangeMailinglist();
        });
    </script>
    <form action="{{ cdedblink('ml/create_mailinglist')|e }}" method="POST" id="createlistform" class="form-horizontal">
        <h4 class="heading-underline">Meta</h4>
        {{ util.form_input_checkbox(name="is_active", label="Aktiv") }}
        {{ util.form_input_text(name="title", label="Titel") }}
        {{ util.form_input_text(name="address", label="Adresse") }}
        {{ util.form_input_textarea(name="description", label="Beschreibung", rows="5",
                                    info="Unterstützt reStructuredText") }}
        {{ util.form_input_textarea(name="notes", label="Admin-Notizen", rows="5",
                                    info="Unterstützt reStructuredText") }}


        <h4 class="heading-underline">Moderation &amp; Abonnenten</h4>
        {# jinja does not support list comprehension ... #}
        {% set myentries = [] %}
        {% for policy in enums['ModerationPolicy'] %}
            {{ myentries.append((policy.value, gettext(policy|string)))|e }}
        {% endfor %}
        {{ util.form_input_select(name="mod_policy", label="Moderation", entries=myentries) }}
        {# jinja does not support list comprehension ... #}
        {% set myentries = [] %}
        {% for policy in enums['AudiencePolicy'] %}
            {{ myentries.append((policy.value, gettext(policy|string)))|e }}
        {% endfor %}
        {{ util.form_input_select(name="audience_policy", label="Empfängerkreis", entries=myentries) }}
        {# jinja does not support list comprehension ... #}
        {% set myentries = [] %}
        {% for policy in enums['SubscriptionPolicy'] %}
            {{ myentries.append((policy.value, gettext(policy|string)))|e }}
        {% endfor %}
        {{ util.form_input_select(name="sub_policy", label="Einschreibung", entries=myentries) }}
        {# jinja does not support list comprehension ... #}
        {% set myentries = [] %}
        {% for event_id, title in events|dictsort %}
            {{ myentries.append((event_id, title))|e }}
        {% endfor %}
        {{ util.form_input_select(name="event_id", label="Veranstaltung", nulloption=True, entries=myentries,
                info="Die Teilnehmer dieser Veranstaltung werden der Liste hinzugefügt. (Opt-Out)") }}
        {# jinja does not support list comprehension ... #}
        {% set myentries = [] %}
        {% for status in enums['RegistrationPartStati'] %}
            {{ myentries.append((status.value, gettext(status|string)))|e }}
        {% endfor %}
        {{ util.form_input_checkboxes(name="registration_stati", label="Veranstaltungsempfänger",
                entries=myentries, info="Keine Auswahl entspricht einer Orgaliste.") }}
        {# jinja does not support list comprehension ... #}
        {% set myentries = [] %}
        {% for assembly_id, assembly in assemblies|dictsort %}
            {{ myentries.append((assembly_id, assembly['title']))|e }}
        {% endfor %}
        {{ util.form_input_select(name="assembly_id", label="Versammlung", nulloption=True, entries=myentries,
                info="Die Teilnehmer dieser Versammlung werden der Liste hinzugefügt. (Opt-Out)") }}
        {# jinja does not support list comprehension ... #}
        {% set myentries = [] %}
        {% for mailinglist_id, title in mailinglists|dictsort %}
            {{ myentries.append((mailinglist_id, title))|e }}
        {% endfor %}
        {{ util.form_input_select(name="gateway", label="Zugangsvererbung", nulloption=True, entries=myentries,
                info="Die Abonnenten dieser Liste können sich immer eintragen. (Opt-In)") }}

        <h4 class="heading-underline">Mails</h4>
        {{ util.form_input_text(name="subject_prefix", label="Präfix (Betreffzeile)") }}
        {# jinja does not support list comprehension ... #}
        {% set myentries = [] %}
        {% for policy in enums['AttachmentPolicy'] %}
            {{ myentries.append((policy.value, gettext(policy|string)))|e }}
        {% endfor %}
        {{ util.form_input_select(name="attachment_policy", label="Anhänge", entries=myentries) }}
        {{ util.form_input_text(name="maxsize", label="max. Nachrichtengröße (in kB)") }}
        {{ util.form_input_submit(value="Mailingliste anlegen", cancellink=cdedblink("ml/index")) }}
    </form>
{% endblock %}
