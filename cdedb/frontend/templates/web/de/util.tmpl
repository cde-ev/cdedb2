{# This template provides a set of standard macros which should be used to
   create html-elements. #}

{% macro jquery_preamble() %}
    <script type="text/javascript">
        cdedb_javascript = true;
    </script>
    <script type="text/javascript" src="{{ staticurl("jquery.js")|e }}"></script>
{% endmacro %}

{% macro jquery_with_ui_preamble() %}
    <script type="text/javascript">
        cdedb_javascript = true;
    </script>
    <script type="text/javascript" src="{{ staticurl("jquery.js")|e }}"></script>
    <script type="text/javascript" src="{{ staticurl("jquery-ui/jquery-ui.js")|e }}"></script>
    <link rel="stylesheet" type="text/css" href="{{ staticurl("jquery-ui/jquery-ui.css")|e }}">
{% endmacro %}

{% macro javascript_hint() %}
    <noscript>
        <div class="jsDeleted">
            Diese Seite funktioniert besser mit Javascript.
        </div>
    </noscript>
{% endmacro %}

{% macro deko_checkbox(checked, anid='', aclass='') %}
   <input type="checkbox" {% if checked %} checked {% endif %} disabled {% if anid %} id="{{ anid|e }}" {% endif %}
     {% if aclass %} class="{{ aclass|e }}" {% endif %}>
{% endmacro %}

{% macro href(ref, label, disabled=False) %}
    <a href="{{ ref|e }}" {% if disabled %}disabled{% endif %}>{{ label|e }}</a>
{% endmacro %}

{% macro output_errors(name, displayerrors=True) %}
    {% if displayerrors %}
        {% for error in errors.get(name, []) %}
            {% if error %}
                {{ i18n(error|string)|e }}<br>
            {% endif %}
        {% endfor %}
    {% endif %}
{% endmacro %}

{% macro info_hover(info, anid='', aclass='') %}
    <img src="{{ staticurl("icons/info.png")|e }}" alt="info" title="{{ info|e }}"
      {% if anid %} id="{{ anid|e }}" {% endif %} class="infoHover {{ aclass|e }}">
{% endmacro %}

{% macro persona_anchor(persona_data, verbose=False) %}
    {% if verbose %}
        {{ href(show_user_link(persona_data['id']), "{} {} {} {}".format(
              persona_data['title'], persona_data['given_names'],
              persona_data['family_name'], persona_data['name_supplement'])) }}
    {% else %}
        {{ href(show_user_link(persona_data['id']), "{} {}".format(
              persona_data['given_names'], persona_data['family_name'])) }}
    {% endif %}
{% endmacro %}

{% macro input_hidden(name, value=None, defaultvalue='', anid='', aclass='') %}
    {% if value is none %}
        <input type="hidden" name="{{ name|e }}" value="{{ values.get(name, defaultvalue)|e }}"
          {% if anid %} id="{{ anid|e }}" {% endif %} {% if aclass %} class="{{ aclass|e }}" {% endif %}>
    {% else %}
        <input type="hidden" name="{{ name|e }}" value="{{ value|e }}" {% if anid %} id="{{ anid|e }}" {% endif %}
          {% if aclass %} class="{{ aclass|e }}" {% endif %}>
    {% endif %}
{% endmacro %}

{% macro input_file(name, displayerrors=True, accept='', info='', anid='', aclass='') %}
    <span class="stacking">
        {{ output_errors(name, displayerrors) }}
        <input type="file" name="{{ name|e }}" {% if accept %} accept="{{ accept|e }}" {% endif %}
          {% if anid %} id="{{ anid|e }}" {% endif %} {% if aclass %} class="{{ aclass|e }}" {% endif %}>
        {% if info %} {{ info_hover(info) }} {% endif %}
    </span>
{% endmacro %}

{% macro input_text(name, label='', info='', displayerrors=True, readonly=False, defaultvalue='', anid='', aclass='') %}
    <span {% if name in errors %} class="errorInput" {% endif %}>
        <label>
            {{ label|e }}
            <span class="stacking">
                {{ output_errors(name, displayerrors) }}
                {% if readonly %}
                    <span>{{ values.get(name, defaultvalue)|e }}</span>
                    <input type="hidden" name="{{ name|e }}" value="{{ values.get(name, defaultvalue)|e }}"
                      {% if anid %} id="{{ anid|e }}" {% endif %} {% if aclass %} class="{{ aclass|e }}" {% endif %}>
                {% else %}
                    <input type="text" name="{{ name|e }}" value="{{ values.get(name, defaultvalue)|e }}"
                      {% if anid %} id="{{ anid|e }}" {% endif %} {% if aclass %} class="{{ aclass|e }}" {% endif %}>
                {% endif %}
                {% if info %} {{ info_hover(info) }} {% endif %}
            </span>
        </label>
    </span>
{% endmacro %}

{% macro tab_input_text(name, label='', info='', displayerrors=True, readonly=False, defaultvalue='', anid='',
                        aclass='') %}
    <tr {% if name in errors %} class="errorInput" {% endif %}>
        <td>
            <label for="{{ name|e }}">{{ label|e }}</label>
            {% if info %} {{ info_hover(info) }} {% endif %}
        </td>
        <td>
            {{ output_errors(name, displayerrors) }}
            {% if readonly %}
                <span>{{ values.get(name, defaultvalue)|e }}</span>
                <input type="hidden" name="{{ name|e }}" value="{{ values.get(name, defaultvalue)|e }}"
                  {% if anid %} id="{{ anid|e }}" {% endif %} {% if aclass %} class="{{ aclass|e }}" {% endif %}>
            {% else %}
                <input type="text" name="{{ name|e }}" value="{{ values.get(name, defaultvalue)|e }}"
                  {% if anid %} id="{{ anid|e }}" {% endif %} {% if aclass %} class="{{ aclass|e }}" {% endif %}>
            {% endif %}
        </td>
    </tr>
{% endmacro %}

{% macro input_textarea(name, label='', info='', displayerrors=True, readonly=False, defaultvalue='', anid='',
                        aclass='') %}
    <span {% if name in errors %} class="errorInput" {% endif %}>
        <label>
            {{ label|e }}
            <span class="stacking">
                {{ output_errors(name, displayerrors) }}
                {% if info %} {{ info_hover(info) }} {% endif %}
                {% if readonly %}
                    <span>{{ values.get(name, defaultvalue)|e }}</span>
                    <textarea name="{{ name|e }}" {% if anid %} id="{{ anid|e }}" {% endif %}
                      class="{{ aclass|e }} invisible">{{ values.get(name, defaultvalue)|e }}</textarea>
                {% else %}
                    <textarea name="{{ name|e }}" {% if aclass %} class="{{ aclass|e }}" {% endif %}
                      {% if anid %} id="{{ anid|e }}" {% endif %}>{{ values.get(name, defaultvalue)|e }}</textarea>
                {% endif %}
            </span>
        </label>
    </span>
{% endmacro %}

{% macro tab_input_textarea(name, label='', info='', displayerrors=True, readonly=False, defaultvalue='', anid='',
                            aclass='') %}
    <tr {% if name in errors %} class="errorInput" {% endif %}>
        <td>
            <label for="{{ name|e }}">{{ label|e }}</label>
            {% if info %} {{ info_hover(info) }} {% endif %}
        </td>
        <td>
            {{ output_errors(name, displayerrors) }}
            {% if readonly %}
                <span>{{ values.get(name, defaultvalue)|e }}</span>
                <textarea name="{{ name|e }}" {% if anid %} id="{{ anid|e }}" {% endif %}
                  class="{{ aclass|e }} invisible">{{ values.get(name, defaultvalue)|e }}</textarea>
            {% else %}
                <textarea name="{{ name|e }}" {% if anid %} id="{{ anid|e }}" {% endif %}
                  {% if aclass %} class="{{ aclass|e }}" {% endif %}>{{ values.get(name, defaultvalue)|e }}</textarea>
            {% endif %}
        </td>
    </tr>
{% endmacro %}

{% macro input_password(name="password", label="", info='', readonly=False, anid='', aclass='') %}
    <span {% if name in errors %} class="errorInput" {% endif %}>
        <label>
            {{ label|e }}
            {% if readonly %}
                <span>******</span>
                <input type="hidden" name="{{ name|e }}" value=""  {% if anid %} id="{{ anid|e }}" {% endif %}
                  {% if aclass %} class="{{ aclass|e }}" {% endif %}>
            {% else %}
                <input type="password" name="{{ name|e }}" value=""  {% if anid %} id="{{ anid|e }}" {% endif %}
                  {% if aclass %} class="{{ aclass|e }}" {% endif %}>
            {% endif %}
            {% if info %} {{ info_hover(info) }} {% endif %}
        </label>
    </span>
{% endmacro %}

{% macro tab_input_password(name="password", label="", info='', readonly=False, anid='', aclass='') %}
    <tr {% if name in errors %} class="errorInput" {% endif %}>
        <td>
            <label for="{{ name|e }}">{{ label|e }}</label>
            {% if info %} {{ info_hover(info) }} {% endif %}
        </td>
        <td>
            {% if readonly %}
                <span>******</span>
                <input type="hidden" name="{{ name|e }}" value=""  {% if anid %} id="{{ anid|e }}" {% endif %}
                  {% if aclass %} class="{{ aclass|e }}" {% endif %}>
            {% else %}
                <input type="password" name="{{ name|e }}" value=""  {% if anid %} id="{{ anid|e }}" {% endif %}
                  {% if aclass %} class="{{ aclass|e }}" {% endif %}>
            {% endif %}
        </td>
    </tr>
{% endmacro %}

{% macro input_checkbox(name, label="", value=True, info='', readonly=False, defaultvalue='', anid='', aclass='') %}
{# This is the version for single checkboxes as opposed to input_checkboxes(). #}
    <span {% if name in errors %} class="errorInput" {% endif %}>
        <label>
            <input type="checkbox" name="{{ name|e }}" value="{{ value|e }}"
              {% if values.get(name, defaultvalue)|string == value|string %} checked {% endif %}
              {% if readonly %} disabled {% endif %} {% if anid %} id="{{ anid|e }}" {% endif %}
              {% if aclass %} class="{{ aclass|e }}" {% endif %}>
            {{ label|e }}
            {% if info %} {{ info_hover(info) }} {% endif %}
        </label>
    </span>
{% endmacro %}

{% macro tab_input_checkbox(name, label="", value=True, info='', readonly=False, defaultvalue='', anid='', aclass='') %}
{# This is the version for single checkboxes as opposed to tab_input_checkboxes(). #}
    <tr {% if name in errors %} class="errorInput" {% endif %}>
        <td colspan="2">
            <label>
                <input type="checkbox" name="{{ name|e }}" value="{{ value|e }}"
                  {% if values.get(name, defaultvalue)|string == value|string %} checked {% endif %}
                  {% if readonly %} disabled {% endif %} {% if anid %} id="{{ anid|e }}" {% endif %}
                  {% if aclass %} class="{{ aclass|e }}" {% endif %}>
                {{ label|e }}
            </label>
            {% if info %} {{ info_hover(info) }} {% endif %}
        </td>
    </tr>
{% endmacro %}

{% macro input_checkboxes(name, title, entries, info='', readonly=False) %}
{# This is the version for multiple checkboxes as opposed to input_checkbox().
   entries is of type [(str, str, str)]. #}

    <span {% if name in errors %} class="errorInput" {% endif %}>
        {{ title|e }}
        <span class="stacking">
            {% if info %} {{ info_hover(info) }} {% endif %}
            {% for value, label, entry_id in entries %}
                <label>
                    <input type="checkbox" name="{{ name|e }}" value="{{ value|e }}"
                      {% if value|stringIn(values.getlist(name)) %} checked {% endif %}
                      {% if readonly %} disabled {% endif %} {% if entry_id %} id="{{ entry_id|e }}" {% endif %}>
                    {{ label|e }}
                </label>
            {% endfor %}
        </span>
    </span>
{% endmacro %}

{% macro tab_input_checkboxes(name, title, entries, info='', readonly=False) %}
{# This is the version for multiple checkboxes as opposed to tab_input_checkbox().
   entries is of type [(str, str, str)]. #}

    <tr {% if name in errors %} class="errorInput" {% endif %}>
        <td>{{ title|e }}</td>
        <td>
            {% if info %} {{ info_hover(info) }} {% endif %}
            {% for value, label, entry_id in entries %}
                <label>
                    <input type="checkbox" name="{{ name|e }}" value="{{ value|e }}"
                      {% if value|stringIn(values.getlist(name)) %} checked {% endif %}
                      {% if readonly %} disabled {% endif %} {% if entry_id %} id="{{ entry_id|e }}" {% endif %}>
                    {{ label|e }}
                </label>
            {% endfor %}
        </td>
    </tr>
{% endmacro %}

{% macro input_radio(name, entries, title="", info='', readonly=False, defaultvalue=None) %}
    <span {% if name in errors %} class="errorInput" {% endif %}>
        {{ title|e }}
        {% if info %} {{ info_hover(info) }} {% endif %}
        {% if readonly %}
            <span>{{ values.get(name, defaultvalue)|e }}</span>
        {% else %}
            <span class="stacking">
                {% for value, label, entry_id in entries %}
                    <label>
                        <input type="radio" name="{{ name|e }}" value="{{ value|e }}"
                          {% if values.get(name, defaultvalue)|string == value|string %} checked {% endif %}
                          {% if entry_id %} id="{{ entry_id|e }}" {% endif %}>
                        {{ label|e }}
                    </label><br>
                {% endfor %}
            </span>
        {% endif %}
    </span>
{% endmacro %}

{% macro tab_input_radio(name, entries, title="", info='', readonly=False, defaultvalue=None) %}
    <tr {% if name in errors %} class="errorInput" {% endif %}>
        <td>
            {{ title|e }}
            {% if info %} {{ info_hover(info) }} {% endif %}
        </td>
        <td>
            {% if readonly %}
                <span>{{ values.get(name, defaultvalue)|e }}</span>
            {% else %}
                {% for value, label, entry_id in entries %}
                    <label>
                        <input type="radio" name="{{ name|e }}" value="{{ value|e }}"
                          {% if values.get(name, defaultvalue)|string == value|string %} checked {% endif %}
                          {% if entry_id %} id="{{ entry_id|e }}" {% endif %}>
                        {{ label|e }}
                    </label><br>
                {% endfor %}
            {% endif %}
        </td>
    </tr>
{% endmacro %}

{% macro input_select(name, entries, title="", info='', readonly=False, defaultvalue=None, nulloption=False, anid='',
                      aclass='') %}
    <span {% if name in errors %} class="errorInput" {% endif %}>
        {{ title|e }}
        {% if info %} {{ info_hover(info) }} {% endif %}
        {% if readonly %}
            <span {% if anid %} id="{{ anid|e }}" {% endif %} {% if aclass %} class="{{ aclass|e }}" {% endif %}>
                {{ values.get(name, defaultvalue)|e }}
            </span>
        {% else %}
            <select name="{{ name|e }}" {% if anid %} id="{{ anid|e }}" {% endif %}
              {% if aclass %} class="{{ aclass|e }}" {% endif %}>
                {% if nulloption %}
                     <option value=""> </option>
                {% endif %}
                {% for value, label, entry_id in entries %}
                    <option value="{{ value|e }}"
                      {% if values.get(name, defaultvalue)|string == value|string %} selected {% endif %}
                      {% if entry_id %} id="{{ entry_id|e }}" {% endif %}>
                        {{ label|e }}
                    </option>
                {% endfor %}
            </select>
        {% endif %}
    </span>
{% endmacro %}

{% macro tab_input_select(name, entries, title="", info='', readonly=False, defaultvalue=None, nulloption=False,
                          anid='', aclass='') %}
    <tr {% if name in errors %} class="errorInput" {% endif %}>
        <td>
            {{ title|e }}
            {% if info %} {{ info_hover(info) }} {% endif %}
        </td>
        <td>
            {% if readonly %}
                <span {% if anid %} id="{{ anid|e }}" {% endif %} {% if aclass %} class="{{ aclass|e }}" {% endif %}>
                    {{ values.get(name, defaultvalue)|e }}
                </span>
            {% else %}
                <select name="{{ name|e }}" {% if anid %} id="{{ anid|e }}" {% endif %}
                  {% if aclass %} class="{{ aclass|e }}" {% endif %}>
                    {% if nulloption %}
                         <option value=""> </option>
                    {% endif %}
                    {% for value, label, entry_id in entries %}
                        <option value="{{ value|e }}"
                          {% if values.get(name, defaultvalue)|string == value|string %} selected {% endif %}
                          {% if entry_id %} id="{{ entry_id|e }}" {% endif %}>
                            {{ label|e }}
                        </option>
                    {% endfor %}
                </select>
            {% endif %}
        </td>
    </tr>
{% endmacro %}

{% macro input_multiselect(name, entries, title="", info='', readonly=False, anid='', aclass='') %}
    <span {% if name in errors %} class="errorInput" {% endif %}>
        {{ title|e }}
        {% if info %} {{ info_hover(info) }} {% endif %}
        {% if readonly %}
            <span {% if anid %} id="{{ anid|e }}" {% endif %} {% if aclass %} class="{{ aclass|e }}" {% endif %}>
                {{ values.getlist(name)|join(", ")|e }}
            </span>
        {% else %}
            <select name="{{ name|e }}" multiple  {% if anid %} id="{{ anid|e }}" {% endif %}
              {% if aclass %} class="{{ aclass|e }}" {% endif %}>
                {% for value, label, entry_id in entries %}
                    <option value="{{ value|e }}" {% if value|stringIn(values.getlist(name)) %} selected {% endif %}
                      {% if entry_id %} id="{{ entry_id|e }}" {% endif %}>
                        {{ label|e }}
                    </option>
                {% endfor %}
            </select>
        {% endif %}
    </span>
{% endmacro %}

{% macro tab_input_multiselect(name, entries, title="", info='', readonly=False, anid='', aclass='') %}
    <tr {% if name in errors %} class="errorInput" {% endif %}>
        <td>
            {{ title|e }}
            {% if info %} {{ info_hover(info) }} {% endif %}
        </td>
        <td>
            {% if readonly %}
                <span {% if anid %} id="{{ anid|e }}" {% endif %} {% if aclass %} class="{{ aclass|e }}" {% endif %}>
                    {{ values.getlist(name)|join(", ")|e }}
                </span>
            {% else %}
                <select name="{{ name|e }}" multiple {% if anid %} id="{{ anid|e }}" {% endif %}
                  {% if aclass %} class="{{ aclass|e }}" {% endif %}>
                    {% for value, label, entry_id in entries %}
                        <option value="{{ value|e }}" {% if value|stringIn(values.getlist(name)) %} selected {% endif %}
                          {% if entry_id %} id="{{ entry_id|e }}" {% endif %}>
                            {{ label|e }}
                        </option>
                    {% endfor %}
                </select>
            {% endif %}
        </td>
    </tr>
{% endmacro %}

{% macro input_submit(value, name="submitform", info='', readonly=False, anid='', aclass='') %}
    <input type="submit" name="{{ name|e }}" value="{{ value|e }}" {% if readonly %} disabled {% endif %}
      {% if anid %} id="{{ anid|e }}" {% endif %} {% if aclass %} class="{{ aclass|e }}" {% endif %}>
    {% if info %} {{ info_hover(info) }} {% endif %}
{% endmacro %}

{% macro format_query(spec, titles, choices, output_selection=True, selection_blacklist=[]) %}
    <script type="text/javascript">
        // adjust input element to the selected operator
        // this should be called from the corresponding change trigger
        function update_choices(field, choices, validator) {
            var esc_field = field.replace(".", "\\.") // escape dot for selectors
            var previous = $("#qinput_" + esc_field).val();
            $("#qinput_" + esc_field).remove();
            // NOTE cdedb.query.QueryOperator values are embedded
            if ($('#qop_' + esc_field).val() == "0" || $('#qop_' + esc_field).val() == "1") {
                // do nothing
            } else if ($('#qop_' + esc_field).val() == "2") {
                if (!$.isEmptyObject(choices)) {
                    $("#qspan_" + esc_field).append($("<select>", {"name": "qval_" + field, "id": "qinput_" + field}));
                    $("#qinput_" + esc_field).append($("<option>", {"value": ""}));
                    for (var key in choices) {
                        if (choices.hasOwnProperty(key)) {
                            $("#qinput_" + esc_field).append($("<option>", {"value": key, "html": choices[key],
                                                                            "selected": (String(key) == previous)}));
                        }
                    }
                } else {
                    if (validator == "bool") {
                        $("#qspan_" + esc_field).append($("<select>", {"name": "qval_" + field,
                                                                       "id": "qinput_" + field}));
                        $("#qinput_" + esc_field).append($("<option>", {"value": ""}));
                        var bool_choices = {"True": "wahr", "False": "falsch"};
                        for (var key in bool_choices) {
                            $("#qinput_" + esc_field).append($("<option>", {"value": key, "html": bool_choices[key],
                                                                            "selected": (key == previous)}));
                        }
                    } else {
                        $("#qspan_" + esc_field).append($("<input>", {
                            "name": "qval_" + field, "id": "qinput_" + field, "type": "text", "value": previous}));
                    }
                }
            } else {
                $("#qspan_" + esc_field).append($("<input>", {"name": "qval_" + field, "id": "qinput_" + field,
                                                              "type": "text", "value": previous}));
            }
        }
    </script>
    {% with OPERATOR_LABELS = {0: "leer",
                               1: "nichtleer",
                               2: "gleich",
                               3: "eines aus",
                               4: "ähnlich",
                               5: "regex",
                               6: "enthält alle",
                               10: "kleiner",
                               11: "kleinergleich",
                               12: "zwischen",
                               13: "größergleich",
                               14: "größer",} %}
        <table>
            {% for field in spec %}
                <tr {% if field in errors %} class="errorInput" {% endif %}>
                    <td>
                        {# multi-fields are not reliably selectable, so we disable selection #}
                        {% if ',' not in field and field not in selection_blacklist %}
                            {% with name = "qsel_{}".format(field) %}
                                {% if output_selection %}
                                        {{ input_checkbox(name, aclass="outputSelector") }}
                                {% else %}
                                    {{ input_hidden(name, value=True) }}
                                {% endif %}
                            {% endwith %}
                        {% endif %}
                    </td>
                    <td> {{ titles[field]|e }} </td>
                    <td>
                        {% with name = "qop_{}".format(field) %}
                            {% with theid = "qop_{}".format(field) %}
                                {# jinja does not support list comprehension ... #}
                                {% set myentries = [] %}
                                {% for op in VALID_QUERY_OPERATORS[spec[field]] %}
                                    {{ myentries.append((op.value, OPERATOR_LABELS[op.value], None))|e }}
                                {% endfor %}
                                {{ input_select(name, entries=myentries,
                                                defaultvalue=VALID_QUERY_OPERATORS[spec[field]][0].value, anid=theid) }}
                                <script type="text/javascript">
                                    $(document).ready(function(){
                                        $("#{{ theid.replace('.', '\\\\.')|e }}").change(function (){
                                            update_choices("{{ field|e }}", {{ choices.get(field, '')|json }},
                                                           "{{ spec[field]|e }}") });
                                        $("#{{ theid.replace('.', '\\\\.')|e }}").trigger('change');
                                    });
                                </script>
                            {% endwith %}
                        {% endwith %}
                    </td>
                    <td>
                        <span id="qspan_{{ field|e }}">
                            {{ input_text("qval_{}".format(field), anid="qinput_{}".format(field)) }}
                        </span>
                    </td>
                </tr>
            {% endfor %}
            {% for title, name in (("1. Sortierung nach", "qord_primary"), ("2. Sortierung nach", "qord_secondary"),
                                   ("3. Sortierung nach", "qord_tertiary"))%}
                <tr>
                    <td colspan="2"> {{ title|e }} </td>
                    <td colspan="2">
                        {# jinja does not support list comprehension ... #}
                        {% set myentries = [] %}
                        {% for field in spec %}
                            {% if ',' not in field %}
                                {{ myentries.append((field, titles[field], None))|e }}
                            {% endif %}
                        {% endfor %}
                        {{ input_select(name, entries=myentries, nulloption=True)}}
                        {{ input_select(name + "_ascending", defaultvalue=True,
                                        entries=((True, "aufsteigend", None), (False, "absteigend", None))) }}
                    </td>
                </tr>
            {% endfor %}
        </table>
    {% endwith %}
{% endmacro %}

{% macro place_default_queries(target, queries, titles) %}
{# TODO make this a multicolumn thing for more efficient space usage #}
    {% if queries %}
        <ul>
            {% for query in queries %}
                <li>{{ href(cdedblink(target, queries[query]|querytoparams), titles.get(query, query)) }}</li>
            {% endfor %}
        </ul>
    {% endif %}
{% endmacro %}

{% macro display_query_result(result, query, titles, choices) %}
    {% if not result|length %}
        Keine Ergebnisse!
    {% else %}
        {# TODO add fancy js to table #}
        <table class="checkeredTable">
            <tr>
                <th></th>
                {% for csvfield in query.fields_of_interest %}
                    {% for field in csvfield.split(',') %}
                        <th>{{ titles.get(field, field)|e }}</th>
                    {% endfor %}
                {% endfor %}
            </tr>
            {% for row in result %}
                {% set outerloopindex = loop.index0 %}
                <tr>
                    <td>
                        {{ input_checkbox("row_{}".format(outerloopindex), anid="row_{}".format(outerloopindex),
                                          aclass="rowSelector") }}
                    </td>
                    {% for csvfield in query.fields_of_interest %}
                        {% for field in csvfield.split(',') %}
                            {# NOTE that we split off any possible schema specification since they're not preserved
                                    by the query #}
                            {% with afield = field.split('.')[-1] %}
                                <td>
                                    {% if afield == "persona_id" %}
                                        {{ href(show_user_link(row[afield]), row[afield]|cdedbid) }}
                                    {% elif field == "reg.id" %}
                                        {# This should occur only if the context allows the following link. #}
                                        {{ href(cdedblink("event/show_registration", {'registration_id': row[afield]}),
                                             row[afield]) }}
                                    {% elif query.spec[csvfield] == "bool" %}
                                        {{ deko_checkbox(row.get(afield)) }}
                                    {% else %}
                                        {{ choices.get(csvfield, {}).get(row.get(afield),
                                                                         row.get(afield, "UNDEFINED"))|e }}
                                    {% endif %}
                                    {{ input_hidden("row_{}_{}".format(outerloopindex, afield), row.get(afield),
                                                    anid="row_{}_{}".format(outerloopindex, afield)) }}
                                </td>
                            {% endwith %}
                        {% endfor %}
                    {% endfor %}
                </tr>
            {% endfor %}
        </table>
    {% endif %}
{% endmacro %}

{% macro event_field_input(field_data, name='', label='', info='', displayerrors=True, readonly=False, defaultvalue='',
                           anid='', aclass='') %}
    {% if not name %}
        {% set name = "fields.{}".format(field_data['field_name']) %}
    {% endif %}
    {% if not label %}
        {% set label = field_data['field_name'] %}
    {% endif %}
    {% if field_data['entries'] %}
        {# jinja does not support list comprehension ... #}
        {% set myentries = [] %}
        {% for value, description in field_data['entries'] %}
            {{ myentries.append((value, description, None))|e }}
        {% endfor %}
        {{ input_select(name=name, title=label, entries=myentries, nulloption=True,
                        readonly=readonly, defaultvalue=defaultvalue, anid=anid, aclass=aclass) }}
   {% else %}
        {% if field_data['kind'] == "bool" %}
            {{ input_checkbox(name=name, label=label, readonly=readonly, defaultvalue=defaultvalue, anid=anid,
                              aclass=aclass) }}
        {% elif field_data['kind'] == "str" %}
            {{ input_textarea(name=name, label=label, displayerrors=displayerrors, readonly=readonly,
                              defaultvalue=defaultvalue, anid=anid, aclass=(aclass + " bigg")) }}
        {% else %}
            {{ input_text(name=name, label=label, displayerrors=displayerrors, readonly=readonly,
                          defaultvalue=defaultvalue, anid=anid, aclass=aclass) }}
        {% endif %}
   {% endif %}
{% endmacro %}

{% macro tab_event_field_input(field_data, name='', label='', info='', displayerrors=True, readonly=False,
                               defaultvalue='', anid='', aclass='') %}
    {% if not name %}
        {% set name = "fields.{}".format(field_data['field_name']) %}
    {% endif %}
    {% if not label %}
        {% set label = field_data['field_name'] %}
    {% endif %}
    {% if field_data['entries'] %}
        {# jinja does not support list comprehension ... #}
        {% set myentries = [] %}
        {% for value, description in field_data['entries'] %}
            {{ myentries.append((value, description, None))|e }}
        {% endfor %}
        {{ tab_input_select(name=name, title=label, entries=myentries, nulloption=True,
                            readonly=readonly, defaultvalue=defaultvalue, anid=anid, aclass=aclass) }}
   {% else %}
        {% if field_data['kind'] == "bool" %}
            {{ tab_input_checkbox(name=name, label=label, readonly=readonly, defaultvalue=defaultvalue, anid=anid,
                                  aclass=aclass) }}
        {% elif field_data['kind'] == "str" %}
            {{ tab_input_textarea(name=name, label=label, displayerrors=displayerrors, readonly=readonly,
                                  defaultvalue=defaultvalue, anid=anid, aclass=(aclass + " bigg")) }}
        {% else %}
            {{ tab_input_text(name=name, label=label, displayerrors=displayerrors, readonly=readonly,
                              defaultvalue=defaultvalue, anid=anid, aclass=aclass) }}
        {% endif %}
   {% endif %}
{% endmacro %}

{% macro display_csv_query_result(result, query, choices) -%}
{{ ";".join(query.fields_of_interest).replace(',', ';') }}
{% for row in result -%}
{% for csvfield in query.fields_of_interest -%}
{% for field in csvfield.split(',') -%}
{% with afield = field.split('.')[-1] -%}
{% if row.get(afield) is not none -%}
{{ (choices.get(csvfield, {}).get(row[afield], row[afield])|linebreaks(replacement="        ")).replace(';', ',') -}}
{# else we print nothing -#}
{% endif -%}
{% endwith -%}
{% if not loop.last %};{% endif -%}
{% endfor -%}
{% if not loop.last %};{% endif -%}
{% endfor %}
{% endfor -%}
{% endmacro %}
