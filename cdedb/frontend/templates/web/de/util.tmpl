{# This template provides a set of standard macros which should be used to
   create html-elements. #}

{% macro jquery_with_ui_preamble() %}
    <script type="text/javascript">
        cdedb_javascript = true;
    </script>
    <script type="text/javascript" src="{{ staticurl("jquery-ui/jquery-ui.js")|e }}"></script>
    <link rel="stylesheet" type="text/css" href="{{ staticurl("jquery-ui/jquery-ui.css")|e }}">
{% endmacro %}

{% set script_files = [] %}
{% macro cdedb_script(script) %}
    {% if not script in script_files %}
        {% if script == 'queryform' %}
            <script type="text/javascript" src="{{ staticurl("cdedb_queryform.js")|e }}"></script>
            {{ cdedb_script('selectize') }}
        {% elif script == 'dynamicrow' %}
            <script type="text/javascript" src="{{ staticurl("cdedb_dynamicrow.js")|e }}"></script>
        {% elif script == 'historycollapse' %}
            <script type="text/javascript" src="{{ staticurl("cdedb_historycollapse.js")|e }}"></script>
        {% elif script == 'helper' %}
            <script type="text/javascript" src="{{ staticurl("cdedb_helper.js")|e }}"></script>
        {% elif script == 'selectize' %}
            <script type="text/javascript" src="{{ staticurl("selectize/selectize.min.js")|e }}"></script>
            <link rel="stylesheet" type="text/css" href="{{ staticurl("selectize/selectize.bootstrap3.css")|e }}" />
        {% elif script == 'batch-admission' %}
            <script type="text/javascript" src="{{ staticurl("cdedb_batch_admission.js")|e }}"></script>
        {% elif script == 'search-persona' %}
            {{ cdedb_script('selectize') }}
            <script type="text/javascript" src="{{ staticurl("cdedb_searchpersona.js")|e }}"></script>
        {% elif script == 'change-mailinglist' %}
            <script type="text/javascript" src="{{ staticurl("cdedb_change_mailinglist.js")|e }}"></script>
        {% elif script == 'voting' %}
            <script type="text/javascript" src="{{ staticurl("cdedb_voting.js")|e }}"></script>
        {% elif script == 'questionnaire_config' %}
            <script type="text/javascript" src="{{ staticurl("cdedb_questionnaire_config.js")|e }}"></script>
        {% elif script == 'orderrow' %}
            <script type="text/javascript" src="{{ staticurl("cdedb_orderrow.js")|e }}"></script>
        {% endif %}
        {{ script_files.append(script) }}
    {% endif %}
{% endmacro %}

{% macro make_icon(icon, aclass='', title='', arialabel='') -%}
    <span class="glyphicon glyphicon-{{ icon|e }} {{aclass}}" {% if title %}title="{{ title|e }}"{% endif %}
            aria-hidden="true"></span>
    {%- if arialabel %}
        <span class="sr-only">{{ arialabel|e }}</span>
    {%- endif %}
{%- endmacro %}

{% macro deko_checkbox(checked, anid='', titles=[]) %}
    {% if checked %}
        <span class="glyphicon glyphicon-ok-sign"{% if anid %} id="{{ anid|e }}"{% endif %} data-checked="True"
                {% if titles[1] %}title="{{ titles[1] }}"{% endif %} aria-hidden="true"></span>{{ '' -}}
        <span class="sr-only">{% if titles[1] %}{{ titles[1] }}{% endif %}</span>
    {% else %}
        <span class="glyphicon glyphicon-remove-circle"{% if anid %} id="{{ anid|e }}"{% endif %} data-checked="False"
                {% if titles[0] %}title="{{ titles[0] }}"{% endif %} aria-hidden="true"></span>{{ '' -}}
        <span class="sr-only">{% if titles[0] %}{{ titles[0] }}{% endif %}</span>
    {% endif %}
{% endmacro %}

{% macro href(ref, label, readonly=False, icon="", aclass='', active=False, title='') -%}
{% if readonly %}<span {%- else -%}<a href="{{ ref|e }}"{% endif %}
{% if aclass or active or readonly -%}
    class="{{ aclass }}{% if active %} active{% endif -%}
           {% if readonly %} {% if not 'btn' in aclass %}link-{% endif%}disabled{% endif %}"
{%- endif %}
{%- if title %} title="{{ title|e }}"{% endif %}>
{%- if icon %}{{ make_icon(icon) }} {% endif %}{{ label|e }}
{%- if readonly %}</span>{%- else -%}</a>{% endif %}
{%- endmacro %}

{% macro output_errors(name, displayerrors=True) %}
    {% if displayerrors and name in errors %}
        <div class="input-error-block">
            {% for error in errors.get(name, []) %}
                {% if error %}
                    {{ format_error(error) }}
                {% endif %}
            {% endfor %}
        </div>
    {% endif %}
{% endmacro %}

{% macro format_error(error) %}
    {% if error.args|length == 1 %}
        {{ gettext(error.args[0]|string)|e }}<br />
    {% elif error.args|length == 2 %}
        {{ gettext(error.args[0]|string).format(**error.args[1])|e }}<br />
    {% elif error.args|length == 0 %}
        {# Display nothing if no message was supplied. #}
    {% else %}
        Nicht wohlgeformter Fehler.<br />
    {% endif %}
{% endmacro %}

{% macro output_info(info) %}
    {% if info %}
        <p class="help-block">{{ make_icon('info-sign') }} {{ info|e }}</p>
    {% endif %}
{% endmacro %}

{% macro persona_anchor(persona, verbose=False) %}
    {%- if verbose -%}
        {{ href(show_user_link(persona['id']), "{} {} {} {}".format(
              persona['title'], persona['given_names'],
              persona['family_name'], persona['name_supplement'])) }}
    {%- else -%}
        {{ href(show_user_link(persona['id']), "{} {}".format(
              persona['given_names'], persona['family_name'])) }}
    {%- endif -%}
{% endmacro %}

{# ################### #
 # (Form) input macros #
 # ################### #}

{# The input_* macro generates a blank input field of the given type. Note that some input types don't have an own macro
   but can be produced by passing an additional parameter to another macro:

   * password: input_text(..., type="password")
   * date etc.: input_text(..., type="date")
   * radio: input_checkbox(..., radio=True)

   The form_input_* wraps the specific input macro and adds some divs, label and error output. These macros are meant to
   be used inside an form.form-horizontal.
#}
{% macro input_hidden(name, value=None, defaultvalue='', anid='', aclass='') %}
    {% if value is none %}
        <input type="hidden" name="{{ name|e }}" value="{{ values.get(name, defaultvalue)|e }}"
          {% if anid %} id="{{ anid|e }}" {% endif %} {% if aclass %} class="{{ aclass|e }}" {% endif %}>
    {% else %}
        <input type="hidden" name="{{ name|e }}" value="{{ value|e }}" {% if anid %} id="{{ anid|e }}" {% endif %}
          {% if aclass %} class="{{ aclass|e }}" {% endif %}>
    {% endif %}
{% endmacro %}

{% macro form_input_general(name='', label='', anid='', small=False, info='', displayerrors=True,
        horizontal=True) %}
    <div class="form-group {% if name in errors %}has-error{% endif %}">
        {% if label %}
            <label{% if anid %} for="{{ anid|e }}"{% endif %}
                    class="{% if horizontal %}{% if small %}col-sm-2{% else %}col-sm-4{% endif %}{% endif %}
                           control-label">
                {{ label|e }}
            </label>
        {% endif %}
        <div {% if horizontal %}class="{% if small %}col-sm-6{% else %}col-sm-8{% endif %}
                                       {% if not label %}
                                           {% if small %}col-sm-offset-2{% else %}col-sm-offset-4{% endif %}
                                       {% endif %}"{% endif %}>
            {{ caller() }}
            {{ output_errors(name, displayerrors) }}
            {{ output_info(info) }}
        </div>
    </div>
{% endmacro %}

{% macro input_text(name, readonly=False, defaultvalue='', anid='', aclass='form-control', maxlength=0, type='text',
        placeholder='', attributes='') %}
    <input type="{{ type|e }}" {% if aclass %} class="{{ aclass|e }}"{% endif %}
            {% if maxlength %} maxlength="{{ maxlength }}"{% endif %}
            {% if placeholder %} placeholder="{{ placeholder|e }}"{% endif %}
            {% if anid %} id="{{ anid|e }}"{% endif %}
            name="{{ name|e }}"
            {% if type != 'password' %}
                {% if type == 'date' %}
                    value="{{ values.get(name, defaultvalue)|date('%Y-%m-%d', passthrough=True) }}"
                {% elif type == 'datetime-local' %}
                    value="{{ values.get(name, defaultvalue)|datetime('%Y-%m-%dT%H:%M:%S.%f', passthrough=True) }}"
                {% else %}
                    value="{{ values.get(name, defaultvalue)|e }}"
                {% endif %}
            {% endif %}
            {% if readonly %}disabled="disabled"{% endif %} {{ attributes }} />
{% endmacro %}
{% macro form_input_text(name, label='', info='', displayerrors=True, readonly=False, defaultvalue='', anid='',
    maxlength=0, type='text', placeholder='', small=False, horizontal=True, aclass="", attributes='') %}
    {% call form_input_general(name, label, anid, small, info, displayerrors, horizontal) %}
        {{ input_text(name, readonly, defaultvalue, anid, maxlength=maxlength, type=type, placeholder=placeholder,
                aclass="form-control " + aclass, attributes=attributes) }}
    {% endcall %}
{% endmacro %}


{% macro input_file(name, readonly=False, defaultvalue='', anid='', aclass='form-control', accept='') %}
    <input type="file" {% if aclass %} class="{{ aclass|e }}"{% endif %}
            {% if accept %} class="{{ accept|e }}"{% endif %}
            {% if anid %} id="{{ anid|e }}"{% endif %} value="{{ values.get(name, defaultvalue)|e }}"
            name="{{ name|e }}" {% if readonly %}disabled="disabled"{% endif %} />
{% endmacro %}

{% macro form_input_file(name, label='', info='', displayerrors=True, readonly=False, accept='', anid='',
        small=False, horizontal=True) %}
    {% call form_input_general(name, label, anid, small, info, displayerrors, horizontal) %}
        {{ input_file(name, readonly, defaultvalue, anid, accept=accept) }}
    {% endcall %}
{% endmacro %}

{% macro input_textarea(name, readonly=False, defaultvalue='', anid='', aclass='form-control', maxlength=0, rows=3,
                        attributes='') %}
    <textarea {% if aclass %} class="{{ aclass|e }}"{% endif %} rows="{{ rows }}"
            {% if anid %} id="{{ anid|e }}"{% endif %} name="{{ name|e }}"
            {% if maxlength %} maxlength="{{ maxlength }}"{% endif %}
            {% if readonly %}disabled="disabled"{% endif %} {{ attributes }}
    >{{ values.get(name, defaultvalue)|e }}</textarea>
{% endmacro %}

{% macro form_input_textarea(name, label='', info='', displayerrors=True, readonly=False, defaultvalue='', anid='',
        aclass='', small=False, maxlength=0, rows=3, horizontal=True, attributes='') %}
    {% call form_input_general(name, label, anid, small, info, displayerrors, horizontal) %}
        {{ input_textarea(name, readonly, defaultvalue, anid, maxlength=maxlength, rows=rows, attributes=attributes,
                          aclass='form-control '+aclass) }}
    {% endcall %}
{% endmacro %}

{# list as default value is not supported yet #}
{% macro input_checkbox(name, label="", value=True, defaultvalue='', readonly=False, anid='', aclass='', inline=False,
        radio=False, attributes='') %}
    {% if label %}
        <label{% if inline %} class="{% if radio %}radio{% else %}checkbox{% endif %}-inline"{% endif %}>
    {% endif %}
        <input type="{% if radio %}radio{% else %}checkbox{% endif %}" name="{{ name|e }}" value="{{ value|e }}"
            {% if value|stringIn(values.getlist(name)) or (not name in values and value|string == defaultvalue)  %}
                checked="checked"
            {% endif %}
            {% if readonly %} disabled="disabled" {% endif %} {% if anid %} id="{{ anid|e }}" {% endif %}
            {% if aclass %} class="{{ aclass|e }}"{% endif %} {{ attributes }} />
        {{ label|e }}
    {% if label %}</label>{% endif %}
{% endmacro %}

{% macro input_checkboxes(name, entries, readonly=False, defaultvalue='', inline=False, radio=False) %}
    {% for entry_value, entry_label in entries %}
        {% if not inline %}
            <div class="{% if radio %}radio{% else %}checkbox{% endif %} {% if readonly %}disabled{% endif %}">
        {% endif %}
            {{ input_checkbox(name, entry_label, entry_value, defaultvalue, readonly, inline=inline, radio=radio) }}
        {% if not inline %}</div>{% endif %}
    {% endfor %}
{% endmacro %}

{% macro form_input_checkbox(name, label="", value=True, info='', displayerrors=True, readonly=False, defaultvalue='',
        anid='', horizontal=True, small=False, attributes='') %}
    {# This is the version for a single checkbox as opposed to form_input_checkboxes(). #}
    <div class="form-group {% if name in errors %}has-error{% endif %}">
        <div {% if horizontal %}class="{% if small %}col-sm-6 col-sm-offset-2{% else -%}
                col-sm-8 col-sm-offset-4{% endif %}"{% endif %}>
            <div class="checkbox {% if readonly %}disabled{% endif %}">
                {{ input_checkbox(name, label, value, defaultvalue, readonly, anid, attributes=attributes) }}
            </div>
            {{ output_errors(name, displayerrors) }}
            {{ output_info(info) }}
        </div>
    </div>
{% endmacro %}

{% macro form_input_checkboxes(name, entries, label='', info='', displayerrors=True, readonly=False, defaultvalue='',
        small=False, radio=False, horizontal=True) %}
    {# This is the version for multiple checkboxes as opposed to input_checkbox().
       entries is of type [(str, str)]. #}
    {% call form_input_general(name, label, '', small, info, displayerrors, horizontal) %}
        {{ input_checkboxes(name, entries, readonly=readonly, defaultvalue=defaultvalue, radio=radio) }}
    {% endcall %}
{% endmacro %}


{% macro input_select(name, entries, readonly=False, defaultvalue=None, anid='', aclass='form-control',
        nulloption=False, attributes="") %}
    <select name="{{ name|e }}" {% if anid %} id="{{ anid|e }}" {% endif %}
            {% if aclass %} class="{{ aclass|e }}" {% endif %}{% if readonly %}disabled="disabled"{% endif %}
            {{ attributes }}>
        {% if nulloption %}
             <option value=""> </option>
        {% endif %}
        {% for value, label in entries %}
            <option value="{{ value|e }}"
              {% if values.get(name, defaultvalue)|string == value|string %} selected="selected" {% endif %}>
                {{- label|e -}}
            </option>
        {% endfor %}
    </select>
{% endmacro %}

{% macro form_input_select(name, entries, label="", info='', displayerrors=True, readonly=False, defaultvalue=None,
        nulloption=False, anid='', small=False, horizontal=True, aclass="", attributes="") %}
    {% call form_input_general(name, label, anid, small, info, displayerrors, horizontal) %}
        {{ input_select(name, entries, readonly, defaultvalue, anid, nulloption=nulloption,
                aclass="form-control " + aclass, attributes=attributes) }}
    {% endcall %}
{% endmacro%}

{% macro input_static(value) %}
    <div class="form-control-static">{{ value }}</div>
{% endmacro %}
{% macro form_input_static(label="", info='', value='', small=False, horizontal=True) %}
    {% if caller %}{% set value=caller() %}{% else %}{% set value=value|e %}{% endif %}
    {% call form_input_general(None, label, '', small, info, False, horizontal) %}
        {{ input_static(value) }}
    {% endcall %}
{% endmacro %}

{% macro input_submit(value='Speichern', name="submitform", anid='', aclass='btn btn-primary', icon="ok",
        readonly=False, title='', arialabel='') %}
    <button type="submit" name="{{ name|e }}" {% if readonly %} disabled="disabled"{% endif %} {% if anid %}
            id="{{ anid|e }}"{% endif %} {% if aclass %} class="{{ aclass|e }}"{% endif %}
            {% if title %} title="{{ title|e }}"{% endif %} value="True"
            {% if arialabel %} aria-label="{{ arialabel|e }}"{% endif %}>
            {% if icon %}{{ make_icon(icon) }} {% endif %}{{ value|e }}</button>
{% endmacro %}

{% macro form_input_submit(value='Speichern', name="submitform", info='', readonly=False, anid='',
        aclass='btn btn-primary', icon="ok", cancellink='', cancelicon='remove', cancelvalue='Abbrechen',
        small=False, horizontal=True) %}
    <div class="form-group">
        <div {% if horizontal %}class="{% if small %}col-sm-offset-2 col-sm-10{% else -%}
                col-sm-offset-4 col-sm-8{% endif %}"{% endif %}>
            {{ input_submit(value, name, anid, aclass, icon, readonly) }}
            {% if cancellink %}
                &emsp; {{ href(cancellink, cancelvalue, icon=cancelicon, aclass="btn btn-default cancel") }}
            {% endif %}
            {% if info %}<div class="control-label">{{ info_hover(info) }}</div>{% endif %}
        </div>
    </div>
{% endmacro %}

{% macro form_input_from_to(name1, name2, label='', info='', type='number', small=False, displayerrors=True,
        horizontal=True) %}
    <div class="form-group {% if name1 in errors or name2 in errors %}has-error{% endif %}">
        <label class="{% if horizontal %}{% if small %}col-sm-2{% else %}col-sm-4{% endif %}{% endif %} control-label">
            {{ label|e }}
        </label>
        <div {% if horizontal %}class="{% if small %}col-sm-6{% else %}col-sm-8{% endif %}"{% endif %}>
            <div class="input-group">
                <span class="input-group-addon">von</span>
                {{ input_text(name=name1, type=type) }}
                <span class="input-group-addon">bis</span>
                {{ input_text(name=name2, type=type) }}
            </div>
            {{ output_errors('start', displayerrors) }}
            {{ output_errors('stop', displayerrors) }}
            {{ output_info(info) }}
        </div>
    </div>
{% endmacro %}


{% macro format_query(spec, titles, choices, target, output_selection=True, selection_blacklist=[],
                      heading='Suchmaske') %}
    {% call bootstrap_panel(title=heading, icon="search", aclass="panel-primary") %}
    {% with OPERATOR_LABELS = {1: "ist leer",
                               2: "ist nicht leer",
                               3: "ist gleich",
                               4: "ist ungleich",
                               5: "ist eines aus",
                               6: "ist keines aus",
                               10: "ist ähnlich zu",
                               11: "ist nicht ähnlich zu",
                               12: "passt auf RegEx",
                               13: "passt nicht auf RegEx",
                               14: "enthält alle aus",
                               15: "enthält keines aus",
                               16: "enthält min. eines aus",
                               17: "fuzzy Vergleich",
                               20: "ist kleiner",
                               21: "ist kleinergleich",
                               22: "liegt zwischen",
                               23: "liegt nicht zwischen",
                               24: "ist größergleich",
                               25: "ist größer",} %}
        <form action="{{ target|e }}" method="GET" id="queryform">
            {{ input_hidden(name="is_search", value=True) }}
            <!-- Non-JS form -->
            <p class="queryform-nojs">
                <button type="submit" class="btn btn-primary">{{ make_icon('search') }} Suche</button>
                <span class="btn-group">
                    <button type="submit" class="btn btn-default" name="download" value="csv">
                        {{ make_icon('download') }} CSV-Datei
                    </button>
                    <button type="submit" class="btn btn-default" name="download" value="json">
                        {{ make_icon('download') }} JSON-Datei
                    </button>
                </span>
            </p>
            <div class="row queryform-nojs">
                <div class="col-lg-7">
                    <table class="query-form-cols table table-superdense">
                        <thead>
                            <tr>
                                <th>{{ make_icon('eye-open') }}</th>
                                <th>Felder</th>
                                <th colspan="2">Filter</th>
                            </tr>
                        </thead>
                        <tbody>
                        {% for field in spec %}
                            <tr class="query_field {% if field in errors %}errorInput{% endif %}
                                       {% if field == query_mod.QUERY_PRIMARIES[query.scope] %}id-field{% endif %}"
                                    data-type="{{ spec[field]|e }}" data-id="{{ field|e }}">
                                <td>
                                    {# multi-fields are not reliably selectable, so we disable selection #}
                                    {% if ',' not in field and field not in selection_blacklist %}
                                        {% with name = "qsel_{}".format(field) %}
                                            {% if output_selection %}
                                                {{ input_checkbox(name, aclass='outputSelector', value=True) }}
                                            {% else %}
                                                {{ input_hidden(name, value=True) }}
                                            {% endif %}
                                        {% endwith %}
                                    {% endif %}
                                </td>
                                <td class="name">{{ titles.get(field, field)|e }}</td>
                                <td>
                                    {% with name = "qop_{}".format(field) %}
                                        {% with theid = "qop_{}".format(field) %}
                                            {# jinja does not support list comprehension ... #}
                                            {% set myentries = [] %}
                                            {% for op in query_mod.VALID_QUERY_OPERATORS[spec[field]] %}
                                                {% if field not in choices
                                                        or op in query_mod.SELECTION_VALUE_OPERATORS %}
                                                    {{ myentries.append((op.value, OPERATOR_LABELS[op.value]))|e }}
                                                {% endif %}
                                            {% endfor %}
                                            {{ input_select(name, entries=myentries, nulloption=True,
                                                            aclass='form-control input-sm filter-op', anid=theid) }}
                                        {% endwith %}
                                    {% endwith %}
                                </td>
                                <td>
                                    {% with name = "qval_{}".format(field) %}
                                        {% if spec[field] == 'bool' %}
                                            {# Boolean fields are the only ones that don't need a text input field,
                                               for none of their filter operators. So we can provide a select box
                                               for none-javascript users. #}
                                            {{ input_select(name, anid="qinput_{}".format(field),
                                                    aclass='form-control input-sm filter-value',
                                                    entries=(('',''),(True, 'ja'),(False, 'nein'))) }}
                                        {% else %}
                                            {{ input_text(name, anid="qinput_{}".format(field),
                                                    aclass='form-control input-sm filter-value') }}
                                        {% endif %}
                                        {{ output_errors(field, True) }}
                                    {% endwith %}
                                </td>
                            </tr>
                        {% endfor %}
                        </tbody>
                    </table>
                </div>
                <div class="col-lg-5">
                    <table class="query-form-sort table table-superdense">
                        <thead>
                            <tr><th colspan="3">Sortierung</th></tr>
                        </thead>
                        <tbody>
                        {% for title, name in (("1.", "qord_primary"), ("2.", "qord_secondary"),
                                               ("3.", "qord_tertiary"))%}
                            <tr class="query_sort">
                                <td> {{ title|e }} </td>
                                <td>
                                    {# jinja does not support list comprehension ... #}
                                    {% set myentries = [] %}
                                    {% for field in spec %}
                                        {% if ',' not in field %}
                                            {{ myentries.append((field, titles.get(field,field)))|e }}
                                        {% endif %}
                                    {% endfor %}
                                    {{ input_select(name, entries=myentries, nulloption=True,
                                                    aclass="form-control input-sm sort-field" )}}
                                </td>
                                <td>
                                    {{ input_select(name + "_ascending", defaultvalue=True,
                                                    aclass="form-control input-sm sort-order",
                                                    entries=((True, "A→Z"), (False, "Z→A"))) }}
                                </td>
                            </tr>
                        {% endfor %}
                        </tbody>
                    </table>
                </div>
            </div>


            <!-- JS Form -->
            <div class="queryform-js softhide">
                <h4 class="filter-title nosp">{{ make_icon('filter') }} Filter</h4>
                <ul class="list-group list-group-condensed list-group-hover filterfield-list"></ul>
                <div class="input-group has-success queryform-add">
                    <span class="input-group-addon">{{ make_icon('plus') }}</span>
                    <select class="form-control input-sm input-slim addfilter"></select>
                </div>
                <div class="row">
                    <div class="col-sm-6">
                        <h4 class="filter-title">{{ make_icon('eye-open') }} Angezeigte Felder</h4>
                        <p class="viewfield-list"></p>
                        <div class="input-group has-success">
                            <span class="input-group-addon">{{ make_icon('plus') }}</span>
                            <select class="form-control input-sm addviewfield"></select>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <h4 class="filter-title">{{ make_icon('sort-by-alphabet') }} Sortierung</h4>
                        <ul class="list-group list-group-condensed list-group-hover sortfield-list"></ul>
                        <div class="input-group has-success queryform-add">
                            <span class="input-group-addon">{{ make_icon('plus') }}</span>
                            <select class="form-control input-sm addsortfield"></select>
                        </div>
                    </div>
                </div>
            </div>

            <p class="pull-right nosp">
                <button type="submit" class="btn btn-primary">{{ make_icon('search') }} Suche</button>
                <span class="btn-group">
                    <button type="submit" class="btn btn-default" name="download" value="csv">
                        {{ make_icon('download') }} CSV-Datei
                    </button>
                    <button type="submit" class="btn btn-default" name="download" value="json">
                        {{ make_icon('download') }} JSON-Datei
                    </button>
                </span>
            </p>
            {{ output_errors('query') }}
        </form>
        <script type="text/javascript">
            $('#queryform').cdedbQueryForm({"choices" : {{ choices|json }}});
        </script>
    {% endwith %}
    {% endcall %}
{% endmacro %}

{% macro place_default_queries(target, queries, titles, title="Standardabfragen") %}
    {% if queries %}
        {% call bootstrap_panel(title=title) %}
            <div class="row">
                {% for list in queries | slice(2) %}
                <div class="col-sm-6">
                    <ul>
                        {% for query in list %}
                            <li>
                                {{ href(cdedblink(target, queries[query]|querytoparams),
                                        titles.get(query, query), aclass="default-query") }}
                            </li>
                        {% endfor %}
                    </ul>
                </div>
                {% endfor %}
            </div>
        {% endcall %}
        <script type="text/javascript">
            $('.default-query').each(function(){
                var url = $(this).attr('href');
                var $link = $('<a></a>', {'href':'#',
                                          'title':'im Formular anzeigen',
                                          'aria-label':'im Formular anzeigen',
                                          'class': 'btn btn-default btn-xs'})
                    .append($('<span></span>',{'class':'glyphicon glyphicon-eye-open', 'aria-hidden':'true'}))
                    .click(function(){
                        $('#queryform').data('cdedbQueryForm').queryFromURL(url);
                        return false;
                    });
                $(this).after($link).after(' ');
            });
        </script>
    {% endif %}
{% endmacro %}

{% macro display_query_result(result, query, titles, choices) %}
    {% if not result|length %}
        Keine Ergebnisse!
    {% else %}
        <script type="text/javascript">
            $(function(){
                $('.ls-list').cdedbListSelect();
                $('#btn-select-all').click(function(){
                    $('#query-result').data('listSelect').selectAll();
                });
                $('#btn-select-none').click(function(){
                    $('#query-result').data('listSelect').selectNone();
                });
                $('#btn-select-swap').click(function(){
                    $('#query-result').data('listSelect').invertSelection();
                });
                $('#btn-select-filter').click(function(){
                    var list = [];
                    $('#query-result').find('.ls-selected').each(function(){
                        list.push($(this).attr('data-id'));
                    });
                    if (list.length == 0)
                        return;
                    $('#queryform').data('cdedbQueryForm').setIdFilter(list);
                    $('#queryform').submit();
                });
                $('#result-container').cdedbMoveToWidePage($('.btn-trigger-wide'));
                $('#js-button-group').show();
            });
        </script>
        <div class="p softhide" id="js-button-group">
            <div class="btn-group">
                <button type="button" class="btn btn-sm btn-info" title="Alle auswählen" id="btn-select-all">
                    {{ make_icon('check') }} <span class="hidden-xs">alle</span>
                </button>
                <button type="button" class="btn btn-sm btn-info" title="Keines auswählen" id="btn-select-none">
                    {{ make_icon('unchecked') }} <span class="hidden-xs">keines</span>
                </button>
                <button type="button" class="btn btn-sm btn-info" title="Auswahl umkehren" id="btn-select-swap">
                    {{ make_icon('expand') }} <span class="hidden-xs">umkehren</span>
                </button>
            </div>
            <button type="button" class="btn btn-sm btn-info" title="Filter auf ausgewählte setzen"
              id="btn-select-filter">
                {{ make_icon('share') }} <span class="hidden-xs">nur ausgewählte</span>
            </button>
            <button type="button" class="btn btn-sm btn-trigger-wide" title="Tabelle breiter darstellen">
                {{ make_icon('resize-horizontal') }}
            </button>
        </div>
        <div class="table-container" id="result-container">
        <table class="table table-condensed table-hover ls-list" id="query-result">
            <thead>
                <tr>
                    <th></th>
                    {% for csvfield in query.fields_of_interest %}
                        {% for field in csvfield.split(',') %}
                            <th>
                                {{ titles.get(field, field) }}
                                {% if values.get("qop_{}".format(field)) %}
                                    <span class="label label-default" title="Gefilterte Spalte">
                                        {{ make_icon('filter') }}
                                    </span>
                                {% endif %}
                                {% if values.get("qord_primary") == field or
                                        values.get("qord_secondary") == field or
                                        values.get("qord_tertiary") == field %}
                                    <span class="label label-default" title="Sortierte Spalte">
                                        {{ make_icon('sort-by-alphabet') }}
                                    </span>
                                {% endif %}
                            </th>
                        {% endfor %}
                    {% endfor %}
                </tr>
            </thead>
            <tbody>
            {% for row in result %}
                {% set outerloopindex = loop.index0 %}
                <tr class="ls-item" data-id="{{ row[query_mod.QUERY_PRIMARIES[query.scope].split('.')[-1]]|e }}">
                    <td>
                        {{ input_checkbox("row_{}".format(outerloopindex), anid="row_{}".format(outerloopindex),
                                          aclass="rowSelector") }}
                    </td>
                    {% for csvfield in query.fields_of_interest %}
                        {% for field in csvfield.split(',') %}
                            {# NOTE that we split off any possible schema specification since they're not preserved
                                    by the query #}
                            {% with afield = field.split('.')[-1] %}
                                <td>
                                    {% if field == "personas.id" or (query.scope == "qview_persona"
                                                                     and field == "id") %}
                                        {{ href(show_user_link(row[afield]), row[afield]|cdedbid,
                                                aclass='nowrap') }}
                                    {% elif field == "reg.id" %}
                                        {# This should occur only if the context allows the following link. #}
                                        {{ href(cdedblink("event/show_registration",
                                                {'registration_id': row[afield]}), row[afield]) }}
                                    {% elif query.spec[csvfield] == "bool" %}
                                        {{ deko_checkbox(row.get(afield), titles=('falsch','wahr')) }}
                                    {% else %}
                                        {{ choices.get(csvfield, {}).get(row.get(afield),
                                                                         row.get(afield, "UNDEFINED"))|e }}
                                    {% endif %}
                                    {{ input_hidden("row_{}_{}".format(outerloopindex, afield), row.get(afield),
                                                    anid="row_{}_{}".format(outerloopindex, afield)) }}
                                </td>
                            {% endwith %}
                        {% endfor %}
                    {% endfor %}
                </tr>
            {% endfor %}
            </tbody>
        </table>
        </div>
    {% endif %}
{% endmacro %}

{% macro event_field_input(fields, name='', label='', info='', displayerrors=True, readonly=False, defaultvalue='',
                           anid='') %}
    {% if not name %}
        {% set name = "fields.{}".format(fields['field_name']) %}
    {% endif %}
    {% if not label %}
        {% set label = fields['field_name'] %}
    {% endif %}
    {% if fields['entries'] %}
        {# jinja does not support list comprehension ... #}
        {% set myentries = [] %}
        {% for value, description in fields['entries'] %}
            {{ myentries.append((value, description))|e }}
        {% endfor %}
        {{ form_input_select(name=name, label=label, entries=myentries, nulloption=True,
                        readonly=readonly, defaultvalue=defaultvalue, anid=anid) }}
   {% else %}
        {% if fields['kind'] == "bool" %}
            {{ form_input_checkbox(name=name, label=label, readonly=readonly, defaultvalue=defaultvalue, anid=anid) }}
        {% elif fields['kind'] == "str" %}
            {{ form_input_textarea(name=name, label=label, displayerrors=displayerrors, readonly=readonly,
                              defaultvalue=defaultvalue, anid=anid, rows=5) }}
        {% else %}
            {{ form_input_text(name=name, label=label, displayerrors=displayerrors, readonly=readonly,
                          defaultvalue=defaultvalue, anid=anid) }}
        {% endif %}
   {% endif %}
{% endmacro %}

{% macro tab_event_field_input(fields, name='', label='', info='', displayerrors=True, readonly=False,
                               defaultvalue='', anid='') %}
    {% if not name %}
        {% set name = "fields.{}".format(fields['field_name']) %}
    {% endif %}
    {% if not label %}
        {% set label = fields['field_name'] %}
    {% endif %}
    {% if fields['entries'] %}
        {# jinja does not support list comprehension ... #}
        {% set myentries = [] %}
        {% for value, description in fields['entries'] %}
            {{ myentries.append((value, description))|e }}
        {% endfor %}
        {{ form_input_select(name=name, label=label, entries=myentries, nulloption=True,
                            readonly=readonly, defaultvalue=defaultvalue, anid=anid) }}
   {% else %}
        {% if fields['kind'] == "bool" %}
            {{ form_input_checkbox(name=name, label=label, readonly=readonly, defaultvalue=defaultvalue, anid=anid) }}
        {% elif fields['kind'] == "str" %}
            {{ form_input_textarea(name=name, label=label, displayerrors=displayerrors, readonly=readonly,
                                  defaultvalue=defaultvalue, anid=anid, rows=5) }}
        {% else %}
            {{ form_input_text(name=name, label=label, displayerrors=displayerrors, readonly=readonly,
                              defaultvalue=defaultvalue, anid=anid) }}
        {% endif %}
   {% endif %}
{% endmacro %}

{% macro breadcrumb_link(ref, label, icon="", active=False) %}
    {%- if active -%}
        <li class="active">
            {%- if icon %}{{ make_icon(icon) }} {% endif %}{{ label|e -}}
        </li>
    {%- else -%}
        <li><a href="{{ ref|e }}">
                {%- if icon %}{{ make_icon(icon) }} {% endif %}{{ label|e -}}
        </a></li>
    {%- endif -%}
{% endmacro %}

{% macro bootstrap_panel(title="", aclass="panel-default", icon="") %}
    <div class="panel {{ aclass|e }}">
        {% if title or icon %}
            <div class="panel-heading">
                <h3 class="panel-title">{% if icon %}{{ make_icon(icon) }} {% endif %}{{ title|e }}</h3>
            </div>
        {% endif %}
        <div class="panel-body">
            {{ caller() }}
        </div>
    </div>
{% endmacro %}

{% macro output_given_displayname(given_names, display_name) %}
    {% if display_name in given_names %}
        {% if not display_name or display_name == given_names %}
            {{ given_names|e }}
        {% else %}
            {{ '<em>{}</em>'.format(display_name|e).join((given_names|e).split(display_name|e)) }}
        {% endif %}
    {% else %}
        {{ given_names|e }} ({{ display_name|e }})
    {% endif %}
{% endmacro %}
