{% set sidenav_active='ml_index' %}
{% extends "web/ml/base.tmpl" %}
{% import "web/util.tmpl" as util with context %}
{% block title %}
    {% trans -%}
        Global Consistency-Check
    {%- endtrans %}
{% endblock %}
{% block breadcrumb %}
{{ super() }}
{{ util.breadcrumb_link(cdedblink("ml/global_check_states"), gettext("Global Consistency-Check"), active=True) }}
{% endblock %}
{% block heading %}
    <h1 class="title">{% trans -%}Global Consistency-Check{%- endtrans %}</h1>
{% endblock %}
{% block content %}
    {% for mailinglist_id, title in mailinglists|dictsort %}
        <h2>{{ title }}</h2>
        <h3>{% trans -%}Problematic Subscribers{%- endtrans %}</h3>
        {% if not problems[mailinglist_id] %}
            {% trans -%}All subscribers belong to the configured audience.{%- endtrans %}
        {% else %}
            {% trans -%}The following subscribers do not belong to the configured audience.{%- endtrans %}
            <ul>
                {% for problem in problems[mailinglist_id]|sort %}
                    <li>
                        {{ util.persona_anchor(personas[problem], ml_id=mailinglist_id) }}
                        <form action="{{ cdedblink('ml/remove_subscriber', {'mailinglist_id': mailinglist_id}) }}" method="POST"
                                id="removeproblemform{{ problem }}" style="display: inline;">
                            {{ util.input_hidden(name="subscriber_id", value=problem) }}
                            {{ util.input_submit(value='', aclass="btn btn-xs btn-danger", icon="minus",
                                    title=gettext("Remove {given_names} {family_name} as subscriber").format(
                                        given_names=personas[problem]['given_names'],
                                        family_name=personas[problem]['family_name'])) }}
                        </form>
                        <form action="{{ cdedblink('ml/mark_override', {'mailinglist_id': mailinglist_id}) }}" method="POST"
                                id="markoverrideform{{ problem }}" style="display: inline;">
                            {{ util.input_hidden(name="subscriber_id", value=problem) }}
                            {{ util.input_submit(value='', aclass="btn btn-xs btn-success", icon="flag",
                                    title=gettext("Mark {given_names} {family_name} as an exception.").format(
                                        given_names=personas[problem]['given_names'],
                                        family_name=personas[problem]['family_name'])) }}
                        </form>
                    </li>
                {% endfor %}
            </ul>
        {% endif %}
        {% if overrides[mailinglist_id] %}
            <h3>{% trans -%}Exceptions{%- endtrans %}</h3>
            {% trans -%}
                The following subscribers do not belong to the configured audience, but were marked as exceptions.
            {%- endtrans %}
            <ul>
                {% for problem in overrides[mailinglist_id]|sort %}
                    <li>
                        {{ util.persona_anchor(personas[problem], ml_id=mailinglist_id) }}
                        <form action="{{ cdedblink('ml/remove_subscriber', {'mailinglist_id': mailinglist_id}) }}" method="POST"
                                id="removeproblemform{{ problem }}" style="display: inline;">
                            {{ util.input_hidden(name="subscriber_id", value=problem) }}
                            {{ util.input_submit(value='', aclass="btn btn-xs btn-danger", icon="minus",
                                    title=gettext("Remove {given_names} {family_name} as subscriber").format(
                                        given_names=personas[problem]['given_names'],
                                        family_name=personas[problem]['family_name'])) }}
                        </form>
                    </li>
                {% endfor %}
            </ul>
        {% endif %}
    {% endfor %}
{% endblock %}
