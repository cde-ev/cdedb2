{% if ambience['mailinglist'] %}
    {% set sidenav_active='ml_change' %}
{% else %}
    {% set sidenav_active='ml_index' %}
{% endif %}
{% extends "web/ml/base.tmpl" %}
{% import "web/util.tmpl" as util with context %}
{% block scripts %}
    {{ util.cdedb_script('cdedb_helper.js') }}
    {{ util.cdedb_script('cdedb_change_mailinglist.js') }}
    {{ util.cdedb_script('cdedb_searchpersona.js') }}
{% endblock %}
{% set jshint='strong' %}
{% block title %}
    {% if ambience['mailinglist'] %}
        {% trans title=ambience['mailinglist']['title'] %}
            {{ title }} – Configuration
        {% endtrans %}
    {% else %}
        {% trans %}Create Mailinglist{% endtrans %}
    {% endif %}
{% endblock %}
{% block breadcrumb %}
    {{ super() }}
    {% if ambience['mailinglist'] %}
        {% if is_admin %}
            {{ util.breadcrumb_link(cdedblink("ml/list_mailinglists"), gettext("All Mailinglists")) }}
        {% endif %}
        {{ util.breadcrumb_link(cdedblink("ml/show_mailinglist"), ambience['mailinglist']['title'], icon="envelope") }}
        {{ util.breadcrumb_link(cdedblink("ml/change_mailinglist"), gettext("Configuration"), active=True) }}
    {% else %}
        {{ util.breadcrumb_link(cdedblink("ml/create_mailinglist"), gettext("Create Mailinglist"), active=True) }}
    {% endif %}
{% endblock %}
{% block heading %}
    {% if ambience['mailinglist'] %}
        {{ util.context_heading(gettext("Configuration"), ambience['mailinglist']['title'], 'envelope',
                                gettext("Mailinglist")) }}
    {% else %}
        {{ util.context_heading(gettext("Create Mailinglist")) }}
    {% endif %}
{% endblock %}
{% block static_notifications %}
    {% if ambience['mailinglist'] %}
        {% if restricted %}
            {% call util.notification('info') %}
                {% trans link = util.href(docurl("Handbuch_Moderator", anchor="eingeschränkte-moderatoren"),
                                          gettext("restricted moderator access"))|s %}
                    You only have %(link)s and may not change subscriptions.
                {% endtrans %}
                {% trans %}
                    Some fields may only be changed by admins.
                {% endtrans %}
            {% endcall %}
        {% elif not is_relative_admin %}
            {% call util.notification('info') %}
                {% trans %}
                    Some fields may only be changed by admins.
                {% endtrans %}
            {% endcall %}
        {% endif %}

        {% call util.notification('info') %}
            {% trans %}
                Note that every change can take up to 15 minutes to take effect.
            {% endtrans %}
        {% endcall %}
    {% else %}
        {% call util.notification('info') %}
            {% trans %}
                Note that mailinglist creation can take up to 15 minutes to take effect.
            {% endtrans %}
        {% endcall %}
    {% endif %}
{% endblock %}
{% block content %}
    {% if not ambience['mailinglist'] and ml_type is none %}
        <form action="{{ cdedblink('ml/create_mailinglist_form') }}" method="GET" id="selectmltypeform"
              class="form-horizontal">
            {{ util.form_input_select(name="ml_type", label=gettext("Mailinglist Type"),
                                      entries=available_types|enum_entries(processing=gettext)) }}
            {{ util.form_input_submit(label=gettext("Continue"), cancellink=cdedblink("ml/index"),
                                      icon="chevron-right") }}
        </form>
    {% else %}
        {% if ambience['mailinglist'] %}
            {% set target = 'ml/change_mailinglist' %}
        {% else %}
            {% set target = 'ml/create_mailinglist' %}
        {% endif %}
        <form action="{{ cdedblink(target) }}" method="POST" id="configuremailinglistform" class="form-horizontal">
            {{ util.anti_csrf_token(target) }}


            <h3 class="heading-underline">{% trans %}Meta{% endtrans %}</h3>
            {{ util.form_input_checkbox(
                 name="is_active", label=gettext("Active"), actualreadonly=readonly, defaultvalue='True') }}
            {{ util.form_input_text(name="title", label=gettext("Title_[[name of an entity]]"),
                                    actualreadonly=readonly) }}

            {% set addon = "@" %}
            {% if ambience['mailinglist'] %}
                {% set addon = addon + enums['MailinglistDomain'](ambience['mailinglist']['domain']).display_str() %}
            {% endif %}
            {{ util.form_input_text(
                name="local_part", label=gettext("Address"), actualreadonly=readonly, addon=addon) }}
            {{ util.form_input_select(
                name="domain", label=gettext("Domain"), actualreadonly=readonly,
                entries=available_domains|enum_entries(prefix="@")) }}

            {{ util.form_input_textarea(name="description", label=gettext("Description"), rows="5", markdown=True) }}
            {{ util.form_input_textarea(name="notes", label=gettext("Admin Notes"), rows="5", markdown=True) }}


            <h3 class="heading-underline">{% trans %}Moderation & Subscribers{% endtrans %}</h3>
            {{ util.form_input_select(name="mod_policy", label=gettext("Moderation"),
                                      entries=enums['ModerationPolicy']|enum_entries(processing=gettext)) }}

            {# Needed for the javascript stuff to work #}
            {% if ambience['mailinglist'] %}
                {% set ml_type = ambience['mailinglist'].ml_type %}
            {% endif %}
            {{ util.input_hidden(name="ml_type", value=ml_type) }}
            {% if not ambience['mailinglist'] or readonly %}
                {{ util.form_input_static(
                    label=gettext("Mailinglist Type"),
                    value=gettext(enums['MailinglistTypes'](ml_type)|string)) }}
            {% else %}
                {{ util.form_input_static(
                    label=gettext("Mailinglist Type"),
                    value=
                        gettext(enums['MailinglistTypes'](ml_type)|string + ' '
                        + util.href(cdedblink('ml/change_ml_type'), gettext("Change Type"),
                                    aclass="btn btn-warning btn-xs", icon="pen"))) }}
            {% endif %}

            {{ util.form_input_select(
                name="roster_visibility", label=gettext("Roster Visibility"),
                entries=enums["MailinglistRosterVisibility"]|enum_entries(
                        processing=gettext), actualreadonly=readonly) }}

            {% if 'event_id' in additional_fields %}
                {{ util.form_input_select(
                    name="event_id", label=gettext("Event"), nulloption='',
                    entries=events.values()|sort|entries('id', 'title'), actualreadonly=readonly,
                    info=gettext("The participants of this event will be subscribers of"
                                 " this mailinglist. (Opt-Out)")) }}
            {% endif %}

            {% if 'registration_stati' in additional_fields %}
                {{ util.form_input_checkboxes(
                    name="registration_stati", label=gettext("Event Audience"), actualreadonly=restricted,
                    entries=enums['RegistrationPartStati']|enum_entries(processing=gettext),
                    outerclass="event-specific") }}
            {% endif %}

            {% set event_specific_selects = select_input_factory(values.get('event_id')|int) %}
            {% if 'event_part_id' in additional_fields %}
                <div class="event-specific" id="event-part-id-container">
                    {{ event_specific_selects['event_part_id']|s }}
                </div>
            {% endif %}
            {% if 'event_part_group_id' in additional_fields %}
                <div class="event-specific" id="event-part-group-id-container">
                    {{ event_specific_selects['event_part_group_id']|s }}
                </div>
            {% endif %}

            {% if 'assembly_id' in additional_fields %}
                {{ util.form_input_select(
                    name="assembly_id", label=gettext("Assembly"), nulloption=nbsp,
                    actualreadonly=readonly, entries=assembly_entries,
                    info=gettext("The participants of this assembly will be subscribers"
                                 " of this mailinglist. (Opt-Out)")) }}
            {% endif %}

            {% if not ambience['mailinglist'] %}
                <h3 class="heading-underline">{% trans %}Moderators{% endtrans %}</h3>
                {{ util.form_input_text(
                    name="moderators", label=gettext("Moderators"), placeholder="DB-XXXX-X,DB-XXXX-X,…",
                    anid="input-moderators") }}

                <script nonce="{{ csp_nonce }}">
                    $('#input-moderators').cdedbSearchPerson(
                        '{{ cdedblink('core/select_persona') }}', {'kind': 'ml_user'},
                        [],
                        false,
                        true,
                        "{{ gettext("CdEDB-ID, Name or E-Mail") }}"
                    );
        </script>
            {% endif %}

            <h3 class="heading-underline">{% trans %}Mails{% endtrans %}</h3>
                {{ util.form_input_text(
                    name="subject_prefix", label=gettext("Subject Prefix"),
                    info=gettext('Example: If the subject prefix is set to "info" and a user sends a Mail with'
                                 ' subject "Invitation to PfingstAka", the mail will be sent to the recipients as'
                                 ' "[info] Invitation to PfingstAka".')) }}
                {{ util.form_input_select(name="attachment_policy", label=gettext("MIME filter / Attachments"),
                                          entries=enums['AttachmentPolicy']|enum_entries(processing=gettext)) }}
                {{ util.form_input_checkbox(
                    name="convert_html", defaultvalue='True',
                    label=gettext("Automatically convert HTML emails to plaintext"),
                    info=gettext("Disable this in cases of lists with external correspondence (e.g. business emails)"
                                 " as there are actors causing problems with malformed emails.")) }}
                {{ util.form_input_text(name="maxsize", label=gettext("max. message size (in kB)"), type="number",
                                        defaultvalue=maxsize_default,
                                        info=gettext("Larger messages will be held for moderation.")) }}
                {{ util.form_input_textarea(name="additional_footer", label=gettext("Additional Footer"), rows="5") }}
                {{ util.form_input_submit(
                    label=gettext("Save") if ambience['mailinglist'] else gettext("Create"),
                    cancellink=cdedblink('ml/show_mailinglist' if ambience['mailinglist'] else 'ml/index')) }}
        </form>

        <script nonce="{{ csp_nonce }}">
            $('#configuremailinglistform')
                .cdedbProtectChanges()
                .cdedbConfigureMailinglist(
                    '{{ cdedblink('ml/change_mailinglist_form_print_event_specific_select_input') }}',
                    '{{ gettext("Preview: %(preview)sMail Subject Here")|format(
                            preview='<span id="subject-prefix-preview"></span>')|s }}'
                );
        </script>
    {% endif %}
{% endblock %}
