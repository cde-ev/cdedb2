{% set sidenav_active='ml_manage' %}
{% extends "web/ml/base.tmpl" %}
{% import "web/util.tmpl" as util with context %}
{% block scripts %}
    {{ util.cdedb_script('cdedb_searchpersona.js') }}
    {{ util.cdedb_script('cdedb_helper.js') }}
{% endblock %}
{% set jshint='strong' %}
{% block title %}
    {% trans title=ambience['mailinglist']['title'] %}{{ title }} – Management
    {% endtrans %}
{% endblock %}
{% block breadcrumb %}
    {{ super() }}
    {% if is_admin %}
        {{ util.breadcrumb_link(cdedblink("ml/list_mailinglists"), gettext("All Mailinglists")) }}
    {% endif %}
    {{ util.breadcrumb_link(cdedblink("ml/show_mailinglist"), ambience['mailinglist']['title'], icon="envelope") }}
    {{ util.breadcrumb_link(cdedblink("ml/management"), gettext("Management"), active=True) }}
{% endblock %}
{% block heading %}
    {{ util.context_heading(gettext("Manage Mailinglist"), ambience['mailinglist']['title'],
                            'envelope', gettext("Mailinglist")) }}
{% endblock %}
{% block static_notifications %}
    {% if restricted %}
        {% call util.notification('info') %}
            {% trans link = util.href(docurl("Handbuch_Moderator", anchor="eingeschränkte-moderatoren"),
                                      gettext("restricted moderator access"))|s %}
                You only have %(link)s and may not change subscriptions.
            {% endtrans %}
        {% endcall %}
    {% endif %}
{% endblock %}
{% block content %}
    <p class="text-info">
        {{ util.make_icon('info-circle') }}
        {% trans %}
            Note that every change can take up to 15 minutes to take effect.
        {% endtrans %}
    </p>

    <div class="row">
        <div class="col-md-6">
            <h2>{% trans %}Moderators{% endtrans %} [{{ ambience['mailinglist']['moderators']|length }}]</h2>
                <p class="text-muted">
                {{ util.make_icon('info-circle') }}
                    {% trans %}
                        Only users can be moderators.
                    {% endtrans %}
                </p>
            <form action="{{ cdedblink('ml/add_moderators') }}" method="POST"
                  id="addmoderatorform" class="p">
                {{ util.anti_csrf_token('ml/add_moderators') }}
                <div class="input-group has-success">
                    <span class="input-group-addon">{{ util.make_icon('plus') }}</span>
                    {{ util.input_text(name="moderators", anid="input-add-moderator",
                                       placeholder="DB-XXXX-X,DB-XXXX-X,…",
                                       arialabel=gettext("IDs of the new moderators")) }}
                    <script nonce="{{ csp_nonce }}">
                        $('#input-add-moderator').cdedbSearchPerson(
                            '{{ cdedblink('core/select_persona') }}', {'kind': 'ml_user'},
                            {{ ambience['mailinglist']['moderators']|list|tojson }},
                            false, true, "{{ gettext("CdEDB-ID, Name or E-Mail") }}"
                        );
                    </script>
                    <div class="input-group-btn">
                        {{ util.input_submit(label=gettext("Add"), aclass="btn btn-success") }}
                    </div>
                </div>
                {{ util.output_errors('moderators', wrapper=True) }}
            </form>

            <ul class="slim" id="moderator-list">
                {% for moderator, persona in moderators.items() %} {# This is already sorted. #}
                    <li class="hide-hover-container clearfix-after">
                        {{ util.persona_anchor(persona, ml_id=ambience['mailinglist']['id']) }}
                        {% if is_relevant_admin(mailinglist_id=ambience['mailinglist']['id']) or moderator != user.persona_id %}
                            <form action="{{ cdedblink('ml/remove_moderator') }}"
                                  method="POST"
                                  id="removemoderatorform{{ moderator }}"
                                  class="hide-hover display-inline">
                                {{ util.anti_csrf_token('ml/remove_moderator') }}
                                {{ util.input_hidden(name="moderator_id", value=moderator) }}
                                {{ util.input_submit(label='', aclass="btn btn-xs btn-danger list-button-float", icon="minus",
                                        title=gettext("Remove %(name)s as moderator")|format(
                                            name=util.persona_name(persona))|s) }}
                            </form>
                        {% else %}
                            {{ util.input_submit(label="", aclass="btn btn-xs btn-danger list-button-float dummy", icon="minus", ariahidden=True) }}
                        {% endif %}
                    </li>
                {% endfor %}
            </ul>
        </div>

        <div class="col-md-6">
            <h2>{% trans %}Subscription Requests{% endtrans %}</h2>
                <p class="text-muted">
                    {{ util.make_icon('info-circle') }}
                    {% trans %}
                        Subscription Requests of other users to this mailinglist.
                    {% endtrans %}
                </p>
            {# TODO Restyle #}
            {% if requests|length > 0 %}
                <ul class="slim" id="pending-list">
                    {% for request, persona in requests.items() %} {# This is already sorted. #}
                        <li class="hide-hover-container clearfix-after">
                            {{ util.persona_anchor(persona, ml_id=ambience['mailinglist']['id']) }}
                            {% if not restricted %}
                            <form action="{{ cdedblink('ml/handle_request') }}"
                                  method="POST"
                                  id="handlerequestform{{ request }}"
                                  class="hide-hover display-inline pull-right">
                                    {{ util.anti_csrf_token('ml/handle_request') }}
                                    {{ util.input_hidden(name="persona_id", value=request) }}
                                <div class="btn-group">
                                    {% for action, label, icon, coloring in (
                                            ('accept', gettext('Accept'), 'check', 'success'),
                                            ('reject', gettext('Reject'), 'times-circle', 'danger'),
                                            ('block', gettext('Block'), 'ban', 'danger')) %}
                                        {{ util.input_submit(label=label, value=action, name="action", icon=icon,
                                                             aclass="btn btn-xs btn-" + coloring) }}
                                    {% endfor %}
                                </div>
                            </form>
                            {% endif %}
                        </li>
                    {% endfor %}
                </ul>
            {% else %}
                <p>{% trans %}
                    There are currently no Subscription Requests pending.
                {% endtrans %}</p>
            {% endif %}
        </div>
    </div>

    <h2>{% trans %}Subscribers{% endtrans %} [{{ subscribers|length }}]</h2>
        <p class="text-muted">
            {{ util.make_icon('info-circle') }}
            {% trans link = util.href(cdedblink('ml/advanced_management'), label=gettext("advanced management")) %}
                Forced subscribers cannot be unsubscribed; blocked subscribers cannot be subscribed here.
                Use the {{ link }} site instead. People who are already subscribed are not proposed for adding.
            {% endtrans %}
        </p>
    {% if not restricted %}
    <form action="{{ cdedblink('ml/add_subscribers') }}" method="POST"
          id="addsubscriberform" class="p">
        {{ util.anti_csrf_token('ml/add_subscribers') }}
        <div class="input-group has-success">
            <span class="input-group-addon">{{ util.make_icon('plus') }}</span>
            {{ util.input_text(name="subscriber_ids", placeholder="DB-XXXX-X,DB-XXXX-X,…", anid="input-add-subscriber",
                               arialabel=gettext("ID of the new Subscriber")) }}
            <script nonce="{{ csp_nonce }}">
                $('#input-add-subscriber').cdedbSearchPerson(
                    '{{ cdedblink('core/select_persona') }}',
                    {{ {'kind': 'ml_subscriber', 'aux': ambience['mailinglist']['id']}|tojson }},
                    {{ subscribers|list|tojson }},
                    false, true, '{{ gettext("CdEDB-ID, Name or E-Mail") }}'
                );
            </script>
            <div class="input-group-btn">
                {{ util.input_submit(label=gettext("Add"), aclass="btn btn-success") }}
            </div>
        </div>
        {{ util.output_errors('subscriber_ids', wrapper=True) }}
    </form>
    {% endif %}

    <div class="row" id="subscriber-list">
        {% for list in subscribers | slice(3 if subscribers|length > 10 else (2 if subscribers|length > 5 else 1)) %}
            <div class="col-sm-6"> {# narrow width also for non-sliced list to visually match removal buttons in line #}
                <ul class="nosp slim">
                    {% for subscriber in list %}
                        <li class="hide-hover-container clearfix-after">
                            {{ util.persona_anchor(subscribers[subscriber], ml_id=ambience['mailinglist']['id']) }}
                            {% if subscriber in explicits %}({{ explicits[subscriber] }}){% endif %}
                            {% if not restricted and allow_unsub %}
                                <form action="{{ cdedblink('ml/remove_subscriber') }}"
                                      method="POST"
                                      id="removesubscriberform{{ subscriber }}"
                                      class="hide-hover display-inline">
                                    {{ util.anti_csrf_token('ml/remove_subscriber') }}
                                    {{ util.input_hidden(name="subscriber_id", value=subscriber) }}
                                    {{ util.input_submit(label="", icon="minus", aclass="btn btn-xs btn-danger list-button-float",
                                            title=gettext("Remove %(name)s as subscriber")|format(
                                                name=util.persona_name(subscribers[subscriber]))|s) }}
                                </form>
                            {% endif %}
                        </li>
                    {% endfor %}
                </ul>
            </div>
        {% endfor %}
    </div>
{% endblock %}
