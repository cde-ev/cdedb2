{% set sidenav_active='ml_details' %}
{% extends "web/ml/base.tmpl" %}
{% import "web/util.tmpl" as util with context %}
{% block scripts %}
    {% if privileged %}
        {{ util.cdedb_script('cdedb_searchpersona.js') }}
        {{ util.cdedb_script('cdedb_helper.js') }}
    {% endif %}
{% endblock %}
{% if privileged %}
    {% set jshint='strong' %}
{% endif %}
{% block title %}
    {% trans title=ambience['mailinglist']['title'] %}{{ title }} – Advanced Management
    {% endtrans %}
{% endblock %}
{% block breadcrumb %}
    {{ super() }}
    {% if is_admin %}
        {{ util.breadcrumb_link(cdedblink("ml/list_mailinglists"), gettext("All Mailinglists")) }}
    {% endif %}
    {{ util.breadcrumb_link(cdedblink("ml/show_mailinglist"), ambience['mailinglist']['title'], icon="envelope") }}
    {{ util.breadcrumb_link(cdedblink("ml/show_subscription_details"), gettext("Advanced Management"), active=True) }}
{% endblock %}
{% block heading %}
    <h1 class="title">
        {% trans %}Advanced Management{% endtrans %}
        <small>{{ util.make_icon('envelope') }} {{ ambience['mailinglist']['title'] }}</small>
    </h1>
{% endblock %}
{% block static_notifications %}
    {% if not privileged %}
        {% call util.notification('info') %}
            {% trans link = util.href(docurl("Handbuch_Moderator", anchor="privilegierte-moderatoren"),
                                      gettext("privileged moderator access"))|s %}
                You do not have %(link)s and may not change subscriptions.
            {% endtrans %}
        {% endcall %}
    {% endif %}
{% endblock %}
{% block content %}
    <div class="row">
        <div class="col-md-6">
            <h2>{% trans %}Forced Subscribers{% endtrans %} [{{ subscription_overrides|length }}]</h2>
                <p class="text-muted">
                    {{ util.make_icon('info-circle') }}
                    {% trans %}
                        Subscribed users who are protected from automatic unsubscription when loosing their means to acces the list.
                    {% endtrans %}
                </p>
            {% if privileged %}
            <form action="{{ cdedblink('ml/add_subscription_overrides') }}" method="POST"
                  id="addmodsubscriberform" class="p">
                {{ util.anti_csrf_token('ml/add_subscription_overrides') }}
                <div class="input-group has-success">
                    <span class="input-group-addon">{{ util.make_icon('plus') }}</span>
                    {{ util.input_text(name="modsubscriber_ids", anid="input-add-forced", placeholder="DB-XXXX-X,DB-XXXX-X,…",
                                       arialabel=gettext("ID of the new forced subscriber")) }}
                    <script nonce="{{ csp_nonce }}">
                        $('#input-add-forced').cdedbSearchPerson(
                            '{{ (cdedblink('core/select_persona')|e) + ('?kind=ml_user&phrase=%s'|s) }}', {{ subscription_overrides|list|json|s }},
                            false, true, "{{ gettext("ID, name, email") }}"
                        );
                    </script>
                    <div class="input-group-btn">
                        {{ util.input_submit(value=gettext("Add"), aclass="btn btn-success") }}
                    </div>
                </div>
                {{ util.output_errors('modsubscriber_ids', wrapper=True) }}
            </form>
            {% endif %}

            <ul class="slim" id="modsubscriber-list">
                {% for subscription_override, persona in subscription_overrides.items() %} {# This is already sorted. #}
                    <li class="hide-hover-container clearfix-after">
                        {{ util.persona_anchor(persona, ml_id=ambience['mailinglist']['id']) }}
                        {% if privileged %}
                            <form action="{{ cdedblink('ml/remove_subscription_override') }}"
                                  method="POST"
                                  id="removemodsubscriberform{{ subscription_override }}"
                                  class="hide-hover display-inline">
                                {{ util.anti_csrf_token('ml/remove_subscription_override') }}
                                {{ util.input_hidden(name="modsubscriber_id", value=subscription_override) }}
                                {{ util.input_submit(value='', aclass="btn btn-xs btn-danger list-button-float", icon="minus",
                                        title=gettext("Remove %(given_names)s %(family_name)s as forced subscriber")|format(
                                            given_names=persona['given_names'],
                                            family_name=persona['family_name'])) }}
                            </form>
                        {% endif %}
                    </li>
                {% endfor %}
            </ul>
        </div>

        <div class="col-md-6">
            <h2>{% trans %}Blocked Users{% endtrans %} [{{ unsubscription_overrides|length }}]</h2>
                <p class="text-muted">
                    {{ util.make_icon('info-circle') }}
                    {% trans %}
                        Users who are blocked from subscribing and requesting subscription. They can see that they are blocked.
                    {% endtrans %}
                </p>
            {% if privileged %}
            <form action="{{ cdedblink('ml/add_unsubscription_overrides') }}" method="POST"
                  id="addmodunsubscriberform" class="p">
                {{ util.anti_csrf_token('ml/add_unsubscription_overrides') }}
                <div class="input-group has-success">
                    <span class="input-group-addon">{{ util.make_icon('plus') }}</span>
                    {{ util.input_text(name="modunsubscriber_ids", anid="input-add-blocked", placeholder="DB-XXXX-X,DB-XXXX-X,…",
                                       arialabel=gettext("ID of the new blocked subscriber")) }}
                    <script nonce="{{ csp_nonce }}">
                        $('#input-add-blocked').cdedbSearchPerson(
                           '{{ (cdedblink('core/select_persona')|e) + ('?kind=ml_user&phrase=%s'|s) }}', {{ unsubscription_overrides|list|json|s }},
                            false, true, "{{ gettext("ID, name, email") }}"
                        );
                    </script>
                    <div class="input-group-btn">
                        {{ util.input_submit(value=gettext("Add"), aclass="btn btn-success") }}
                    </div>
                </div>
                {{ util.output_errors('modunsubscriber_ids', wrapper=True) }}
            </form>
            {% endif %}

            <ul class="slim" id="modunsubscriber-list">
                {% for unsubscription_override, persona in unsubscription_overrides.items() %} {# This is already sorted. #}
                    <li class="hide-hover-container clearfix-after">
                        {{ util.persona_anchor(persona, ml_id=ambience['mailinglist']['id']) }}
                        {% if privileged %}
                            <form action="{{ cdedblink('ml/remove_unsubscription_override') }}"
                                  method="POST" style="display: inline;"
                                  id="removemodunsubscriberform{{ unsubscription_override }}"
                                  class="hide-hover display-inline">
                                {{ util.anti_csrf_token('ml/remove_unsubscription_override') }}
                                {{ util.input_hidden(name="modunsubscriber_id", value=unsubscription_override) }}
                                {{ util.input_submit(value='', aclass="btn btn-xs btn-danger list-button-float", icon="minus",
                                        title=gettext("Remove %(given_names)s %(family_name)s as blocked subscriber")|format(
                                            given_names=persona['given_names'],
                                            family_name=persona['family_name'])) }}
                            </form>
                        {% endif %}
                    </li>
                {% endfor %}
            </ul>
        </div>
    </div>

    <h2>{% trans %}Whitelist{% endtrans %} [{{ ambience['mailinglist']['whitelist']|length }}]</h2>
        <p class="text-muted">
            {{ util.make_icon('info-circle') }}
            {% trans %}
                Sender addresses that are not moderated.
            {% endtrans %}
        </p>
    <form action="{{ cdedblink('ml/add_whitelist') }}" method="POST"
          id="addwhitelistform" class="p">
        {{ util.anti_csrf_token('ml/add_whitelist') }}
        <div class="input-group has-success">
            <span class="input-group-addon">{{ util.make_icon('plus') }}</span>
            {{ util.input_text(name="email", type="email", placeholder="mail@example.com",
                               arialabel=gettext("Email Address to whitelist")) }}
            <div class="input-group-btn">
                {{ util.input_submit(value=gettext("Add"), aclass="btn btn-success") }}
            </div>
        </div>
        {{ util.output_errors('email', wrapper=True) }}
    </form>
    <div class="row" id="whitelist">
        {% set whitelist = ambience['mailinglist']['whitelist'] %}
        {% set col_width = 6 if whitelist|length > 5 else 12 %}
        {% for list in whitelist | sort | slice(2 if whitelist|length > 5 else 1) %}
            <div class="col-sm-{{ col_width }}">
                <ul class="nosp slim">
                    {% for email in list %} {# This is already sorted. #}
                        <li class="hide-hover-container clearfix-after">
                            {{ email }}
                            <form action="{{ cdedblink('ml/remove_whitelist') }}"
                                method="POST"
                                id="removewhitelistform{{ loop.index }}"
                                class="hide-hover display-inline">
                                {{ util.anti_csrf_token('ml/remove_whitelist') }}
                                {{ util.input_hidden(name="email", value=email) }}
                                {{ util.input_submit(value="", aclass="btn btn-xs btn-danger list-button-float", icon="minus",
                                        title=gettext("Remove %s from Whitelist")|format(email)) }}
                            </form>
                        </li>
                    {% endfor %}
                </ul>
            </div>
        {% endfor %}
    </div>

    {# TODO fix the spacing between whitelist and list of unsubscribers. Nosp in whitelist is required to hide space in mobile #}
    <h2>{% trans %}Unsubscribers{% endtrans %} [{{ all_unsubscriptions|length }}]</h2>
        <p class="nosp text-muted">
            {{ util.make_icon('info-circle') }}
            {% trans %}
                Users who unsubscribed from this list. They will not be re-added automatically, but may be able to subscribe manually.
            {% endtrans %}
        </p>
        <p class="text-danger">
            {{ util.make_icon('exclamation-triangle') }}
            {% trans link=util.href(docurl("Realm_Mailinglist_Management", anchor='explicitly-unsubscribed'), gettext("documentation"), title=gettext("Explicity Unsubscribed State")) %}
                This should only be used as a cleanup for specific tools like the account merger. Consult the {{ link }} for more details.
            {% endtrans %}
        </p>


    <div class="row" id="unsubscriber-list">
        {% set col_width = 4 if all_unsubscriptions|length > 10 else (6 if all_unsubscriptions|length > 5 else 12) %}
        {% for list in all_unsubscriptions | slice(3 if all_unsubscriptions|length > 10 else (2 if all_unsubscriptions|length > 5 else 1)) %}
            <div class="col-sm-{{ col_width }}">
                <ul class="nosp slim">
                    {% for unsubscription in list %} {# This is already sorted. #}
                        <li class="hide-hover-container clearfix-after">
                            {{ util.persona_anchor(all_unsubscriptions[unsubscription], ml_id=ambience['mailinglist']['id'],
                                                   aclass='text-muted' if unsubscription not in redundant_unsubscriptions else '' ) }}
                            {% if "ml_mgmt" in user.admin_views %}
                                {% if unsubscription in redundant_unsubscriptions %}
                                    <form action="{{ cdedblink('ml/reset_unsubscription') }}"
                                          method="POST" style="display: inline;"
                                          id="resetunsubscriberform{{ unsubscription }}"
                                          class="hide-hover display-inline">
                                        {{ util.anti_csrf_token('ml/reset_unsubscription') }}
                                        {{ util.input_hidden(name="unsubscription_id", value=unsubscription) }}
                                        {{ util.input_submit(value='', aclass="btn btn-xs btn-danger list-button-float", icon="trash-alt",
                                                title=gettext("Reset %(given_names)s %(family_name)s explicit unsubscription")|format(
                                                    given_names=all_unsubscriptions[unsubscription]['given_names'],
                                                    family_name=all_unsubscriptions[unsubscription]['family_name'])) }}
                                    </form>
                                {% else %}
                                    <form action="{{ cdedblink('ml/readd_subscriber') }}"
                                          method="POST" style="display: inline;"
                                          id="addsubscriberform{{ unsubscription }}"
                                          class="hide-hover display-inline">
                                        {{ util.anti_csrf_token('ml/readd_subscriber') }}
                                        {{ util.input_hidden(name="subscriber_id", value=unsubscription) }}
                                        {{ util.input_submit(value='', aclass="btn btn-xs btn-success list-button-float", icon="plus",
                                                title=gettext("Subscribe %(given_names)s %(family_name)s")|format(
                                                    given_names=all_unsubscriptions[unsubscription]['given_names'],
                                                    family_name=all_unsubscriptions[unsubscription]['family_name'])) }}
                                    </form>
                                {% endif %}
                            {% else %}
                                {% if unsubscription in redundant_unsubscriptions %}
                                    {{ util.make_icon('broom', aclass="list-button-float", title=gettext("Explicit unsubscribition has currently no effect.")) }}
                                {% else %}
                                    {{ util.make_icon('bell-slash', aclass="list-button-float", title=gettext("User would be implicit subscribed otherwise.")) }}
                                {% endif %}
                            {% endif %}
                        </li>
                    {% endfor %}
                </ul>
            </div>
        {% endfor %}
    </div>

    {% call util.bootstrap_panel(title=gettext("Downloads"), icon="file-download", aclass="panel-default mosp") %}
        <div class="row">
            <div class="col-sm-4">
                <div class="p">
                    {{ util.href(cdedblink('ml/download_csv_subscription_states'), gettext("Overview"), icon='download', aclass='btn btn-info') }}
                </div>
            </div>
            <div class="col-sm-8">
                <p class="text-muted">
                    {% trans link=util.href(docurl("Realm_Mailinglist_Management"), gettext("subscription state"), title=gettext("Summary of subscription states")) %}
                        A download csv file of all users associated with this mailinglist (including name, email address and {{ link }}).
                    {% endtrans %}
                </p>
            </div>
        </div>
    {% endcall %}

{% endblock %}
