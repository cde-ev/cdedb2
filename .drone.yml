kind: pipeline
type: docker
name: default

workspace:
  base: /cdedb2
  path: .

clone:
  disable: true

steps:
- name: clone
  image: docker:20.10-git
  commands:
  - git clone $DRONE_GIT_HTTP_URL .
  # make use of our custom po file merge driver
  - apk add --no-cache gettext
  - echo '[merge "pomerge"]' >> ./.git/config
  - echo '    name = Gettext merge driver' >> ./.git/config
  - echo '    driver = i18n/git-merge-po.sh %O %A %B' >> ./.git/config
  - git fetch origin $DRONE_TARGET_BRANCH
  - git checkout $DRONE_TARGET_BRANCH
  - git fetch origin $DRONE_COMMIT
  - git merge $DRONE_COMMIT
- name: undo merge
  image: docker:20.10-git
  commands:
  - git merge --abort
  - git checkout $DRONE_COMMIT
  depends_on:
  - clone
  when:
    status:
    - failure
- name: build images
  image: docker:20.10-git
  volumes:
  - name: dockersock
    path: /var/run/docker.sock
  commands:
  # we do not tag a version as this would create many images
  # which would not be cleared from docker cache
  - docker build --file related/docker/Dockerfile-postgres --tag cdepostgres .
  - docker build --file related/docker/Dockerfile-cdedb --tag cdedb .
  depends_on:
  - undo merge
  when:
    status:
    - failure
    - success
- name: mypy
  image: cdedb
  pull: never # do not try to pull image from docker hub
  commands:
  - make mypy
  depends_on:
  - undo merge
  when:
    status:
    - failure
    - success
- name: lint
  image: cdedb
  pull: never # do not try to pull image from docker hub
  commands:
  - make lint
  depends_on:
  - undo merge
  when:
    status:
    - failure
    - success
- name: cdb # is used as the hostname for the container
  image: cdepostgres
  pull: never # do not try to pull image from docker hub
  detach: true # detach to keep running for the following steps
  environment:
    POSTGRES_PASSWORD: passwd
  volumes:
  - name: database
    path: /var/lib/postgresql/data
  depends_on:
  - undo merge
  when:
    status:
    - failure
    - success
- name: testsuite
  image: cdedb
  pull: never # do not try to pull image from docker hub
  commands:
  - sleep 5 # wait for db to come online
  - make i18n-compile # required for sample-data target
  - make sample-data # this creates the sql schema and copies the localconfig.py
  - make check
  depends_on:
  - cdb # only needs db allowing mypy and lint to run parallel to this
  when:
    status:
    - failure
    - success

volumes:
- name: dockersock
  host:
    path: /var/run/docker.sock
- name: database
  temp:
    medium: memory

trigger:
  branch:
  - master
